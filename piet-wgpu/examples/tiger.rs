{let mut path = BezPath::new();
path.move_to((27.01 + x, 90.57 + y));
path.curve_to((27.01 + x, 90.57 + y), (27.05 + x, 91.31 + y), (26.73 + x, 91.31 + y));
path.curve_to((26.41 + x, 91.30 + y), (19.95 + x, 72.44 + y), (11.90 + x, 73.32 + y));
path.curve_to((11.90 + x, 73.32 + y), (18.87 + x, 70.43 + y), (27.01 + x, 90.57 + y));
path.close_path();
path.move_to((28.40 + x, 89.38 + y));
path.curve_to((28.40 + x, 89.38 + y), (28.18 + x, 90.10 + y), (27.88 + x, 89.98 + y));
path.curve_to((27.58 + x, 89.86 + y), (27.92 + x, 69.93 + y), (20.05 + x, 68.02 + y));
path.curve_to((20.05 + x, 68.02 + y), (27.59 + x, 67.68 + y), (28.40 + x, 89.38 + y));
path.close_path();
path.move_to((39.18 + x, 105.99 + y));
path.curve_to((39.18 + x, 105.99 + y), (39.83 + x, 106.37 + y), (39.64 + x, 106.64 + y));
path.curve_to((39.46 + x, 106.90 + y), (20.16 + x, 101.88 + y), (16.45 + x, 109.08 + y));
path.curve_to((16.45 + x, 109.08 + y), (17.89 + x, 101.67 + y), (39.18 + x, 105.99 + y));
path.close_path();
path.move_to((38.08 + x, 110.00 + y));
path.curve_to((38.08 + x, 110.00 + y), (38.81 + x, 110.16 + y), (38.72 + x, 110.46 + y));
path.curve_to((38.63 + x, 110.77 + y), (18.73 + x, 112.09 + y), (17.48 + x, 120.09 + y));
path.curve_to((17.48 + x, 120.09 + y), (16.51 + x, 112.60 + y), (38.08 + x, 110.00 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.01);
let mut path = BezPath::new();
path.move_to((36.43 + x, 107.83 + y));
path.curve_to((36.43 + x, 107.83 + y), (37.13 + x, 108.09 + y), (36.99 + x, 108.39 + y));
path.curve_to((36.86 + x, 108.68 + y), (16.98 + x, 107.08 + y), (14.58 + x, 114.81 + y));
path.curve_to((14.58 + x, 114.81 + y), (14.71 + x, 107.26 + y), (36.43 + x, 107.83 + y));
path.close_path();
path.move_to((32.23 + x, 100.69 + y));
path.curve_to((32.23 + x, 100.69 + y), (32.74 + x, 101.23 + y), (32.49 + x, 101.43 + y));
path.curve_to((32.24 + x, 101.64 + y), (15.08 + x, 91.49 + y), (9.53 + x, 97.40 + y));
path.curve_to((9.53 + x, 97.40 + y), (12.96 + x, 90.67 + y), (32.23 + x, 100.69 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.01);
let mut path = BezPath::new();
path.move_to((29.27 + x, 102.33 + y));
path.curve_to((29.27 + x, 102.33 + y), (29.84 + x, 102.81 + y), (29.61 + x, 103.04 + y));
path.curve_to((29.39 + x, 103.27 + y), (11.18 + x, 95.14 + y), (6.34 + x, 101.63 + y));
path.curve_to((6.34 + x, 101.63 + y), (8.98 + x, 94.56 + y), (29.27 + x, 102.33 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.01);
let mut path = BezPath::new();
path.move_to((28.25 + x, 103.93 + y));
path.curve_to((28.25 + x, 103.93 + y), (28.88 + x, 104.33 + y), (28.68 + x, 104.59 + y));
path.curve_to((28.49 + x, 104.85 + y), (9.35 + x, 99.27 + y), (5.44 + x, 106.36 + y));
path.curve_to((5.44 + x, 106.36 + y), (7.09 + x, 98.99 + y), (28.25 + x, 103.93 + y));
path.close_path();
path.move_to((32.46 + x, 104.17 + y));
path.curve_to((32.46 + x, 104.17 + y), (32.90 + x, 104.77 + y), (32.62 + x, 104.95 + y));
path.curve_to((32.35 + x, 105.11 + y), (16.63 + x, 92.85 + y), (10.37 + x, 98.00 + y));
path.curve_to((10.37 + x, 98.00 + y), (14.63 + x, 91.76 + y), (32.46 + x, 104.17 + y));
path.close_path();
path.move_to((24.70 + x, 92.81 + y));
path.curve_to((24.70 + x, 92.81 + y), (24.93 + x, 93.52 + y), (24.62 + x, 93.60 + y));
path.curve_to((24.31 + x, 93.68 + y), (13.09 + x, 77.20 + y), (5.55 + x, 80.18 + y));
path.curve_to((5.55 + x, 80.18 + y), (11.52 + x, 75.55 + y), (24.70 + x, 92.81 + y));
path.close_path();
path.move_to((24.97 + x, 95.55 + y));
path.curve_to((24.97 + x, 95.55 + y), (25.35 + x, 96.19 + y), (25.06 + x, 96.33 + y));
path.curve_to((24.77 + x, 96.48 + y), (10.26 + x, 82.81 + y), (3.55 + x, 87.34 + y));
path.curve_to((3.55 + x, 87.34 + y), (8.38 + x, 81.54 + y), (24.97 + x, 95.55 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.01);
let mut path = BezPath::new();
path.move_to((24.93 + x, 97.27 + y));
path.curve_to((24.93 + x, 97.27 + y), (25.37 + x, 97.87 + y), (25.09 + x, 98.04 + y));
path.curve_to((24.82 + x, 98.21 + y), (9.09 + x, 85.95 + y), (2.83 + x, 91.09 + y));
path.curve_to((2.83 + x, 91.09 + y), (7.10 + x, 84.86 + y), (24.93 + x, 97.27 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.01);
let mut path = BezPath::new();
path.move_to((24.06 + x, 97.94 + y));
path.curve_to((24.25 + x, 100.31 + y), (24.64 + x, 102.89 + y), (25.33 + x, 104.11 + y));
path.curve_to((25.33 + x, 104.11 + y), (23.91 + x, 108.98 + y), (27.37 + x, 114.16 + y));
path.curve_to((27.37 + x, 114.16 + y), (27.21 + x, 116.98 + y), (27.84 + x, 118.24 + y));
path.curve_to((27.84 + x, 118.24 + y), (29.41 + x, 121.53 + y), (31.29 + x, 121.85 + y));
path.curve_to((32.81 + x, 122.10 + y), (36.24 + x, 123.31 + y), (40.11 + x, 123.86 + y));
path.curve_to((40.11 + x, 123.86 + y), (46.83 + x, 129.38 + y), (45.57 + x, 134.40 + y));
path.curve_to((45.57 + x, 134.40 + y), (45.42 + x, 140.84 + y), (44.00 + x, 141.47 + y));
path.curve_to((44.00 + x, 141.47 + y), (48.55 + x, 137.07 + y), (44.79 + x, 143.66 + y));
path.line_to((43.06 + x, 151.04 + y));
path.curve_to((43.06 + x, 151.04 + y), (53.11 + x, 142.57 + y), (46.98 + x, 149.78 + y));
path.line_to((43.06 + x, 159.99 + y));
path.curve_to((43.06 + x, 159.99 + y), (50.75 + x, 152.77 + y), (47.93 + x, 156.06 + y));
path.line_to((46.67 + x, 159.52 + y));
path.curve_to((46.67 + x, 159.52 + y), (63.62 + x, 148.84 + y), (51.54 + x, 160.46 + y));
path.curve_to((51.54 + x, 160.46 + y), (54.67 + x, 159.04 + y), (56.40 + x, 160.14 + y));
path.curve_to((56.40 + x, 160.14 + y), (59.07 + x, 159.67 + y), (58.76 + x, 160.30 + y));
path.curve_to((58.76 + x, 160.30 + y), (50.59 + x, 164.38 + y), (49.18 + x, 171.60 + y));
path.curve_to((49.18 + x, 171.60 + y), (52.48 + x, 167.68 + y), (51.22 + x, 171.91 + y));
path.line_to((51.38 + x, 176.47 + y));
path.curve_to((51.38 + x, 176.47 + y), (52.95 + x, 167.99 + y), (52.79 + x, 182.74 + y));
path.curve_to((52.79 + x, 182.74 + y), (60.33 + x, 175.68 + y), (55.77 + x, 183.84 + y));
path.line_to((55.77 + x, 190.43 + y));
path.curve_to((55.77 + x, 190.43 + y), (61.74 + x, 184.00 + y), (59.23 + x, 189.02 + y));
path.curve_to((59.23 + x, 189.02 + y), (63.15 + x, 185.57 + y), (61.58 + x, 191.53 + y));
path.curve_to((61.58 + x, 191.53 + y), (61.27 + x, 195.61 + y), (62.99 + x, 191.22 + y));
path.curve_to((62.99 + x, 191.22 + y), (69.27 + x, 179.21 + y), (66.92 + x, 189.49 + y));
path.curve_to((66.92 + x, 189.49 + y), (66.60 + x, 197.03 + y), (68.49 + x, 191.22 + y));
path.curve_to((68.49 + x, 191.22 + y), (68.64 + x, 195.30 + y), (72.25 + x, 198.12 + y));
path.curve_to((72.25 + x, 198.12 + y), (71.78 + x, 178.19 + y), (76.81 + x, 192.32 + y));
path.line_to((78.38 + x, 198.75 + y));
path.curve_to((78.38 + x, 198.75 + y), (79.47 + x, 195.14 + y), (79.32 + x, 193.10 + y));
path.line_to((82.45 + x, 196.24 + y));
path.curve_to((82.45 + x, 196.24 + y), (88.42 + x, 187.30 + y), (87.16 + x, 192.47 + y));
path.curve_to((87.16 + x, 192.47 + y), (84.18 + x, 198.75 + y), (84.81 + x, 200.64 + y));
path.curve_to((84.81 + x, 200.64 + y), (91.40 + x, 186.98 + y), (91.87 + x, 186.35 + y));
path.curve_to((91.87 + x, 186.35 + y), (91.09 + x, 202.99 + y), (95.33 + x, 188.86 + y));
path.curve_to((95.33 + x, 188.86 + y), (97.52 + x, 193.57 + y), (96.42 + x, 195.30 + y));
path.curve_to((96.42 + x, 195.30 + y), (99.56 + x, 192.16 + y), (99.25 + x, 190.90 + y));
path.curve_to((99.25 + x, 190.90 + y), (101.05 + x, 187.69 + y), (102.15 + x, 193.02 + y));
path.curve_to((102.15 + x, 193.02 + y), (102.86 + x, 196.71 + y), (103.49 + x, 195.46 + y));
path.curve_to((103.49 + x, 195.46 + y), (105.06 + x, 204.87 + y), (105.53 + x, 195.93 + y));
path.curve_to((105.53 + x, 195.93 + y), (106.15 + x, 190.59 + y), (103.33 + x, 186.04 + y));
path.curve_to((103.33 + x, 186.04 + y), (103.64 + x, 184.78 + y), (102.54 + x, 183.21 + y));
path.curve_to((102.54 + x, 183.21 + y), (107.88 + x, 191.69 + y), (105.06 + x, 180.39 + y));
path.curve_to((105.06 + x, 180.39 + y), (109.45 + x, 183.53 + y), (109.92 + x, 183.53 + y));
path.curve_to((109.92 + x, 183.53 + y), (104.58 + x, 174.43 + y), (108.04 + x, 176.31 + y));
path.curve_to((108.04 + x, 176.31 + y), (106.00 + x, 172.23 + y), (113.06 + x, 176.94 + y));
path.curve_to((113.06 + x, 176.94 + y), (106.78 + x, 170.66 + y), (113.69 + x, 174.43 + y));
path.curve_to((113.69 + x, 174.43 + y), (116.83 + x, 176.94 + y), (113.84 + x, 173.01 + y));
path.curve_to((113.84 + x, 173.01 + y), (108.19 + x, 166.74 + y), (116.83 + x, 173.80 + y));
path.curve_to((116.83 + x, 173.80 + y), (121.38 + x, 180.23 + y), (121.69 + x, 181.33 + y));
path.curve_to((121.69 + x, 181.33 + y), (117.77 + x, 169.87 + y), (116.04 + x, 168.78 + y));
path.curve_to((116.04 + x, 168.78 + y), (119.34 + x, 154.49 + y), (135.50 + x, 160.61 + y));
path.curve_to((135.50 + x, 160.61 + y), (138.17 + x, 167.36 + y), (139.90 + x, 160.14 + y));
path.curve_to((139.90 + x, 160.14 + y), (144.92 + x, 157.63 + y), (149.31 + x, 168.46 + y));
path.curve_to((149.31 + x, 168.46 + y), (150.88 + x, 163.12 + y), (150.57 + x, 162.03 + y));
path.curve_to((150.57 + x, 162.03 + y), (153.24 + x, 162.50 + y), (152.92 + x, 162.03 + y));
path.curve_to((152.92 + x, 162.03 + y), (158.10 + x, 163.75 + y), (158.57 + x, 163.44 + y));
path.curve_to((158.57 + x, 163.44 + y), (161.24 + x, 166.11 + y), (161.40 + x, 164.69 + y));
path.curve_to((161.40 + x, 164.69 + y), (165.01 + x, 165.79 + y), (164.22 + x, 164.38 + y));
path.curve_to((164.22 + x, 164.38 + y), (167.68 + x, 170.50 + y), (167.83 + x, 171.91 + y));
path.line_to((168.78 + x, 166.42 + y));
path.line_to((169.56 + x, 167.52 + y));
path.curve_to((169.56 + x, 167.52 + y), (170.19 + x, 164.54 + y), (169.87 + x, 164.07 + y));
path.curve_to((169.56 + x, 163.60 + y), (177.72 + x, 166.74 + y), (179.60 + x, 174.90 + y));
path.line_to((180.39 + x, 178.19 + y));
path.curve_to((180.39 + x, 178.19 + y), (182.74 + x, 172.39 + y), (182.12 + x, 170.82 + y));
path.curve_to((182.12 + x, 170.82 + y), (184.16 + x, 171.13 + y), (184.31 + x, 172.86 + y));
path.curve_to((184.31 + x, 172.86 + y), (185.88 + x, 163.75 + y), (184.00 + x, 161.40 + y));
path.curve_to((184.00 + x, 161.40 + y), (185.73 + x, 161.09 + y), (186.20 + x, 162.50 + y));
path.line_to((186.20 + x, 159.67 + y));
path.curve_to((186.20 + x, 159.67 + y), (189.02 + x, 159.99 + y), (189.02 + x, 159.04 + y));
path.curve_to((189.02 + x, 159.04 + y), (190.75 + x, 157.47 + y), (191.53 + x, 159.36 + y));
path.curve_to((191.53 + x, 159.36 + y), (186.67 + x, 145.55 + y), (193.89 + x, 153.08 + y));
path.curve_to((193.89 + x, 153.08 + y), (196.71 + x, 157.32 + y), (195.30 + x, 149.94 + y));
path.curve_to((193.89 + x, 142.56 + y), (192.32 + x, 141.94 + y), (194.20 + x, 141.78 + y));
path.curve_to((194.20 + x, 141.78 + y), (194.51 + x, 140.37 + y), (193.73 + x, 139.74 + y));
path.curve_to((192.94 + x, 139.11 + y), (194.20 + x, 139.74 + y), (194.20 + x, 139.74 + y));
path.curve_to((194.20 + x, 139.74 + y), (196.08 + x, 141.31 + y), (194.04 + x, 132.68 + y));
path.curve_to((194.04 + x, 132.68 + y), (196.55 + x, 133.31 + y), (191.85 + x, 121.85 + y));
path.curve_to((191.85 + x, 121.85 + y), (192.94 + x, 120.91 + y), (191.38 + x, 117.61 + y));
path.curve_to((191.38 + x, 117.61 + y), (194.51 + x, 119.34 + y), (195.61 + x, 118.71 + y));
path.curve_to((195.61 + x, 118.71 + y), (195.46 + x, 118.08 + y), (194.20 + x, 116.51 + y));
path.curve_to((194.20 + x, 116.51 + y), (185.73 + x, 95.01 + y), (193.73 + x, 103.64 + y));
path.curve_to((193.73 + x, 103.64 + y), (198.38 + x, 108.96 + y), (195.87 + x, 100.01 + y));
path.curve_to((195.87 + x, 100.01 + y), (192.29 + x, 90.59 + y), (192.60 + x, 88.91 + y));
path.line_to((24.06 + x, 97.94 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.39);
let mut path = BezPath::new();
path.move_to((192.60 + x, 88.98 + y));
path.curve_to((192.84 + x, 89.06 + y), (193.71 + x, 89.50 + y), (194.20 + x, 90.14 + y));
path.curve_to((194.20 + x, 90.14 + y), (196.87 + x, 94.38 + y), (194.83 + x, 87.16 + y));
path.curve_to((194.83 + x, 87.16 + y), (191.22 + x, 75.86 + y), (194.67 + x, 80.26 + y));
path.curve_to((194.67 + x, 80.26 + y), (197.03 + x, 83.08 + y), (195.77 + x, 77.75 + y));
path.curve_to((194.26 + x, 71.30 + y), (193.26 + x, 68.80 + y), (193.26 + x, 68.80 + y));
path.curve_to((193.26 + x, 68.80 + y), (197.81 + x, 70.68 + y), (187.29 + x, 55.15 + y));
path.line_to((190.75 + x, 56.56 + y));
path.curve_to((190.75 + x, 56.56 + y), (183.06 + x, 41.02 + y), (174.58 + x, 38.98 + y));
path.line_to((171.44 + x, 36.63 + y));
path.curve_to((171.44 + x, 36.63 + y), (186.51 + x, 21.72 + y), (181.49 + x, 7.28 + y));
path.curve_to((181.49 + x, 7.28 + y), (178.82 + x, 5.24 + y), (175.05 + x, 8.85 + y));
path.curve_to((175.05 + x, 8.85 + y), (172.54 + x, 10.73 + y), (170.19 + x, 10.10 + y));
path.curve_to((170.19 + x, 10.10 + y), (158.10 + x, 10.57 + y), (157.32 + x, 10.57 + y));
path.curve_to((156.53 + x, 10.57 + y), (142.88 + x, -4.02 + y), (117.14 + x, 2.88 + y));
path.curve_to((117.14 + x, 2.88 + y), (115.10 + x, 3.67 + y), (113.37 + x, 3.20 + y));
path.curve_to((113.37 + x, 3.20 + y), (106.15 + x, -3.08 + y), (87.01 + x, 5.87 + y));
path.curve_to((87.01 + x, 5.87 + y), (83.08 + x, 6.65 + y), (82.45 + x, 6.65 + y));
path.curve_to((81.83 + x, 6.65 + y), (80.73 + x, 6.65 + y), (77.59 + x, 9.16 + y));
path.curve_to((74.45 + x, 11.67 + y), (74.29 + x, 11.99 + y), (73.51 + x, 12.61 + y));
path.curve_to((73.51 + x, 12.61 + y), (67.07 + x, 17.01 + y), (65.19 + x, 17.32 + y));
path.curve_to((65.19 + x, 17.32 + y), (60.64 + x, 19.83 + y), (58.91 + x, 23.76 + y));
path.line_to((57.50 + x, 24.23 + y));
path.curve_to((57.50 + x, 24.23 + y), (56.87 + x, 27.05 + y), (56.72 + x, 27.52 + y));
path.curve_to((56.72 + x, 27.52 + y), (54.83 + x, 28.94 + y), (54.52 + x, 31.13 + y));
path.curve_to((54.52 + x, 31.13 + y), (51.07 + x, 33.49 + y), (51.22 + x, 35.21 + y));
path.curve_to((51.22 + x, 35.21 + y), (50.60 + x, 37.25 + y), (50.28 + x, 39.14 + y));
path.curve_to((50.28 + x, 39.14 + y), (47.46 + x, 41.02 + y), (47.77 + x, 42.12 + y));
path.curve_to((47.77 + x, 42.12 + y), (44.79 + x, 47.61 + y), (45.26 + x, 50.28 + y));
path.curve_to((45.26 + x, 50.28 + y), (42.75 + x, 50.12 + y), (41.65 + x, 51.06 + y));
path.curve_to((41.65 + x, 51.06 + y), (41.34 + x, 52.95 + y), (40.71 + x, 53.10 + y));
path.curve_to((40.71 + x, 53.10 + y), (39.61 + x, 53.58 + y), (40.55 + x, 55.14 + y));
path.curve_to((40.55 + x, 55.14 + y), (39.92 + x, 56.24 + y), (39.77 + x, 56.87 + y));
path.curve_to((39.77 + x, 56.87 + y), (40.08 + x, 57.97 + y), (38.35 + x, 60.17 + y));
path.curve_to((38.35 + x, 60.17 + y), (35.84 + x, 67.54 + y), (36.63 + x, 69.58 + y));
path.curve_to((36.63 + x, 69.58 + y), (36.78 + x, 71.47 + y), (35.69 + x, 72.10 + y));
path.curve_to((35.69 + x, 72.10 + y), (34.27 + x, 71.94 + y), (37.57 + x, 76.65 + y));
path.curve_to((37.57 + x, 76.65 + y), (37.88 + x, 77.12 + y), (36.63 + x, 78.06 + y));
path.curve_to((36.63 + x, 78.06 + y), (29.88 + x, 79.47 + y), (28.94 + x, 85.91 + y));
path.curve_to((28.94 + x, 85.91 + y), (23.60 + x, 91.71 + y), (23.60 + x, 93.75 + y));
path.curve_to((23.60 + x, 94.66 + y), (23.71 + x, 95.89 + y), (23.98 + x, 97.70 + y));
path.curve_to((23.98 + x, 97.70 + y), (23.76 + x, 100.97 + y), (34.59 + x, 101.29 + y));
path.curve_to((45.42 + x, 101.60 + y), (192.60 + x, 88.98 + y), (192.60 + x, 88.98 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0x72,0x26,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.39);
let mut path = BezPath::new();
path.move_to((29.64 + x, 97.76 + y));
path.curve_to((19.83 + x, 82.30 + y), (25.48 + x, 104.43 + y), (25.48 + x, 104.43 + y));
path.curve_to((28.94 + x, 117.92 + y), (79.79 + x, 103.17 + y), (79.79 + x, 103.17 + y));
path.curve_to((79.79 + x, 103.17 + y), (146.02 + x, 91.24 + y), (150.41 + x, 89.67 + y));
path.curve_to((154.81 + x, 88.11 + y), (192.16 + x, 90.62 + y), (192.16 + x, 90.62 + y));
path.line_to((189.96 + x, 84.02 + y));
path.curve_to((164.54 + x, 65.82 + y), (157.00 + x, 74.92 + y), (151.67 + x, 73.35 + y));
path.curve_to((146.33 + x, 71.78 + y), (147.27 + x, 75.55 + y), (146.02 + x, 75.86 + y));
path.curve_to((144.76 + x, 76.18 + y), (129.38 + x, 66.45 + y), (126.87 + x, 66.76 + y));
path.curve_to((124.36 + x, 67.07 + y), (114.42 + x, 57.76 + y), (120.28 + x, 70.21 + y));
path.curve_to((126.56 + x, 83.55 + y), (97.37 + x, 85.59 + y), (90.77 + x, 81.20 + y));
path.curve_to((84.18 + x, 76.81 + y), (93.60 + x, 88.42 + y), (93.60 + x, 88.42 + y));
path.curve_to((100.82 + x, 96.27 + y), (87.32 + x, 89.67 + y), (87.32 + x, 89.67 + y));
path.curve_to((73.82 + x, 84.65 + y), (64.41 + x, 94.70 + y), (63.15 + x, 95.01 + y));
path.curve_to((61.89 + x, 95.32 + y), (60.01 + x, 96.58 + y), (59.70 + x, 94.07 + y));
path.curve_to((59.38 + x, 91.56 + y), (56.44 + x, 85.00 + y), (44.00 + x, 95.32 + y));
path.curve_to((36.16 + x, 101.84 + y), (30.74 + x, 93.20 + y), (30.74 + x, 93.20 + y));
path.line_to((29.64 + x, 97.76 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0x72,0x26,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((127.39 + x, 67.44 + y));
path.curve_to((124.87 + x, 67.76 + y), (114.92 + x, 58.44 + y), (120.79 + x, 70.90 + y));
path.curve_to((127.31 + x, 84.71 + y), (97.88 + x, 86.28 + y), (91.29 + x, 81.88 + y));
path.curve_to((84.70 + x, 77.49 + y), (94.11 + x, 89.10 + y), (94.11 + x, 89.10 + y));
path.curve_to((101.33 + x, 96.95 + y), (87.83 + x, 90.36 + y), (87.83 + x, 90.36 + y));
path.curve_to((74.34 + x, 85.34 + y), (64.92 + x, 95.38 + y), (63.66 + x, 95.69 + y));
path.curve_to((62.41 + x, 96.01 + y), (60.52 + x, 97.27 + y), (60.21 + x, 94.75 + y));
path.curve_to((59.90 + x, 92.24 + y), (57.00 + x, 85.75 + y), (44.52 + x, 96.01 + y));
path.curve_to((36.18 + x, 102.81 + y), (30.89 + x, 94.40 + y), (30.89 + x, 94.40 + y));
path.line_to((29.63 + x, 98.36 + y));
path.curve_to((19.82 + x, 82.75 + y), (25.74 + x, 105.63 + y), (25.74 + x, 105.63 + y));
path.curve_to((29.19 + x, 119.12 + y), (80.30 + x, 103.86 + y), (80.30 + x, 103.86 + y));
path.curve_to((80.30 + x, 103.86 + y), (146.53 + x, 91.93 + y), (150.93 + x, 90.36 + y));
path.curve_to((155.32 + x, 88.79 + y), (192.33 + x, 91.27 + y), (192.33 + x, 91.27 + y));
path.line_to((190.16 + x, 84.48 + y));
path.curve_to((164.74 + x, 66.28 + y), (157.52 + x, 75.61 + y), (152.18 + x, 74.04 + y));
path.curve_to((146.85 + x, 72.47 + y), (147.79 + x, 76.23 + y), (146.53 + x, 76.55 + y));
path.curve_to((145.28 + x, 76.86 + y), (129.90 + x, 67.13 + y), (127.39 + x, 67.45 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xe8,0x7f,0x3a,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((127.90 + x, 68.13 + y));
path.curve_to((125.39 + x, 68.44 + y), (115.68 + x, 59.01 + y), (121.31 + x, 71.58 + y));
path.curve_to((127.66 + x, 85.79 + y), (98.39 + x, 86.96 + y), (91.80 + x, 82.57 + y));
path.curve_to((85.21 + x, 78.17 + y), (94.63 + x, 89.79 + y), (94.63 + x, 89.79 + y));
path.curve_to((101.85 + x, 97.63 + y), (88.35 + x, 91.04 + y), (88.35 + x, 91.04 + y));
path.curve_to((74.85 + x, 86.02 + y), (65.43 + x, 96.07 + y), (64.18 + x, 96.38 + y));
path.curve_to((62.92 + x, 96.69 + y), (61.04 + x, 97.95 + y), (60.72 + x, 95.44 + y));
path.curve_to((60.41 + x, 92.93 + y), (57.57 + x, 86.51 + y), (45.03 + x, 96.69 + y));
path.curve_to((36.21 + x, 103.79 + y), (31.04 + x, 95.59 + y), (31.04 + x, 95.59 + y));
path.line_to((29.63 + x, 98.97 + y));
path.curve_to((20.29 + x, 83.67 + y), (26.00 + x, 106.82 + y), (26.00 + x, 106.82 + y));
path.curve_to((29.45 + x, 120.32 + y), (80.81 + x, 104.54 + y), (80.81 + x, 104.54 + y));
path.curve_to((80.81 + x, 104.54 + y), (147.05 + x, 92.61 + y), (151.44 + x, 91.04 + y));
path.curve_to((155.84 + x, 89.47 + y), (192.50 + x, 91.93 + y), (192.50 + x, 91.93 + y));
path.line_to((190.36 + x, 84.94 + y));
path.curve_to((164.94 + x, 66.73 + y), (158.03 + x, 76.29 + y), (152.70 + x, 74.72 + y));
path.curve_to((147.36 + x, 73.15 + y), (148.30 + x, 76.92 + y), (147.05 + x, 77.23 + y));
path.curve_to((145.79 + x, 77.55 + y), (130.41 + x, 67.82 + y), (127.90 + x, 68.13 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xea,0x8c,0x4d,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((128.41 + x, 68.81 + y));
path.curve_to((125.90 + x, 69.13 + y), (116.20 + x, 59.70 + y), (121.82 + x, 72.27 + y));
path.curve_to((128.41 + x, 87.00 + y), (98.70 + x, 87.51 + y), (92.31 + x, 83.25 + y));
path.curve_to((85.72 + x, 78.86 + y), (95.14 + x, 90.47 + y), (95.14 + x, 90.47 + y));
path.curve_to((102.36 + x, 98.32 + y), (88.86 + x, 91.73 + y), (88.86 + x, 91.73 + y));
path.curve_to((75.36 + x, 86.71 + y), (65.95 + x, 96.75 + y), (64.69 + x, 97.07 + y));
path.curve_to((63.44 + x, 97.38 + y), (61.55 + x, 98.64 + y), (61.24 + x, 96.12 + y));
path.curve_to((60.93 + x, 93.61 + y), (58.13 + x, 87.26 + y), (45.54 + x, 97.38 + y));
path.curve_to((36.24 + x, 104.77 + y), (31.19 + x, 96.78 + y), (31.19 + x, 96.78 + y));
path.line_to((29.62 + x, 99.58 + y));
path.curve_to((21.07 + x, 85.14 + y), (26.25 + x, 108.02 + y), (26.25 + x, 108.02 + y));
path.curve_to((29.71 + x, 121.52 + y), (81.33 + x, 105.23 + y), (81.33 + x, 105.23 + y));
path.curve_to((81.33 + x, 105.23 + y), (147.56 + x, 93.30 + y), (151.96 + x, 91.73 + y));
path.curve_to((156.35 + x, 90.16 + y), (192.68 + x, 92.58 + y), (192.68 + x, 92.58 + y));
path.line_to((190.56 + x, 85.39 + y));
path.curve_to((165.14 + x, 67.19 + y), (158.55 + x, 76.97 + y), (153.21 + x, 75.41 + y));
path.curve_to((147.87 + x, 73.84 + y), (148.82 + x, 77.60 + y), (147.56 + x, 77.92 + y));
path.curve_to((146.30 + x, 78.23 + y), (130.92 + x, 68.50 + y), (128.41 + x, 68.81 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xec,0x99,0x61,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((128.93 + x, 69.50 + y));
path.curve_to((126.42 + x, 69.81 + y), (116.91 + x, 60.30 + y), (122.33 + x, 72.95 + y));
path.curve_to((128.93 + x, 88.33 + y), (99.42 + x, 88.33 + y), (92.83 + x, 83.94 + y));
path.curve_to((86.24 + x, 79.55 + y), (95.65 + x, 91.16 + y), (95.65 + x, 91.16 + y));
path.curve_to((102.87 + x, 99.00 + y), (89.37 + x, 92.41 + y), (89.37 + x, 92.41 + y));
path.curve_to((75.88 + x, 87.39 + y), (66.46 + x, 97.44 + y), (65.20 + x, 97.75 + y));
path.curve_to((63.95 + x, 98.06 + y), (62.07 + x, 99.32 + y), (61.75 + x, 96.81 + y));
path.curve_to((61.44 + x, 94.30 + y), (58.70 + x, 88.01 + y), (46.06 + x, 98.06 + y));
path.curve_to((36.27 + x, 105.75 + y), (31.34 + x, 97.97 + y), (31.34 + x, 97.97 + y));
path.line_to((29.61 + x, 100.18 + y));
path.curve_to((21.85 + x, 86.53 + y), (26.51 + x, 109.22 + y), (26.51 + x, 109.22 + y));
path.curve_to((29.96 + x, 122.72 + y), (81.84 + x, 105.91 + y), (81.84 + x, 105.91 + y));
path.curve_to((81.84 + x, 105.91 + y), (148.07 + x, 93.98 + y), (152.47 + x, 92.41 + y));
path.curve_to((156.86 + x, 90.85 + y), (192.85 + x, 93.24 + y), (192.85 + x, 93.24 + y));
path.line_to((190.76 + x, 85.85 + y));
path.curve_to((165.34 + x, 67.65 + y), (159.06 + x, 77.66 + y), (153.72 + x, 76.09 + y));
path.curve_to((148.39 + x, 74.52 + y), (149.33 + x, 78.29 + y), (148.07 + x, 78.60 + y));
path.curve_to((146.82 + x, 78.92 + y), (131.44 + x, 69.19 + y), (128.93 + x, 69.50 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xee,0xa5,0x75,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((129.44 + x, 70.18 + y));
path.curve_to((126.93 + x, 70.50 + y), (116.74 + x, 61.30 + y), (122.85 + x, 73.64 + y));
path.curve_to((130.38 + x, 88.86 + y), (99.93 + x, 89.02 + y), (93.34 + x, 84.62 + y));
path.curve_to((86.75 + x, 80.23 + y), (96.17 + x, 91.84 + y), (96.17 + x, 91.84 + y));
path.curve_to((103.39 + x, 99.69 + y), (89.89 + x, 93.10 + y), (89.89 + x, 93.10 + y));
path.curve_to((76.39 + x, 88.08 + y), (66.97 + x, 98.12 + y), (65.72 + x, 98.44 + y));
path.curve_to((64.46 + x, 98.75 + y), (62.58 + x, 100.01 + y), (62.27 + x, 97.49 + y));
path.curve_to((61.95 + x, 94.98 + y), (59.26 + x, 88.76 + y), (46.57 + x, 98.75 + y));
path.curve_to((36.30 + x, 106.73 + y), (31.49 + x, 99.16 + y), (31.49 + x, 99.16 + y));
path.line_to((29.61 + x, 100.79 + y));
path.curve_to((22.54 + x, 87.76 + y), (26.77 + x, 110.42 + y), (26.77 + x, 110.42 + y));
path.curve_to((30.22 + x, 123.92 + y), (82.36 + x, 106.60 + y), (82.36 + x, 106.60 + y));
path.curve_to((82.36 + x, 106.60 + y), (148.59 + x, 94.67 + y), (152.98 + x, 93.10 + y));
path.curve_to((157.38 + x, 91.53 + y), (193.02 + x, 93.90 + y), (193.02 + x, 93.90 + y));
path.line_to((190.96 + x, 86.31 + y));
path.curve_to((165.54 + x, 68.10 + y), (159.57 + x, 78.35 + y), (154.24 + x, 76.78 + y));
path.curve_to((148.90 + x, 75.21 + y), (149.84 + x, 78.97 + y), (148.59 + x, 79.29 + y));
path.curve_to((147.33 + x, 79.60 + y), (131.95 + x, 69.87 + y), (129.44 + x, 70.18 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xf1,0xb2,0x88,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((129.96 + x, 70.87 + y));
path.curve_to((127.44 + x, 71.18 + y), (117.11 + x, 62.06 + y), (123.36 + x, 74.32 + y));
path.curve_to((131.37 + x, 90.02 + y), (100.45 + x, 89.70 + y), (93.86 + x, 85.31 + y));
path.curve_to((87.26 + x, 80.91 + y), (96.68 + x, 92.53 + y), (96.68 + x, 92.53 + y));
path.curve_to((103.90 + x, 100.37 + y), (90.40 + x, 93.78 + y), (90.40 + x, 93.78 + y));
path.curve_to((76.91 + x, 88.76 + y), (67.49 + x, 98.80 + y), (66.23 + x, 99.12 + y));
path.curve_to((64.98 + x, 99.43 + y), (63.09 + x, 100.69 + y), (62.78 + x, 98.18 + y));
path.curve_to((62.47 + x, 95.67 + y), (59.83 + x, 89.51 + y), (47.09 + x, 99.43 + y));
path.curve_to((36.33 + x, 107.70 + y), (31.64 + x, 100.35 + y), (31.64 + x, 100.35 + y));
path.line_to((29.60 + x, 101.39 + y));
path.curve_to((23.32 + x, 89.55 + y), (27.03 + x, 111.62 + y), (27.03 + x, 111.62 + y));
path.curve_to((30.48 + x, 125.12 + y), (82.87 + x, 107.28 + y), (82.87 + x, 107.28 + y));
path.curve_to((82.87 + x, 107.28 + y), (149.10 + x, 95.35 + y), (153.49 + x, 93.78 + y));
path.curve_to((157.89 + x, 92.21 + y), (193.19 + x, 94.55 + y), (193.19 + x, 94.55 + y));
path.line_to((191.16 + x, 86.76 + y));
path.curve_to((165.74 + x, 68.56 + y), (160.09 + x, 79.03 + y), (154.75 + x, 77.46 + y));
path.curve_to((149.41 + x, 75.89 + y), (150.35 + x, 79.66 + y), (149.10 + x, 79.97 + y));
path.curve_to((147.84 + x, 80.29 + y), (132.46 + x, 70.55 + y), (129.95 + x, 70.87 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xf3,0xbf,0x9c,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((130.47 + x, 71.55 + y));
path.curve_to((127.95 + x, 71.87 + y), (117.19 + x, 62.97 + y), (123.87 + x, 75.01 + y));
path.curve_to((132.50 + x, 90.55 + y), (100.96 + x, 90.39 + y), (94.37 + x, 85.99 + y));
path.curve_to((87.78 + x, 81.60 + y), (97.19 + x, 93.21 + y), (97.19 + x, 93.21 + y));
path.curve_to((104.41 + x, 101.06 + y), (90.92 + x, 94.47 + y), (90.92 + x, 94.47 + y));
path.curve_to((77.42 + x, 89.45 + y), (68.00 + x, 99.49 + y), (66.75 + x, 99.81 + y));
path.curve_to((65.49 + x, 100.12 + y), (63.61 + x, 101.38 + y), (63.29 + x, 98.86 + y));
path.curve_to((62.98 + x, 96.35 + y), (60.39 + x, 90.26 + y), (47.60 + x, 100.12 + y));
path.curve_to((36.35 + x, 108.68 + y), (31.79 + x, 101.55 + y), (31.79 + x, 101.55 + y));
path.line_to((29.59 + x, 102.00 + y));
path.curve_to((23.94 + x, 90.86 + y), (27.28 + x, 112.82 + y), (27.28 + x, 112.82 + y));
path.curve_to((30.73 + x, 126.31 + y), (83.38 + x, 107.97 + y), (83.38 + x, 107.97 + y));
path.curve_to((83.38 + x, 107.97 + y), (149.61 + x, 96.04 + y), (154.01 + x, 94.47 + y));
path.curve_to((158.40 + x, 92.90 + y), (193.36 + x, 95.21 + y), (193.36 + x, 95.21 + y));
path.line_to((191.36 + x, 87.22 + y));
path.curve_to((165.94 + x, 69.01 + y), (160.60 + x, 79.72 + y), (155.26 + x, 78.15 + y));
path.curve_to((149.93 + x, 76.58 + y), (150.87 + x, 80.34 + y), (149.61 + x, 80.66 + y));
path.curve_to((148.36 + x, 80.97 + y), (132.98 + x, 71.24 + y), (130.47 + x, 71.55 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xf5,0xcc,0xb0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((130.98 + x, 72.24 + y));
path.curve_to((128.47 + x, 72.55 + y), (117.70 + x, 63.66 + y), (124.39 + x, 75.69 + y));
path.curve_to((133.02 + x, 91.23 + y), (101.48 + x, 91.07 + y), (94.88 + x, 86.68 + y));
path.curve_to((88.29 + x, 82.28 + y), (97.71 + x, 93.90 + y), (97.71 + x, 93.90 + y));
path.curve_to((104.93 + x, 101.74 + y), (91.43 + x, 95.15 + y), (91.43 + x, 95.15 + y));
path.curve_to((77.93 + x, 90.13 + y), (68.52 + x, 100.17 + y), (67.26 + x, 100.49 + y));
path.curve_to((66.00 + x, 100.80 + y), (64.12 + x, 102.06 + y), (63.81 + x, 99.55 + y));
path.curve_to((63.49 + x, 97.03 + y), (60.96 + x, 91.01 + y), (48.11 + x, 100.80 + y));
path.curve_to((36.38 + x, 109.66 + y), (31.94 + x, 102.74 + y), (31.94 + x, 102.74 + y));
path.line_to((29.59 + x, 102.61 + y));
path.curve_to((24.25 + x, 92.25 + y), (27.54 + x, 114.02 + y), (27.54 + x, 114.02 + y));
path.curve_to((30.99 + x, 127.51 + y), (83.90 + x, 108.65 + y), (83.90 + x, 108.65 + y));
path.curve_to((83.90 + x, 108.65 + y), (150.13 + x, 96.72 + y), (154.52 + x, 95.15 + y));
path.curve_to((158.92 + x, 93.58 + y), (193.53 + x, 95.87 + y), (193.53 + x, 95.87 + y));
path.line_to((191.56 + x, 87.68 + y));
path.curve_to((166.13 + x, 69.47 + y), (161.11 + x, 80.40 + y), (155.78 + x, 78.83 + y));
path.curve_to((150.44 + x, 77.26 + y), (151.38 + x, 81.03 + y), (150.13 + x, 81.34 + y));
path.curve_to((148.87 + x, 81.66 + y), (133.49 + x, 71.92 + y), (130.98 + x, 72.24 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xf8,0xd8,0xc4,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((131.49 + x, 72.92 + y));
path.curve_to((128.98 + x, 73.24 + y), (118.37 + x, 64.26 + y), (124.90 + x, 76.38 + y));
path.curve_to((133.53 + x, 92.39 + y), (101.99 + x, 91.76 + y), (95.40 + x, 87.36 + y));
path.curve_to((88.80 + x, 82.97 + y), (98.22 + x, 94.58 + y), (98.22 + x, 94.58 + y));
path.curve_to((105.44 + x, 102.43 + y), (91.94 + x, 95.84 + y), (91.94 + x, 95.84 + y));
path.curve_to((78.45 + x, 90.82 + y), (69.03 + x, 100.86 + y), (67.77 + x, 101.17 + y));
path.curve_to((66.52 + x, 101.49 + y), (64.63 + x, 102.74 + y), (64.32 + x, 100.23 + y));
path.curve_to((64.01 + x, 97.72 + y), (61.52 + x, 91.76 + y), (48.63 + x, 101.49 + y));
path.curve_to((36.41 + x, 110.63 + y), (32.09 + x, 103.93 + y), (32.09 + x, 103.93 + y));
path.line_to((29.58 + x, 103.22 + y));
path.curve_to((24.48 + x, 93.80 + y), (27.79 + x, 115.21 + y), (27.79 + x, 115.21 + y));
path.curve_to((31.25 + x, 128.71 + y), (84.41 + x, 109.34 + y), (84.41 + x, 109.34 + y));
path.curve_to((84.41 + x, 109.34 + y), (150.64 + x, 97.41 + y), (155.03 + x, 95.84 + y));
path.curve_to((159.43 + x, 94.27 + y), (193.70 + x, 96.52 + y), (193.70 + x, 96.52 + y));
path.line_to((191.76 + x, 88.13 + y));
path.curve_to((166.33 + x, 69.93 + y), (161.63 + x, 81.09 + y), (156.29 + x, 79.52 + y));
path.curve_to((150.95 + x, 77.95 + y), (151.90 + x, 81.71 + y), (150.64 + x, 82.03 + y));
path.curve_to((149.38 + x, 82.34 + y), (134.00 + x, 72.61 + y), (131.49 + x, 72.92 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xfa,0xe5,0xd7,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((132.01 + x, 73.61 + y));
path.curve_to((129.50 + x, 73.92 + y), (119.31 + x, 64.72 + y), (125.42 + x, 77.06 + y));
path.curve_to((133.73 + x, 93.85 + y), (102.50 + x, 92.44 + y), (95.91 + x, 88.05 + y));
path.curve_to((89.32 + x, 83.65 + y), (98.74 + x, 95.27 + y), (98.74 + x, 95.27 + y));
path.curve_to((105.96 + x, 103.12 + y), (92.46 + x, 96.52 + y), (92.46 + x, 96.52 + y));
path.curve_to((78.96 + x, 91.50 + y), (69.54 + x, 101.55 + y), (68.29 + x, 101.86 + y));
path.curve_to((67.03 + x, 102.17 + y), (65.15 + x, 103.43 + y), (64.84 + x, 100.92 + y));
path.curve_to((64.52 + x, 98.41 + y), (62.09 + x, 92.51 + y), (49.14 + x, 102.17 + y));
path.curve_to((36.44 + x, 111.61 + y), (32.24 + x, 105.12 + y), (32.24 + x, 105.12 + y));
path.line_to((29.57 + x, 103.82 + y));
path.curve_to((24.55 + x, 94.72 + y), (28.05 + x, 116.41 + y), (28.05 + x, 116.41 + y));
path.curve_to((31.51 + x, 129.91 + y), (84.92 + x, 110.02 + y), (84.92 + x, 110.02 + y));
path.curve_to((84.92 + x, 110.02 + y), (151.15 + x, 98.09 + y), (155.55 + x, 96.52 + y));
path.curve_to((159.94 + x, 94.95 + y), (193.87 + x, 97.18 + y), (193.87 + x, 97.18 + y));
path.line_to((191.96 + x, 88.59 + y));
path.curve_to((166.54 + x, 70.38 + y), (162.14 + x, 81.77 + y), (156.80 + x, 80.20 + y));
path.curve_to((151.47 + x, 78.63 + y), (152.41 + x, 82.40 + y), (151.15 + x, 82.71 + y));
path.curve_to((149.90 + x, 83.03 + y), (134.52 + x, 73.29 + y), (132.01 + x, 73.61 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xfc,0xf2,0xeb,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((29.56 + x, 104.43 + y));
path.curve_to((24.54 + x, 95.80 + y), (28.31 + x, 117.61 + y), (28.31 + x, 117.61 + y));
path.curve_to((31.76 + x, 131.11 + y), (85.44 + x, 110.71 + y), (85.44 + x, 110.71 + y));
path.curve_to((85.44 + x, 110.71 + y), (151.67 + x, 98.78 + y), (156.06 + x, 97.21 + y));
path.curve_to((160.46 + x, 95.64 + y), (194.04 + x, 97.84 + y), (194.04 + x, 97.84 + y));
path.line_to((192.16 + x, 89.05 + y));
path.curve_to((166.73 + x, 70.84 + y), (162.65 + x, 82.45 + y), (157.32 + x, 80.89 + y));
path.curve_to((151.98 + x, 79.32 + y), (152.92 + x, 83.08 + y), (151.67 + x, 83.40 + y));
path.curve_to((150.41 + x, 83.71 + y), (135.03 + x, 73.98 + y), (132.52 + x, 74.29 + y));
path.curve_to((130.01 + x, 74.61 + y), (120.11 + x, 65.27 + y), (125.93 + x, 77.75 + y));
path.curve_to((134.65 + x, 96.47 + y), (102.09 + x, 92.51 + y), (96.42 + x, 88.73 + y));
path.curve_to((89.83 + x, 84.34 + y), (99.25 + x, 95.95 + y), (99.25 + x, 95.95 + y));
path.curve_to((106.47 + x, 103.80 + y), (92.97 + x, 97.21 + y), (92.97 + x, 97.21 + y));
path.curve_to((79.47 + x, 92.19 + y), (70.06 + x, 102.23 + y), (68.80 + x, 102.54 + y));
path.curve_to((67.54 + x, 102.86 + y), (65.66 + x, 104.11 + y), (65.35 + x, 101.60 + y));
path.curve_to((65.03 + x, 99.09 + y), (62.65 + x, 93.26 + y), (49.65 + x, 102.86 + y));
path.curve_to((36.47 + x, 112.59 + y), (32.39 + x, 106.31 + y), (32.39 + x, 106.31 + y));
path.line_to((29.56 + x, 104.43 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((45.89 + x, 116.20 + y));
path.curve_to((45.89 + x, 116.20 + y), (43.06 + x, 120.75 + y), (51.22 + x, 125.93 + y));
path.curve_to((51.22 + x, 125.93 + y), (51.77 + x, 126.48 + y), (44.71 + x, 124.83 + y));
path.curve_to((44.71 + x, 124.83 + y), (42.28 + x, 124.05 + y), (41.65 + x, 119.97 + y));
path.curve_to((41.65 + x, 119.97 + y), (39.77 + x, 118.24 + y), (37.88 + x, 116.04 + y));
path.curve_to((36.00 + x, 113.84 + y), (45.89 + x, 116.20 + y), (45.89 + x, 116.20 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((100.82 + x, 97.52 + y));
path.curve_to((100.82 + x, 97.52 + y), (107.76 + x, 108.05 + y), (107.53 + x, 109.92 + y));
path.curve_to((107.02 + x, 114.00 + y), (106.94 + x, 117.77 + y), (108.19 + x, 119.34 + y));
path.curve_to((109.45 + x, 120.91 + y), (112.90 + x, 133.93 + y), (112.90 + x, 133.93 + y));
path.curve_to((112.90 + x, 133.93 + y), (112.75 + x, 134.40 + y), (117.61 + x, 119.49 + y));
path.curve_to((117.61 + x, 119.49 + y), (122.16 + x, 113.22 + y), (114.31 + x, 106.00 + y));
path.curve_to((114.31 + x, 106.00 + y), (100.50 + x, 94.70 + y), (100.82 + x, 97.52 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0xcc,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((53.73 + x, 126.71 + y));
path.curve_to((53.73 + x, 126.71 + y), (58.13 + x, 129.54 + y), (52.48 + x, 141.78 + y));
path.line_to((54.99 + x, 140.84 + y));
path.curve_to((54.99 + x, 140.84 + y), (54.68 + x, 145.23 + y), (53.42 + x, 146.18 + y));
path.line_to((56.25 + x, 144.92 + y));
path.curve_to((56.25 + x, 144.92 + y), (58.13 + x, 148.06 + y), (56.56 + x, 149.94 + y));
path.curve_to((56.56 + x, 149.94 + y), (63.15 + x, 153.08 + y), (62.84 + x, 155.59 + y));
path.curve_to((62.84 + x, 155.59 + y), (65.35 + x, 152.45 + y), (63.78 + x, 149.94 + y));
path.curve_to((62.21 + x, 147.43 + y), (59.38 + x, 149.00 + y), (59.70 + x, 141.78 + y));
path.line_to((56.25 + x, 143.04 + y));
path.curve_to((56.25 + x, 143.04 + y), (58.44 + x, 139.58 + y), (58.44 + x, 137.07 + y));
path.line_to((55.30 + x, 138.01 + y));
path.curve_to((55.30 + x, 138.01 + y), (61.37 + x, 127.58 + y), (57.19 + x, 127.03 + y));
path.curve_to((54.83 + x, 126.71 + y), (53.73 + x, 126.71 + y), (53.73 + x, 126.71 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((66.45 + x, 133.31 + y));
path.curve_to((66.45 + x, 133.31 + y), (67.55 + x, 131.58 + y), (66.45 + x, 131.89 + y));
path.curve_to((65.35 + x, 132.21 + y), (53.11 + x, 138.01 + y), (50.75 + x, 141.78 + y));
path.curve_to((50.75 + x, 141.78 + y), (64.25 + x, 132.21 + y), (66.45 + x, 133.31 + y));
path.close_path();
path.move_to((70.53 + x, 136.44 + y));
path.curve_to((70.53 + x, 136.44 + y), (71.63 + x, 134.72 + y), (70.53 + x, 135.03 + y));
path.curve_to((69.43 + x, 135.35 + y), (57.19 + x, 141.15 + y), (54.83 + x, 144.92 + y));
path.curve_to((54.83 + x, 144.92 + y), (68.33 + x, 135.34 + y), (70.53 + x, 136.44 + y));
path.close_path();
path.move_to((75.71 + x, 130.48 + y));
path.curve_to((75.71 + x, 130.48 + y), (76.81 + x, 128.75 + y), (75.71 + x, 129.07 + y));
path.curve_to((74.61 + x, 129.38 + y), (62.37 + x, 135.19 + y), (60.01 + x, 138.96 + y));
path.curve_to((60.01 + x, 138.96 + y), (73.51 + x, 129.38 + y), (75.71 + x, 130.48 + y));
path.close_path();
path.move_to((66.60 + x, 147.59 + y));
path.curve_to((66.60 + x, 147.59 + y), (66.60 + x, 145.23 + y), (65.51 + x, 145.55 + y));
path.curve_to((64.41 + x, 145.86 + y), (50.28 + x, 152.77 + y), (47.93 + x, 156.53 + y));
path.curve_to((47.93 + x, 156.53 + y), (64.41 + x, 146.49 + y), (66.60 + x, 147.59 + y));
path.close_path();
path.move_to((67.07 + x, 143.35 + y));
path.curve_to((67.07 + x, 143.35 + y), (67.55 + x, 141.47 + y), (66.45 + x, 141.78 + y));
path.curve_to((65.66 + x, 141.78 + y), (55.30 + x, 146.33 + y), (52.95 + x, 150.10 + y));
path.curve_to((52.95 + x, 150.10 + y), (64.56 + x, 141.62 + y), (67.07 + x, 143.35 + y));
path.close_path();
path.move_to((61.42 + x, 162.03 + y));
path.line_to((57.50 + x, 165.01 + y));
path.curve_to((57.50 + x, 165.01 + y), (61.58 + x, 162.03 + y), (62.99 + x, 162.50 + y));
path.curve_to((62.99 + x, 162.50 + y), (60.33 + x, 166.89 + y), (60.01 + x, 168.93 + y));
path.curve_to((60.01 + x, 168.93 + y), (64.09 + x, 163.91 + y), (66.29 + x, 164.07 + y));
path.curve_to((66.29 + x, 164.07 + y), (69.27 + x, 164.22 + y), (69.27 + x, 168.46 + y));
path.curve_to((69.27 + x, 168.46 + y), (71.47 + x, 164.38 + y), (72.72 + x, 164.54 + y));
path.curve_to((72.72 + x, 164.54 + y), (73.20 + x, 167.05 + y), (72.72 + x, 169.72 + y));
path.curve_to((72.72 + x, 169.72 + y), (74.29 + x, 166.74 + y), (75.86 + x, 167.36 + y));
path.curve_to((75.86 + x, 167.36 + y), (78.37 + x, 166.58 + y), (78.06 + x, 171.13 + y));
path.curve_to((78.06 + x, 171.13 + y), (78.06 + x, 175.21 + y), (77.75 + x, 176.31 + y));
path.curve_to((77.75 + x, 176.31 + y), (79.94 + x, 165.95 + y), (80.89 + x, 165.79 + y));
path.curve_to((80.89 + x, 165.79 + y), (84.03 + x, 165.32 + y), (85.91 + x, 168.78 + y));
path.curve_to((85.91 + x, 168.78 + y), (84.34 + x, 165.79 + y), (86.22 + x, 166.58 + y));
path.curve_to((86.22 + x, 166.58 + y), (90.46 + x, 167.21 + y), (91.72 + x, 169.87 + y));
path.curve_to((91.72 + x, 169.87 + y), (89.05 + x, 165.17 + y), (91.24 + x, 166.42 + y));
path.line_to((94.38 + x, 168.93 + y));
path.curve_to((94.38 + x, 168.93 + y), (97.68 + x, 177.25 + y), (98.46 + x, 177.88 + y));
path.curve_to((98.46 + x, 177.88 + y), (95.48 + x, 169.40 + y), (96.11 + x, 169.40 + y));
path.curve_to((96.11 + x, 169.40 + y), (95.32 + x, 164.69 + y), (97.36 + x, 170.50 + y));
path.curve_to((97.36 + x, 170.50 + y), (96.11 + x, 165.01 + y), (98.31 + x, 165.32 + y));
path.curve_to((100.50 + x, 165.64 + y), (102.23 + x, 169.56 + y), (105.53 + x, 168.62 + y));
path.curve_to((105.53 + x, 168.62 + y), (109.29 + x, 170.82 + y), (110.08 + x, 143.66 + y));
path.line_to((61.42 + x, 162.03 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0xcc,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((63.31 + x, 125.61 + y));
path.curve_to((63.31 + x, 125.61 + y), (69.12 + x, 123.26 + y), (84.81 + x, 125.61 + y));
path.curve_to((84.81 + x, 125.61 + y), (87.63 + x, 125.77 + y), (90.30 + x, 122.32 + y));
path.curve_to((92.97 + x, 118.87 + y), (103.49 + x, 116.04 + y), (106.00 + x, 116.83 + y));
path.line_to((109.76 + x, 119.34 + y));
path.line_to((110.08 + x, 119.81 + y));
path.curve_to((110.08 + x, 119.81 + y), (114.94 + x, 123.89 + y), (115.10 + x, 126.87 + y));
path.curve_to((115.26 + x, 129.85 + y), (109.45 + x, 148.69 + y), (105.68 + x, 154.96 + y));
path.curve_to((101.92 + x, 161.24 + y), (98.15 + x, 166.11 + y), (90.62 + x, 165.16 + y));
path.curve_to((90.62 + x, 165.16 + y), (82.45 + x, 163.59 + y), (72.41 + x, 165.16 + y));
path.curve_to((72.41 + x, 165.16 + y), (60.95 + x, 164.54 + y), (59.85 + x, 161.40 + y));
path.curve_to((58.76 + x, 158.26 + y), (64.25 + x, 152.30 + y), (64.25 + x, 152.30 + y));
path.curve_to((64.25 + x, 152.30 + y), (65.98 + x, 149.00 + y), (65.50 + x, 143.35 + y));
path.curve_to((65.03 + x, 137.70 + y), (65.19 + x, 126.71 + y), (63.31 + x, 125.61 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((71.94 + x, 126.40 + y));
path.curve_to((75.23 + x, 133.62 + y), (63.62 + x, 159.20 + y), (63.62 + x, 159.20 + y));
path.curve_to((62.84 + x, 159.83 + y), (68.59 + x, 162.20 + y), (72.57 + x, 161.24 + y));
path.curve_to((76.86 + x, 160.21 + y), (92.66 + x, 161.87 + y), (92.66 + x, 161.87 + y));
path.curve_to((101.92 + x, 155.75 + y), (106.94 + x, 138.33 + y), (106.94 + x, 138.33 + y));
path.curve_to((106.94 + x, 138.33 + y), (111.02 + x, 128.91 + y), (104.11 + x, 127.66 + y));
path.curve_to((97.21 + x, 126.40 + y), (71.94 + x, 126.40 + y), (71.94 + x, 126.40 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xe5,0x66,0x8c,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((71.14 + x, 138.52 + y));
path.curve_to((72.45 + x, 133.50 + y), (73.07 + x, 128.88 + y), (71.94 + x, 126.40 + y));
path.curve_to((71.94 + x, 126.40 + y), (96.42 + x, 128.91 + y), (100.82 + x, 120.75 + y));
path.curve_to((102.48 + x, 117.66 + y), (108.27 + x, 129.69 + y), (108.12 + x, 133.46 + y));
path.curve_to((108.12 + x, 133.46 + y), (83.40 + x, 139.11 + y), (77.59 + x, 134.72 + y));
path.line_to((71.14 + x, 138.52 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xb2,0x32,0x59,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((72.88 + x, 144.92 + y));
path.curve_to((72.88 + x, 144.92 + y), (73.67 + x, 147.74 + y), (72.72 + x, 149.31 + y));
path.curve_to((72.72 + x, 149.31 + y), (72.10 + x, 149.63 + y), (71.63 + x, 149.78 + y));
path.curve_to((71.63 + x, 149.78 + y), (72.10 + x, 151.20 + y), (74.45 + x, 151.82 + y));
path.curve_to((74.45 + x, 151.82 + y), (75.24 + x, 153.55 + y), (76.18 + x, 153.71 + y));
path.curve_to((77.12 + x, 153.86 + y), (79.00 + x, 156.06 + y), (80.57 + x, 155.59 + y));
path.curve_to((82.14 + x, 155.12 + y), (86.54 + x, 153.55 + y), (86.54 + x, 153.55 + y));
path.curve_to((86.54 + x, 153.55 + y), (88.73 + x, 152.30 + y), (92.19 + x, 153.71 + y));
path.curve_to((92.19 + x, 153.71 + y), (93.12 + x, 153.39 + y), (93.28 + x, 151.82 + y));
path.curve_to((93.48 + x, 149.98 + y), (94.70 + x, 148.53 + y), (95.48 + x, 147.74 + y));
path.curve_to((96.27 + x, 146.96 + y), (100.03 + x, 141.94 + y), (99.56 + x, 141.78 + y));
path.curve_to((99.09 + x, 141.62 + y), (72.88 + x, 144.92 + y), (72.88 + x, 144.92 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xa5,0x26,0x4c,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((71.16 + x, 125.93 + y));
path.curve_to((71.16 + x, 125.93 + y), (70.06 + x, 134.72 + y), (71.31 + x, 138.01 + y));
path.curve_to((72.57 + x, 141.31 + y), (72.25 + x, 142.09 + y), (71.94 + x, 143.66 + y));
path.curve_to((71.63 + x, 145.23 + y), (73.35 + x, 149.16 + y), (75.55 + x, 151.51 + y));
path.line_to((80.26 + x, 152.14 + y));
path.curve_to((80.26 + x, 152.14 + y), (86.22 + x, 150.73 + y), (89.83 + x, 151.83 + y));
path.curve_to((89.83 + x, 151.83 + y), (93.36 + x, 152.35 + y), (94.70 + x, 146.49 + y));
path.curve_to((94.70 + x, 146.49 + y), (96.58 + x, 143.98 + y), (99.40 + x, 142.88 + y));
path.curve_to((102.23 + x, 141.78 + y), (105.05 + x, 125.46 + y), (103.48 + x, 122.32 + y));
path.curve_to((101.91 + x, 119.18 + y), (96.27 + x, 117.45 + y), (89.99 + x, 123.57 + y));
path.curve_to((83.71 + x, 129.69 + y), (82.93 + x, 123.10 + y), (71.15 + x, 125.93 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0x72,0x7f,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.39);
let mut path = BezPath::new();
path.move_to((71.78 + x, 155.28 + y));
path.curve_to((71.78 + x, 155.28 + y), (71.47 + x, 154.49 + y), (69.74 + x, 154.34 + y));
path.curve_to((69.74 + x, 154.34 + y), (60.95 + x, 152.92 + y), (57.66 + x, 148.06 + y));
path.curve_to((57.66 + x, 148.06 + y), (54.99 + x, 145.86 + y), (56.72 + x, 150.41 + y));
path.curve_to((56.72 + x, 150.41 + y), (60.80 + x, 158.42 + y), (63.46 + x, 159.52 + y));
path.curve_to((63.46 + x, 159.52 + y), (69.90 + x, 161.09 + y), (71.78 + x, 155.28 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((103.15 + x, 130.18 + y));
path.curve_to((103.41 + x, 127.07 + y), (104.17 + x, 123.70 + y), (103.49 + x, 122.32 + y));
path.curve_to((100.96 + x, 117.26 + y), (94.30 + x, 119.38 + y), (89.99 + x, 123.57 + y));
path.curve_to((83.71 + x, 129.69 + y), (82.93 + x, 123.10 + y), (71.16 + x, 125.93 + y));
path.curve_to((71.16 + x, 125.93 + y), (70.47 + x, 131.41 + y), (70.80 + x, 135.34 + y));
path.curve_to((70.80 + x, 135.34 + y), (85.44 + x, 130.79 + y), (85.75 + x, 132.99 + y));
path.curve_to((85.75 + x, 132.99 + y), (86.38 + x, 131.74 + y), (89.99 + x, 131.74 + y));
path.curve_to((93.60 + x, 131.74 + y), (102.52 + x, 131.28 + y), (103.15 + x, 130.18 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0x3f,0x4c,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((86.22 + x, 126.24 + y));
path.curve_to((86.22 + x, 126.24 + y), (88.10 + x, 128.13 + y), (86.69 + x, 131.89 + y));
path.curve_to((86.69 + x, 131.89 + y), (81.04 + x, 138.17 + y), (81.83 + x, 143.66 + y));
let brush = render_ctx.solid_brush(Color::rgba8(0xa5,0x19,0x26,0xff));
render_ctx.stroke(path, &brush, 0.17);
let mut path = BezPath::new();
path.move_to((67.39 + x, 159.51 + y));
path.curve_to((67.39 + x, 159.51 + y), (65.66 + x, 154.49 + y), (69.12 + x, 157.16 + y));
path.line_to((70.53 + x, 158.57 + y));
path.curve_to((70.06 + x, 159.20 + y), (67.86 + x, 160.77 + y), (67.39 + x, 159.51 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((69.37 + x, 159.99 + y));
path.curve_to((69.37 + x, 159.99 + y), (67.98 + x, 155.97 + y), (70.75 + x, 158.10 + y));
path.line_to((71.88 + x, 159.23 + y));
path.curve_to((70.09 + x, 159.73 + y), (71.88 + x, 160.74 + y), (69.37 + x, 159.99 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((71.25 + x, 159.99 + y));
path.curve_to((71.25 + x, 159.99 + y), (69.87 + x, 155.97 + y), (72.63 + x, 158.10 + y));
path.line_to((73.76 + x, 159.23 + y));
path.curve_to((72.44 + x, 159.73 + y), (73.76 + x, 160.74 + y), (71.25 + x, 159.99 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((73.84 + x, 160.06 + y));
path.curve_to((73.84 + x, 160.06 + y), (72.46 + x, 156.05 + y), (75.22 + x, 158.18 + y));
path.curve_to((75.22 + x, 158.18 + y), (76.94 + x, 159.09 + y), (76.35 + x, 159.31 + y));
path.curve_to((75.19 + x, 159.73 + y), (76.35 + x, 160.82 + y), (73.84 + x, 160.06 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((76.38 + x, 160.03 + y));
path.curve_to((76.38 + x, 160.03 + y), (75.00 + x, 156.01 + y), (77.76 + x, 158.15 + y));
path.line_to((78.89 + x, 159.28 + y));
path.curve_to((78.52 + x, 159.78 + y), (78.89 + x, 160.79 + y), (76.38 + x, 160.03 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((79.00 + x, 160.30 + y));
path.curve_to((79.00 + x, 160.30 + y), (77.12 + x, 155.44 + y), (80.73 + x, 157.95 + y));
path.line_to((82.14 + x, 159.36 + y));
path.curve_to((81.67 + x, 159.99 + y), (82.14 + x, 161.24 + y), (79.00 + x, 160.30 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((67.86 + x, 153.55 + y));
path.curve_to((67.86 + x, 153.55 + y), (73.04 + x, 152.45 + y), (75.39 + x, 153.71 + y));
path.curve_to((75.39 + x, 153.71 + y), (77.75 + x, 154.18 + y), (78.22 + x, 154.02 + y));
path.curve_to((78.69 + x, 153.86 + y), (79.94 + x, 153.71 + y), (79.94 + x, 153.71 + y));
path.move_to((81.20 + x, 157.00 + y));
path.curve_to((81.20 + x, 157.00 + y), (85.91 + x, 151.67 + y), (90.62 + x, 153.39 + y));
path.curve_to((93.37 + x, 154.40 + y), (92.97 + x, 153.08 + y), (93.28 + x, 151.98 + y));
path.curve_to((93.60 + x, 150.88 + y), (93.68 + x, 149.23 + y), (95.64 + x, 148.06 + y));
let brush = render_ctx.solid_brush(Color::rgba8(0xa5,0x26,0x4c,0xff));
render_ctx.stroke(path, &brush, 0.17);
let mut path = BezPath::new();
path.move_to((87.95 + x, 150.73 + y));
path.curve_to((87.95 + x, 150.73 + y), (86.38 + x, 146.49 + y), (85.28 + x, 151.51 + y));
path.curve_to((84.18 + x, 156.53 + y), (82.93 + x, 157.95 + y), (82.30 + x, 159.04 + y));
path.curve_to((82.30 + x, 159.04 + y), (82.30 + x, 161.08 + y), (85.59 + x, 160.93 + y));
path.curve_to((85.59 + x, 160.93 + y), (89.83 + x, 160.77 + y), (89.99 + x, 159.67 + y));
path.curve_to((90.15 + x, 158.57 + y), (89.52 + x, 154.02 + y), (87.95 + x, 150.73 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((93.44 + x, 153.55 + y));
path.curve_to((93.44 + x, 153.55 + y), (94.85 + x, 152.61 + y), (95.80 + x, 153.08 + y));
path.move_to((95.99 + x, 147.12 + y));
path.curve_to((95.99 + x, 147.12 + y), (97.13 + x, 145.19 + y), (99.01 + x, 144.88 + y));
let brush = render_ctx.solid_brush(Color::rgba8(0xa5,0x26,0x4c,0xff));
render_ctx.stroke(path, &brush, 0.17);
let mut path = BezPath::new();
path.move_to((64.88 + x, 161.56 + y));
path.curve_to((64.88 + x, 161.56 + y), (71.94 + x, 162.81 + y), (73.67 + x, 162.18 + y));
path.line_to((73.82 + x, 162.97 + y));
path.line_to((65.66 + x, 162.50 + y));
path.curve_to((65.66 + x, 162.50 + y), (61.11 + x, 160.30 + y), (64.88 + x, 161.55 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xb2,0xb2,0xb2,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((70.37 + x, 124.99 + y));
path.line_to((78.06 + x, 125.30 + y));
path.curve_to((78.06 + x, 125.30 + y), (80.89 + x, 137.39 + y), (79.47 + x, 140.37 + y));
path.curve_to((79.47 + x, 140.37 + y), (79.00 + x, 141.47 + y), (77.90 + x, 139.27 + y));
path.curve_to((77.90 + x, 139.27 + y), (70.68 + x, 126.40 + y), (69.43 + x, 125.62 + y));
path.curve_to((68.17 + x, 124.83 + y), (69.90 + x, 124.99 + y), (70.37 + x, 124.99 + y));
path.close_path();
path.move_to((40.12 + x, 123.93 + y));
path.curve_to((40.12 + x, 123.93 + y), (43.61 + x, 124.59 + y), (48.55 + x, 125.61 + y));
path.curve_to((48.55 + x, 125.61 + y), (50.44 + x, 134.40 + y), (51.69 + x, 136.29 + y));
path.curve_to((52.95 + x, 138.17 + y), (51.54 + x, 138.17 + y), (50.12 + x, 137.07 + y));
path.curve_to((48.71 + x, 135.97 + y), (42.90 + x, 130.48 + y), (42.12 + x, 128.75 + y));
path.curve_to((41.34 + x, 127.03 + y), (40.12 + x, 123.93 + y), (40.12 + x, 123.93 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((48.70 + x, 125.70 + y));
path.curve_to((48.70 + x, 125.70 + y), (50.97 + x, 126.31 + y), (51.37 + x, 127.18 + y));
path.curve_to((51.76 + x, 128.05 + y), (50.90 + x, 129.34 + y), (50.90 + x, 129.34 + y));
path.curve_to((50.90 + x, 129.34 + y), (50.50 + x, 130.64 + y), (50.03 + x, 129.79 + y));
path.curve_to((49.56 + x, 128.94 + y), (48.43 + x, 125.93 + y), (48.70 + x, 125.70 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((48.71 + x, 125.61 + y));
path.curve_to((48.71 + x, 125.61 + y), (50.12 + x, 127.66 + y), (51.54 + x, 127.66 + y));
path.curve_to((52.95 + x, 127.66 + y), (53.10 + x, 127.50 + y), (54.20 + x, 127.73 + y));
path.curve_to((56.01 + x, 128.13 + y), (55.85 + x, 127.34 + y), (58.44 + x, 127.81 + y));
path.curve_to((59.48 + x, 128.00 + y), (60.48 + x, 127.66 + y), (61.58 + x, 128.13 + y));
path.curve_to((62.68 + x, 128.60 + y), (63.94 + x, 128.28 + y), (64.41 + x, 127.50 + y));
path.curve_to((64.88 + x, 126.71 + y), (66.76 + x, 125.06 + y), (66.76 + x, 125.06 + y));
path.curve_to((66.76 + x, 125.06 + y), (61.74 + x, 125.77 + y), (60.64 + x, 126.08 + y));
path.curve_to((60.64 + x, 126.08 + y), (51.85 + x, 126.56 + y), (48.71 + x, 125.61 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((66.21 + x, 125.69 + y));
path.curve_to((66.21 + x, 125.69 + y), (63.68 + x, 127.07 + y), (63.52 + x, 128.01 + y));
path.curve_to((63.36 + x, 128.95 + y), (65.58 + x, 130.40 + y), (65.58 + x, 130.40 + y));
path.curve_to((65.58 + x, 130.40 + y), (66.66 + x, 132.21 + y), (66.90 + x, 131.27 + y));
path.curve_to((67.13 + x, 130.32 + y), (66.52 + x, 125.85 + y), (66.21 + x, 125.69 + y));
path.close_path();
path.move_to((51.50 + x, 127.84 + y));
path.curve_to((51.50 + x, 127.84 + y), (54.25 + x, 132.23 + y), (54.34 + x, 127.83 + y));
path.curve_to((54.34 + x, 127.83 + y), (54.56 + x, 127.33 + y), (53.87 + x, 127.33 + y));
path.curve_to((51.48 + x, 127.30 + y), (52.08 + x, 125.69 + y), (51.50 + x, 127.84 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((54.32 + x, 127.93 + y));
path.curve_to((54.32 + x, 127.93 + y), (57.43 + x, 132.32 + y), (57.18 + x, 127.90 + y));
path.curve_to((57.18 + x, 127.90 + y), (57.18 + x, 127.77 + y), (56.49 + x, 127.71 + y));
path.curve_to((54.63 + x, 127.54 + y), (54.77 + x, 125.77 + y), (54.32 + x, 127.93 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((57.15 + x, 127.94 + y));
path.curve_to((57.15 + x, 127.94 + y), (60.27 + x, 132.11 + y), (60.01 + x, 128.31 + y));
path.curve_to((60.01 + x, 128.31 + y), (60.06 + x, 127.83 + y), (59.41 + x, 127.71 + y));
path.curve_to((57.88 + x, 127.44 + y), (57.80 + x, 126.16 + y), (57.15 + x, 127.94 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((59.85 + x, 127.97 + y));
path.curve_to((59.85 + x, 127.97 + y), (62.95 + x, 132.50 + y), (63.08 + x, 128.67 + y));
path.curve_to((63.08 + x, 128.67 + y), (63.73 + x, 128.13 + y), (63.04 + x, 128.04 + y));
path.curve_to((60.76 + x, 127.75 + y), (61.07 + x, 126.00 + y), (59.85 + x, 127.97 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((45.65 + x, 129.35 + y));
path.line_to((42.65 + x, 128.75 + y));
path.curve_to((41.63 + x, 126.79 + y), (40.80 + x, 124.38 + y), (40.80 + x, 124.38 + y));
path.curve_to((40.80 + x, 124.38 + y), (43.30 + x, 124.77 + y), (48.20 + x, 125.87 + y));
path.curve_to((48.20 + x, 125.87 + y), (48.55 + x, 127.17 + y), (49.12 + x, 129.44 + y));
path.line_to((45.65 + x, 129.35 + y));
path.close_path();
path.move_to((71.19 + x, 127.53 + y));
path.curve_to((70.53 + x, 126.54 + y), (70.02 + x, 125.85 + y), (69.76 + x, 125.69 + y));
path.curve_to((68.58 + x, 124.96 + y), (70.20 + x, 125.10 + y), (70.65 + x, 125.10 + y));
path.line_to((77.89 + x, 125.40 + y));
path.curve_to((77.89 + x, 125.40 + y), (78.09 + x, 126.28 + y), (78.36 + x, 127.61 + y));
path.curve_to((78.36 + x, 127.61 + y), (74.40 + x, 126.82 + y), (71.19 + x, 127.53 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xe5,0xe5,0xb2,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((92.22 + x, 73.32 + y));
path.curve_to((103.09 + x, 74.87 + y), (113.11 + x, 60.89 + y), (113.80 + x, 57.09 + y));
path.curve_to((114.49 + x, 53.29 + y), (110.52 + x, 48.63 + y), (110.52 + x, 48.63 + y));
path.curve_to((111.03 + x, 47.42 + y), (109.14 + x, 41.90 + y), (107.06 + x, 38.27 + y));
path.curve_to((104.99 + x, 34.65 + y), (98.75 + x, 35.03 + y), (91.87 + x, 34.65 + y));
path.curve_to((85.66 + x, 34.30 + y), (78.41 + x, 43.45 + y), (77.89 + x, 44.14 + y));
path.curve_to((77.37 + x, 44.83 + y), (79.79 + x, 59.85 + y), (80.31 + x, 62.10 + y));
path.curve_to((80.82 + x, 64.34 + y), (79.79 + x, 74.70 + y), (79.79 + x, 74.70 + y));
path.curve_to((93.22 + x, 71.13 + y), (81.34 + x, 71.77 + y), (92.22 + x, 73.32 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0x72,0x26,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((78.17 + x, 44.40 + y));
path.curve_to((77.67 + x, 45.08 + y), (80.04 + x, 59.82 + y), (80.55 + x, 62.03 + y));
path.curve_to((81.05 + x, 64.23 + y), (80.04 + x, 74.40 + y), (80.04 + x, 74.40 + y));
path.curve_to((92.86 + x, 70.92 + y), (81.56 + x, 71.52 + y), (92.24 + x, 73.04 + y));
path.curve_to((102.92 + x, 74.57 + y), (112.75 + x, 60.84 + y), (113.43 + x, 57.11 + y));
path.curve_to((114.11 + x, 53.38 + y), (110.21 + x, 48.81 + y), (110.21 + x, 48.81 + y));
path.curve_to((110.72 + x, 47.62 + y), (108.85 + x, 42.20 + y), (106.82 + x, 38.64 + y));
path.curve_to((104.79 + x, 35.08 + y), (98.66 + x, 35.45 + y), (91.90 + x, 35.08 + y));
path.curve_to((85.80 + x, 34.74 + y), (78.68 + x, 43.72 + y), (78.17 + x, 44.40 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xea,0x8e,0x51,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((78.46 + x, 44.65 + y));
path.curve_to((77.96 + x, 45.32 + y), (80.29 + x, 59.79 + y), (80.79 + x, 61.95 + y));
path.curve_to((81.29 + x, 64.12 + y), (80.29 + x, 74.10 + y), (80.29 + x, 74.10 + y));
path.curve_to((92.61 + x, 70.51 + y), (81.79 + x, 71.27 + y), (92.27 + x, 72.77 + y));
path.curve_to((102.75 + x, 74.27 + y), (112.40 + x, 60.79 + y), (113.06 + x, 57.13 + y));
path.curve_to((113.73 + x, 53.47 + y), (109.90 + x, 48.98 + y), (109.90 + x, 48.98 + y));
path.curve_to((110.40 + x, 47.81 + y), (108.57 + x, 42.49 + y), (106.57 + x, 39.00 + y));
path.curve_to((104.58 + x, 35.50 + y), (98.57 + x, 35.87 + y), (91.93 + x, 35.50 + y));
path.curve_to((85.94 + x, 35.17 + y), (78.96 + x, 43.99 + y), (78.46 + x, 44.65 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xef,0xaa,0x7c,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((78.75 + x, 44.91 + y));
path.curve_to((78.26 + x, 45.56 + y), (80.54 + x, 59.76 + y), (81.03 + x, 61.88 + y));
path.curve_to((81.52 + x, 64.00 + y), (80.54 + x, 73.80 + y), (80.54 + x, 73.80 + y));
path.curve_to((92.09 + x, 70.25 + y), (82.01 + x, 71.02 + y), (92.29 + x, 72.49 + y));
path.curve_to((102.58 + x, 73.96 + y), (112.04 + x, 60.74 + y), (112.70 + x, 57.15 + y));
path.curve_to((113.35 + x, 53.56 + y), (109.59 + x, 49.15 + y), (109.59 + x, 49.15 + y));
path.curve_to((110.08 + x, 48.01 + y), (108.29 + x, 42.78 + y), (106.33 + x, 39.36 + y));
path.curve_to((104.37 + x, 35.93 + y), (98.47 + x, 36.29 + y), (91.97 + x, 35.93 + y));
path.curve_to((86.09 + x, 35.60 + y), (79.23 + x, 44.25 + y), (78.74 + x, 44.91 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xf4,0xc6,0xa8,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((79.03 + x, 45.16 + y));
path.curve_to((78.55 + x, 45.80 + y), (80.79 + x, 59.73 + y), (81.27 + x, 61.81 + y));
path.curve_to((81.75 + x, 63.89 + y), (80.79 + x, 73.50 + y), (80.79 + x, 73.50 + y));
path.curve_to((91.73 + x, 70.00 + y), (82.23 + x, 70.77 + y), (92.32 + x, 72.22 + y));
path.curve_to((102.40 + x, 73.66 + y), (111.69 + x, 60.69 + y), (112.33 + x, 57.17 + y));
path.curve_to((112.97 + x, 53.64 + y), (109.29 + x, 49.32 + y), (109.29 + x, 49.32 + y));
path.curve_to((109.77 + x, 48.20 + y), (108.01 + x, 43.08 + y), (106.09 + x, 39.72 + y));
path.curve_to((104.16 + x, 36.36 + y), (98.38 + x, 36.71 + y), (92.00 + x, 36.36 + y));
path.curve_to((86.23 + x, 36.04 + y), (79.51 + x, 44.52 + y), (79.03 + x, 45.16 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xf9,0xe2,0xd3,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((92.34 + x, 71.94 + y));
path.curve_to((102.23 + x, 73.35 + y), (111.33 + x, 60.64 + y), (111.96 + x, 57.19 + y));
path.curve_to((112.59 + x, 53.73 + y), (108.98 + x, 49.50 + y), (108.98 + x, 49.50 + y));
path.curve_to((109.45 + x, 48.40 + y), (107.72 + x, 43.38 + y), (105.84 + x, 40.08 + y));
path.curve_to((103.96 + x, 36.78 + y), (98.28 + x, 37.13 + y), (92.03 + x, 36.78 + y));
path.curve_to((86.38 + x, 36.47 + y), (79.79 + x, 44.79 + y), (79.32 + x, 45.41 + y));
path.curve_to((78.85 + x, 46.04 + y), (81.04 + x, 59.70 + y), (81.51 + x, 61.74 + y));
path.curve_to((81.98 + x, 63.78 + y), (81.04 + x, 73.19 + y), (81.04 + x, 73.19 + y));
path.curve_to((91.05 + x, 69.82 + y), (82.46 + x, 70.53 + y), (92.34 + x, 71.94 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((110.55 + x, 58.60 + y));
path.curve_to((110.55 + x, 58.60 + y), (99.64 + x, 61.58 + y), (95.09 + x, 60.95 + y));
path.curve_to((95.09 + x, 60.95 + y), (88.89 + x, 58.36 + y), (85.44 + x, 66.92 + y));
path.curve_to((85.44 + x, 66.92 + y), (84.02 + x, 69.74 + y), (83.24 + x, 70.53 + y));
path.curve_to((82.46 + x, 71.31 + y), (110.55 + x, 58.60 + y), (110.55 + x, 58.60 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0xcc,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((112.04 + x, 57.73 + y));
path.curve_to((112.04 + x, 57.73 + y), (100.66 + x, 62.52 + y), (96.74 + x, 62.37 + y));
path.curve_to((96.74 + x, 62.37 + y), (90.30 + x, 60.56 + y), (87.01 + x, 66.29 + y));
path.curve_to((87.01 + x, 66.29 + y), (83.71 + x, 69.90 + y), (82.46 + x, 70.53 + y));
path.curve_to((82.46 + x, 70.53 + y), (82.30 + x, 71.15 + y), (84.81 + x, 69.59 + y));
path.line_to((88.89 + x, 71.63 + y));
path.curve_to((88.89 + x, 71.63 + y), (94.70 + x, 75.39 + y), (98.46 + x, 69.11 + y));
path.curve_to((98.46 + x, 69.11 + y), (100.03 + x, 64.72 + y), (100.03 + x, 63.93 + y));
path.curve_to((100.03 + x, 63.15 + y), (108.35 + x, 60.95 + y), (108.98 + x, 60.80 + y));
path.curve_to((109.61 + x, 60.64 + y), (112.20 + x, 58.99 + y), (112.04 + x, 57.74 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((93.44 + x, 71.83 + y));
path.curve_to((90.75 + x, 71.83 + y), (87.46 + x, 70.31 + y), (87.46 + x, 67.86 + y));
path.curve_to((87.46 + x, 65.41 + y), (90.75 + x, 62.95 + y), (93.44 + x, 62.95 + y));
path.curve_to((96.14 + x, 62.95 + y), (98.33 + x, 64.94 + y), (98.33 + x, 67.39 + y));
path.curve_to((98.33 + x, 69.84 + y), (96.14 + x, 71.83 + y), (93.44 + x, 71.83 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x99,0xcc,0x32,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((92.02 + x, 65.28 + y));
path.curve_to((90.12 + x, 65.56 + y), (88.12 + x, 66.15 + y), (88.15 + x, 66.07 + y));
path.curve_to((88.75 + x, 64.26 + y), (91.25 + x, 62.95 + y), (93.44 + x, 62.95 + y));
path.curve_to((95.13 + x, 62.95 + y), (96.61 + x, 63.73 + y), (97.49 + x, 64.91 + y));
path.curve_to((97.49 + x, 64.91 + y), (95.40 + x, 64.78 + y), (92.02 + x, 65.28 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x65,0x99,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((96.74 + x, 65.19 + y));
path.curve_to((96.74 + x, 65.19 + y), (95.01 + x, 63.93 + y), (95.01 + x, 64.80 + y));
path.curve_to((95.01 + x, 64.80 + y), (96.42 + x, 66.52 + y), (96.74 + x, 65.19 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((92.81 + x, 68.38 + y));
path.curve_to((92.42 + x, 68.39 + y), (92.07 + x, 68.28 + y), (91.75 + x, 68.06 + y));
path.curve_to((91.43 + x, 67.83 + y), (91.21 + x, 67.53 + y), (91.08 + x, 67.16 + y));
path.curve_to((90.96 + x, 66.79 + y), (90.96 + x, 66.42 + y), (91.08 + x, 66.05 + y));
path.curve_to((91.21 + x, 65.68 + y), (91.43 + x, 65.38 + y), (91.75 + x, 65.15 + y));
path.curve_to((92.07 + x, 64.93 + y), (92.42 + x, 64.82 + y), (92.81 + x, 64.83 + y));
path.curve_to((93.29 + x, 64.84 + y), (93.70 + x, 65.02 + y), (94.03 + x, 65.37 + y));
path.curve_to((94.36 + x, 65.71 + y), (94.53 + x, 66.12 + y), (94.53 + x, 66.60 + y));
path.curve_to((94.53 + x, 67.08 + y), (94.36 + x, 67.49 + y), (94.03 + x, 67.84 + y));
path.curve_to((93.70 + x, 68.18 + y), (93.29 + x, 68.36 + y), (92.81 + x, 68.38 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((52.01 + x, 63.15 + y));
path.curve_to((52.01 + x, 63.15 + y), (50.75 + x, 54.83 + y), (51.69 + x, 53.11 + y));
path.curve_to((51.69 + x, 53.11 + y), (55.93 + x, 49.18 + y), (55.77 + x, 47.77 + y));
path.curve_to((55.77 + x, 47.77 + y), (55.62 + x, 40.71 + y), (55.15 + x, 40.39 + y));
path.curve_to((54.67 + x, 40.08 + y), (51.69 + x, 37.72 + y), (49.34 + x, 40.24 + y));
path.curve_to((49.34 + x, 40.24 + y), (45.26 + x, 47.30 + y), (45.57 + x, 49.81 + y));
path.line_to((45.57 + x, 50.59 + y));
path.curve_to((45.57 + x, 50.59 + y), (42.59 + x, 50.44 + y), (41.96 + x, 51.22 + y));
path.curve_to((41.96 + x, 51.22 + y), (41.49 + x, 53.26 + y), (41.02 + x, 53.42 + y));
path.curve_to((41.02 + x, 53.42 + y), (39.92 + x, 54.36 + y), (40.71 + x, 55.46 + y));
path.curve_to((40.71 + x, 55.46 + y), (39.92 + x, 56.40 + y), (40.08 + x, 57.97 + y));
path.line_to((43.06 + x, 59.54 + y));
path.curve_to((43.06 + x, 59.54 + y), (43.85 + x, 65.19 + y), (48.08 + x, 67.23 + y));
path.curve_to((49.98 + x, 68.14 + y), (51.22 + x, 65.50 + y), (52.01 + x, 63.15 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0x72,0x26,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((51.62 + x, 62.43 + y));
path.curve_to((51.62 + x, 62.43 + y), (50.48 + x, 54.94 + y), (51.33 + x, 53.39 + y));
path.curve_to((51.33 + x, 53.39 + y), (55.15 + x, 49.86 + y), (55.01 + x, 48.59 + y));
path.curve_to((55.01 + x, 48.59 + y), (54.86 + x, 42.23 + y), (54.44 + x, 41.95 + y));
path.curve_to((54.02 + x, 41.67 + y), (51.33 + x, 39.55 + y), (49.21 + x, 41.80 + y));
path.curve_to((49.21 + x, 41.80 + y), (45.54 + x, 48.16 + y), (45.82 + x, 50.42 + y));
path.line_to((45.82 + x, 51.13 + y));
path.curve_to((45.82 + x, 51.13 + y), (43.14 + x, 50.99 + y), (42.57 + x, 51.69 + y));
path.curve_to((42.57 + x, 51.69 + y), (42.15 + x, 53.53 + y), (41.73 + x, 53.67 + y));
path.curve_to((41.73 + x, 53.67 + y), (40.74 + x, 54.52 + y), (41.45 + x, 55.51 + y));
path.curve_to((41.45 + x, 55.51 + y), (40.74 + x, 56.35 + y), (40.88 + x, 57.77 + y));
path.line_to((43.56 + x, 59.18 + y));
path.curve_to((43.56 + x, 59.18 + y), (44.27 + x, 64.26 + y), (48.08 + x, 66.10 + y));
path.curve_to((49.79 + x, 66.92 + y), (50.91 + x, 64.55 + y), (51.62 + x, 62.43 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((54.97 + x, 40.78 + y));
path.curve_to((54.54 + x, 40.44 + y), (51.60 + x, 38.18 + y), (49.31 + x, 40.63 + y));
path.curve_to((49.31 + x, 40.63 + y), (45.33 + x, 47.51 + y), (45.63 + x, 49.96 + y));
path.line_to((45.63 + x, 50.73 + y));
path.curve_to((45.63 + x, 50.73 + y), (42.73 + x, 50.58 + y), (42.11 + x, 51.34 + y));
path.curve_to((42.11 + x, 51.34 + y), (41.66 + x, 53.33 + y), (41.20 + x, 53.48 + y));
path.curve_to((41.20 + x, 53.48 + y), (40.13 + x, 54.40 + y), (40.89 + x, 55.47 + y));
path.curve_to((40.89 + x, 55.47 + y), (40.13 + x, 56.39 + y), (40.28 + x, 57.92 + y));
path.line_to((43.19 + x, 59.45 + y));
path.curve_to((43.19 + x, 59.45 + y), (43.95 + x, 64.96 + y), (48.08 + x, 66.95 + y));
path.curve_to((49.93 + x, 67.84 + y), (51.14 + x, 65.27 + y), (51.91 + x, 62.97 + y));
path.curve_to((51.91 + x, 62.97 + y), (50.69 + x, 54.86 + y), (51.60 + x, 53.18 + y));
path.curve_to((51.60 + x, 53.18 + y), (55.73 + x, 49.35 + y), (55.58 + x, 47.97 + y));
path.curve_to((55.58 + x, 47.97 + y), (55.43 + x, 41.09 + y), (54.97 + x, 40.78 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xeb,0x95,0x5c,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((54.79 + x, 41.17 + y));
path.curve_to((54.41 + x, 40.81 + y), (51.51 + x, 38.64 + y), (49.28 + x, 41.02 + y));
path.curve_to((49.28 + x, 41.02 + y), (45.40 + x, 47.73 + y), (45.70 + x, 50.12 + y));
path.line_to((45.70 + x, 50.86 + y));
path.curve_to((45.70 + x, 50.86 + y), (42.86 + x, 50.71 + y), (42.27 + x, 51.46 + y));
path.curve_to((42.27 + x, 51.46 + y), (41.82 + x, 53.40 + y), (41.37 + x, 53.55 + y));
path.curve_to((41.37 + x, 53.55 + y), (40.33 + x, 54.44 + y), (41.08 + x, 55.48 + y));
path.curve_to((41.08 + x, 55.48 + y), (40.33 + x, 56.38 + y), (40.48 + x, 57.87 + y));
path.line_to((43.31 + x, 59.36 + y));
path.curve_to((43.31 + x, 59.36 + y), (44.06 + x, 64.73 + y), (48.08 + x, 66.67 + y));
path.curve_to((49.89 + x, 67.53 + y), (51.07 + x, 65.03 + y), (51.81 + x, 62.79 + y));
path.curve_to((51.81 + x, 62.79 + y), (50.62 + x, 54.89 + y), (51.51 + x, 53.25 + y));
path.curve_to((51.51 + x, 53.25 + y), (55.54 + x, 49.52 + y), (55.39 + x, 48.18 + y));
path.curve_to((55.39 + x, 48.18 + y), (55.24 + x, 41.47 + y), (54.79 + x, 41.17 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xf2,0xb8,0x92,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((54.62 + x, 41.56 + y));
path.curve_to((54.27 + x, 41.17 + y), (51.42 + x, 39.09 + y), (49.24 + x, 41.41 + y));
path.curve_to((49.24 + x, 41.41 + y), (45.47 + x, 47.95 + y), (45.76 + x, 50.27 + y));
path.line_to((45.76 + x, 50.99 + y));
path.curve_to((45.76 + x, 50.99 + y), (43.00 + x, 50.85 + y), (42.42 + x, 51.57 + y));
path.curve_to((42.42 + x, 51.57 + y), (41.99 + x, 53.46 + y), (41.55 + x, 53.61 + y));
path.curve_to((41.55 + x, 53.61 + y), (40.53 + x, 54.48 + y), (41.26 + x, 55.49 + y));
path.curve_to((41.26 + x, 55.49 + y), (40.53 + x, 56.37 + y), (40.68 + x, 57.82 + y));
path.line_to((43.44 + x, 59.27 + y));
path.curve_to((43.44 + x, 59.27 + y), (44.16 + x, 64.50 + y), (48.08 + x, 66.38 + y));
path.curve_to((49.84 + x, 67.23 + y), (50.99 + x, 64.79 + y), (51.71 + x, 62.61 + y));
path.curve_to((51.71 + x, 62.61 + y), (50.55 + x, 54.91 + y), (51.42 + x, 53.32 + y));
path.curve_to((51.42 + x, 53.32 + y), (55.34 + x, 49.69 + y), (55.20 + x, 48.38 + y));
path.curve_to((55.20 + x, 48.38 + y), (55.05 + x, 41.85 + y), (54.62 + x, 41.56 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xf8,0xdc,0xc8,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((51.62 + x, 62.39 + y));
path.curve_to((51.62 + x, 62.39 + y), (50.48 + x, 54.94 + y), (51.33 + x, 53.39 + y));
path.curve_to((51.33 + x, 53.39 + y), (55.15 + x, 49.86 + y), (55.01 + x, 48.59 + y));
path.curve_to((55.01 + x, 48.59 + y), (54.86 + x, 42.23 + y), (54.44 + x, 41.95 + y));
path.curve_to((54.14 + x, 41.54 + y), (51.33 + x, 39.55 + y), (49.21 + x, 41.81 + y));
path.curve_to((49.21 + x, 41.81 + y), (45.54 + x, 48.16 + y), (45.82 + x, 50.42 + y));
path.line_to((45.82 + x, 51.13 + y));
path.curve_to((45.82 + x, 51.13 + y), (43.14 + x, 50.99 + y), (42.57 + x, 51.69 + y));
path.curve_to((42.57 + x, 51.69 + y), (42.15 + x, 53.53 + y), (41.73 + x, 53.67 + y));
path.curve_to((41.73 + x, 53.67 + y), (40.74 + x, 54.52 + y), (41.45 + x, 55.51 + y));
path.curve_to((41.45 + x, 55.51 + y), (40.74 + x, 56.35 + y), (40.88 + x, 57.77 + y));
path.line_to((43.56 + x, 59.18 + y));
path.curve_to((43.56 + x, 59.18 + y), (44.27 + x, 64.26 + y), (48.08 + x, 66.10 + y));
path.curve_to((49.79 + x, 66.92 + y), (50.91 + x, 64.51 + y), (51.62 + x, 62.39 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((50.40 + x, 59.93 + y));
path.curve_to((50.40 + x, 59.93 + y), (41.92 + x, 55.93 + y), (41.57 + x, 55.62 + y));
path.curve_to((41.57 + x, 55.62 + y), (45.14 + x, 58.83 + y), (45.45 + x, 58.83 + y));
path.curve_to((45.77 + x, 58.83 + y), (50.40 + x, 59.93 + y), (50.40 + x, 59.93 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0xcc,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((43.69 + x, 57.50 + y));
path.curve_to((43.69 + x, 57.50 + y), (50.91 + x, 58.91 + y), (50.91 + x, 60.64 + y));
path.curve_to((50.91 + x, 61.78 + y), (50.81 + x, 67.05 + y), (48.71 + x, 66.45 + y));
path.curve_to((45.42 + x, 65.50 + y), (46.83 + x, 59.85 + y), (43.69 + x, 57.50 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((46.98 + x, 58.99 + y));
path.curve_to((46.98 + x, 58.99 + y), (50.51 + x, 59.57 + y), (50.91 + x, 60.64 + y));
path.curve_to((51.14 + x, 61.27 + y), (51.40 + x, 64.53 + y), (49.26 + x, 64.95 + y));
path.curve_to((47.47 + x, 65.31 + y), (46.60 + x, 61.30 + y), (46.98 + x, 58.99 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x99,0xcc,0x32,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((80.73 + x, 75.69 + y));
path.curve_to((80.53 + x, 75.00 + y), (81.05 + x, 75.05 + y), (81.75 + x, 74.84 + y));
path.curve_to((82.53 + x, 74.61 + y), (87.32 + x, 73.12 + y), (87.63 + x, 72.10 + y));
path.curve_to((87.95 + x, 71.08 + y), (93.13 + x, 72.80 + y), (93.13 + x, 72.80 + y));
path.curve_to((93.83 + x, 73.12 + y), (95.56 + x, 74.14 + y), (95.56 + x, 74.14 + y));
path.curve_to((97.44 + x, 74.61 + y), (100.03 + x, 74.76 + y), (100.03 + x, 74.76 + y));
path.curve_to((100.97 + x, 75.16 + y), (102.31 + x, 76.26 + y), (102.31 + x, 76.26 + y));
path.curve_to((108.04 + x, 80.26 + y), (112.90 + x, 77.43 + y), (112.90 + x, 77.43 + y));
path.curve_to((120.75 + x, 74.84 + y), (118.40 + x, 68.09 + y), (118.40 + x, 68.09 + y));
path.curve_to((117.22 + x, 64.56 + y), (118.47 + x, 63.23 + y), (118.47 + x, 63.23 + y));
path.curve_to((118.55 + x, 61.74 + y), (121.38 + x, 64.25 + y), (121.38 + x, 64.25 + y));
path.curve_to((122.40 + x, 65.90 + y), (122.71 + x, 67.86 + y), (122.71 + x, 67.86 + y));
path.curve_to((125.85 + x, 72.25 + y), (124.52 + x, 65.27 + y), (124.52 + x, 65.27 + y));
path.curve_to((124.59 + x, 64.88 + y), (123.50 + x, 63.46 + y), (123.50 + x, 62.99 + y));
path.curve_to((123.50 + x, 62.52 + y), (122.79 + x, 61.19 + y), (122.79 + x, 61.19 + y));
path.curve_to((121.61 + x, 59.85 + y), (122.56 + x, 57.11 + y), (122.56 + x, 57.11 + y));
path.curve_to((123.26 + x, 51.69 + y), (122.40 + x, 52.40 + y), (122.40 + x, 52.40 + y));
path.curve_to((121.93 + x, 51.69 + y), (118.32 + x, 55.62 + y), (118.32 + x, 55.62 + y));
path.curve_to((117.45 + x, 56.95 + y), (115.10 + x, 57.58 + y), (115.10 + x, 57.58 + y));
path.curve_to((114.00 + x, 58.29 + y), (112.67 + x, 57.74 + y), (112.67 + x, 57.74 + y));
path.curve_to((111.65 + x, 57.58 + y), (109.45 + x, 60.33 + y), (109.45 + x, 60.33 + y));
path.curve_to((110.55 + x, 60.25 + y), (111.49 + x, 61.97 + y), (112.43 + x, 62.05 + y));
path.curve_to((113.37 + x, 62.13 + y), (114.08 + x, 61.11 + y), (114.71 + x, 60.87 + y));
path.curve_to((115.34 + x, 60.64 + y), (116.43 + x, 62.91 + y), (116.43 + x, 62.91 + y));
path.curve_to((116.59 + x, 63.93 + y), (114.39 + x, 65.82 + y), (114.39 + x, 65.82 + y));
path.curve_to((114.24 + x, 67.62 + y), (113.61 + x, 67.00 + y), (113.61 + x, 67.00 + y));
path.curve_to((112.43 + x, 66.76 + y), (111.96 + x, 68.25 + y), (111.57 + x, 70.06 + y));
path.curve_to((111.18 + x, 71.86 + y), (109.53 + x, 72.02 + y), (109.53 + x, 72.02 + y));
path.curve_to((108.90 + x, 74.92 + y), (108.43 + x, 73.74 + y), (108.43 + x, 73.74 + y));
path.curve_to((108.35 + x, 71.55 + y), (106.00 + x, 73.82 + y), (106.00 + x, 73.82 + y));
path.curve_to((105.53 + x, 74.61 + y), (103.72 + x, 73.74 + y), (103.72 + x, 73.74 + y));
path.curve_to((101.05 + x, 72.96 + y), (102.00 + x, 72.17 + y), (102.00 + x, 72.17 + y));
path.curve_to((102.70 + x, 71.31 + y), (107.09 + x, 72.17 + y), (107.09 + x, 72.17 + y));
path.curve_to((107.96 + x, 71.55 + y), (104.82 + x, 69.98 + y), (104.82 + x, 69.98 + y));
path.curve_to((104.58 + x, 69.27 + y), (104.98 + x, 67.55 + y), (104.98 + x, 67.55 + y));
path.curve_to((105.45 + x, 66.29 + y), (108.12 + x, 64.09 + y), (108.12 + x, 64.09 + y));
path.curve_to((111.80 + x, 63.62 + y), (110.71 + x, 62.99 + y), (110.71 + x, 62.99 + y));
path.curve_to((108.27 + x, 60.95 + y), (106.00 + x, 63.94 + y), (106.00 + x, 63.94 + y));
path.curve_to((105.13 + x, 66.37 + y), (98.31 + x, 72.25 + y), (98.31 + x, 72.25 + y));
path.curve_to((96.42 + x, 73.59 + y), (97.44 + x, 70.92 + y), (95.87 + x, 72.25 + y));
path.curve_to((94.30 + x, 73.59 + y), (86.22 + x, 70.06 + y), (86.22 + x, 70.06 + y));
path.curve_to((81.68 + x, 69.59 + y), (80.61 + x, 75.76 + y), (79.23 + x, 74.54 + y));
path.curve_to((79.23 + x, 74.54 + y), (81.35 + x, 77.88 + y), (80.73 + x, 75.69 + y));
path.close_path();
path.move_to((157.16 + x, 10.42 + y));
path.curve_to((157.16 + x, 10.42 + y), (147.12 + x, 13.56 + y), (146.02 + x, 20.93 + y));
path.curve_to((146.02 + x, 20.93 + y), (145.08 + x, 29.88 + y), (153.08 + x, 36.78 + y));
path.curve_to((153.08 + x, 36.78 + y), (153.24 + x, 39.29 + y), (154.02 + x, 40.55 + y));
path.curve_to((154.02 + x, 40.55 + y), (153.40 + x, 42.43 + y), (160.77 + x, 39.45 + y));
path.line_to((171.44 + x, 36.16 + y));
path.curve_to((171.44 + x, 36.16 + y), (173.95 + x, 35.21 + y), (175.99 + x, 31.76 + y));
path.curve_to((178.04 + x, 28.31 + y), (184.00 + x, 20.93 + y), (182.59 + x, 11.04 + y));
path.curve_to((182.59 + x, 11.04 + y), (183.06 + x, 6.65 + y), (180.70 + x, 6.49 + y));
path.curve_to((180.70 + x, 6.49 + y), (177.41 + x, 5.87 + y), (174.58 + x, 8.85 + y));
path.curve_to((174.58 + x, 8.85 + y), (171.91 + x, 10.10 + y), (170.97 + x, 9.95 + y));
path.line_to((157.16 + x, 10.42 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((178.59 + x, 10.03 + y));
path.curve_to((178.59 + x, 10.03 + y), (179.42 + x, 6.52 + y), (177.52 + x, 8.42 + y));
path.curve_to((177.52 + x, 8.42 + y), (174.76 + x, 10.67 + y), (171.82 + x, 10.67 + y));
path.curve_to((171.82 + x, 10.67 + y), (166.12 + x, 11.53 + y), (164.40 + x, 16.71 + y));
path.curve_to((164.40 + x, 16.71 + y), (162.84 + x, 27.24 + y), (165.95 + x, 29.48 + y));
path.curve_to((165.95 + x, 29.48 + y), (167.85 + x, 32.42 + y), (170.61 + x, 29.83 + y));
path.curve_to((173.37 + x, 27.24 + y), (179.46 + x, 15.38 + y), (178.59 + x, 10.03 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((178.45 + x, 10.17 + y));
path.curve_to((178.45 + x, 10.17 + y), (179.27 + x, 6.74 + y), (177.40 + x, 8.60 + y));
path.curve_to((177.40 + x, 8.60 + y), (174.69 + x, 10.80 + y), (171.81 + x, 10.80 + y));
path.curve_to((171.81 + x, 10.80 + y), (166.21 + x, 11.65 + y), (164.52 + x, 16.74 + y));
path.curve_to((164.52 + x, 16.74 + y), (162.99 + x, 27.08 + y), (166.04 + x, 29.28 + y));
path.curve_to((166.04 + x, 29.28 + y), (167.91 + x, 32.16 + y), (170.62 + x, 29.62 + y));
path.curve_to((173.33 + x, 27.08 + y), (179.29 + x, 15.42 + y), (178.45 + x, 10.17 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x32,0x32,0x32,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((178.30 + x, 10.31 + y));
path.curve_to((178.30 + x, 10.31 + y), (179.11 + x, 6.95 + y), (177.29 + x, 8.78 + y));
path.curve_to((177.29 + x, 8.78 + y), (174.63 + x, 10.94 + y), (171.80 + x, 10.94 + y));
path.curve_to((171.80 + x, 10.94 + y), (166.30 + x, 11.77 + y), (164.64 + x, 16.77 + y));
path.curve_to((164.64 + x, 16.77 + y), (163.14 + x, 26.91 + y), (166.14 + x, 29.08 + y));
path.curve_to((166.14 + x, 29.08 + y), (167.97 + x, 31.90 + y), (170.63 + x, 29.41 + y));
path.curve_to((173.29 + x, 26.91 + y), (179.13 + x, 15.47 + y), (178.30 + x, 10.31 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x66,0x66,0x66,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((178.15 + x, 10.45 + y));
path.curve_to((178.15 + x, 10.45 + y), (178.97 + x, 7.16 + y), (177.17 + x, 8.96 + y));
path.curve_to((177.17 + x, 8.96 + y), (174.56 + x, 11.08 + y), (171.78 + x, 11.08 + y));
path.curve_to((171.78 + x, 11.08 + y), (166.40 + x, 11.90 + y), (164.76 + x, 16.80 + y));
path.curve_to((164.76 + x, 16.80 + y), (163.29 + x, 26.75 + y), (166.23 + x, 28.87 + y));
path.curve_to((166.23 + x, 28.87 + y), (168.03 + x, 31.65 + y), (170.64 + x, 29.20 + y));
path.curve_to((173.25 + x, 26.75 + y), (178.97 + x, 15.51 + y), (178.15 + x, 10.45 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x99,0x99,0x99,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((178.01 + x, 10.59 + y));
path.curve_to((178.01 + x, 10.59 + y), (178.82 + x, 7.38 + y), (177.05 + x, 9.14 + y));
path.curve_to((177.05 + x, 9.14 + y), (174.49 + x, 11.22 + y), (171.77 + x, 11.22 + y));
path.curve_to((171.77 + x, 11.22 + y), (166.49 + x, 12.02 + y), (164.89 + x, 16.82 + y));
path.curve_to((164.89 + x, 16.82 + y), (163.45 + x, 26.59 + y), (166.33 + x, 28.67 + y));
path.curve_to((166.33 + x, 28.67 + y), (168.09 + x, 31.39 + y), (170.65 + x, 28.99 + y));
path.curve_to((173.21 + x, 26.59 + y), (178.81 + x, 15.55 + y), (178.01 + x, 10.59 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0xcc,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((177.86 + x, 10.73 + y));
path.curve_to((177.86 + x, 10.73 + y), (178.66 + x, 7.59 + y), (176.94 + x, 9.32 + y));
path.curve_to((176.94 + x, 9.32 + y), (174.43 + x, 11.36 + y), (171.76 + x, 11.36 + y));
path.curve_to((171.76 + x, 11.36 + y), (166.58 + x, 12.14 + y), (165.01 + x, 16.85 + y));
path.curve_to((165.01 + x, 16.85 + y), (163.60 + x, 26.42 + y), (166.42 + x, 28.46 + y));
path.curve_to((166.42 + x, 28.46 + y), (168.15 + x, 31.13 + y), (170.66 + x, 28.78 + y));
path.curve_to((173.17 + x, 26.43 + y), (178.64 + x, 15.60 + y), (177.86 + x, 10.73 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((94.85 + x, 90.46 + y));
path.curve_to((94.85 + x, 90.46 + y), (86.85 + x, 82.92 + y), (83.71 + x, 82.61 + y));
path.curve_to((83.71 + x, 82.61 + y), (70.21 + x, 81.04 + y), (64.41 + x, 88.11 + y));
path.curve_to((64.41 + x, 88.11 + y), (71.31 + x, 80.10 + y), (82.14 + x, 82.30 + y));
path.curve_to((82.14 + x, 82.30 + y), (73.67 + x, 80.57 + y), (68.80 + x, 81.83 + y));
path.line_to((58.44 + x, 87.32 + y));
path.line_to((57.34 + x, 89.20 + y));
path.curve_to((57.34 + x, 89.20 + y), (58.91 + x, 83.40 + y), (66.13 + x, 81.04 + y));
path.curve_to((66.13 + x, 81.04 + y), (75.08 + x, 79.16 + y), (79.32 + x, 81.04 + y));
path.curve_to((79.32 + x, 81.04 + y), (70.84 + x, 78.37 + y), (66.92 + x, 79.16 + y));
path.curve_to((66.92 + x, 79.16 + y), (54.99 + x, 78.22 + y), (49.97 + x, 88.57 + y));
path.curve_to((49.97 + x, 88.57 + y), (51.54 + x, 82.92 + y), (57.34 + x, 80.10 + y));
path.curve_to((57.34 + x, 80.10 + y), (62.68 + x, 76.65 + y), (70.68 + x, 77.75 + y));
path.curve_to((70.68 + x, 77.75 + y), (76.33 + x, 79.00 + y), (78.37 + x, 79.94 + y));
path.curve_to((80.41 + x, 80.88 + y), (79.94 + x, 79.79 + y), (76.65 + x, 77.90 + y));
path.curve_to((76.65 + x, 77.90 + y), (74.45 + x, 73.98 + y), (68.96 + x, 74.14 + y));
path.curve_to((68.96 + x, 74.14 + y), (52.16 + x, 75.55 + y), (48.08 + x, 80.26 + y));
path.curve_to((48.08 + x, 80.26 + y), (53.42 + x, 75.86 + y), (57.50 + x, 74.76 + y));
path.curve_to((57.50 + x, 74.76 + y), (66.29 + x, 71.62 + y), (69.59 + x, 71.94 + y));
path.curve_to((69.59 + x, 71.94 + y), (79.32 + x, 72.33 + y), (82.30 + x, 70.76 + y));
path.curve_to((82.30 + x, 70.76 + y), (77.90 + x, 72.72 + y), (79.16 + x, 73.98 + y));
path.curve_to((80.41 + x, 75.23 + y), (83.08 + x, 78.22 + y), (83.08 + x, 78.69 + y));
path.curve_to((83.08 + x, 79.16 + y), (92.58 + x, 87.83 + y), (93.99 + x, 89.56 + y));
path.line_to((94.85 + x, 90.46 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x99,0x26,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((149.16 + x, 166.58 + y));
path.curve_to((149.16 + x, 166.58 + y), (143.08 + x, 152.26 + y), (138.17 + x, 148.53 + y));
path.curve_to((138.17 + x, 148.53 + y), (148.37 + x, 154.81 + y), (149.75 + x, 161.87 + y));
path.curve_to((149.75 + x, 161.87 + y), (149.75 + x, 165.79 + y), (149.16 + x, 166.58 + y));
path.close_path();
path.move_to((167.60 + x, 169.52 + y));
path.curve_to((167.60 + x, 169.52 + y), (157.20 + x, 147.94 + y), (149.94 + x, 138.52 + y));
path.curve_to((149.94 + x, 138.52 + y), (167.01 + x, 153.24 + y), (168.97 + x, 163.63 + y));
path.line_to((169.17 + x, 165.79 + y));
path.line_to((167.99 + x, 164.81 + y));
path.curve_to((167.99 + x, 164.81 + y), (167.80 + x, 168.34 + y), (167.60 + x, 169.52 + y));
path.close_path();
path.move_to((189.77 + x, 150.49 + y));
path.curve_to((189.77 + x, 150.49 + y), (165.24 + x, 127.15 + y), (164.66 + x, 126.16 + y));
path.curve_to((164.66 + x, 126.16 + y), (188.39 + x, 152.06 + y), (189.57 + x, 155.00 + y));
path.curve_to((189.57 + x, 155.00 + y), (188.79 + x, 151.47 + y), (189.77 + x, 150.49 + y));
path.close_path();
path.move_to((115.81 + x, 167.56 + y));
path.curve_to((115.81 + x, 167.56 + y), (123.46 + x, 147.16 + y), (130.91 + x, 155.98 + y));
path.curve_to((130.91 + x, 155.98 + y), (136.80 + x, 159.91 + y), (136.60 + x, 161.08 + y));
path.curve_to((136.60 + x, 161.08 + y), (135.03 + x, 158.53 + y), (127.97 + x, 158.73 + y));
path.curve_to((127.97 + x, 158.73 + y), (120.51 + x, 157.55 + y), (115.81 + x, 167.56 + y));
path.close_path();
path.move_to((190.55 + x, 117.53 + y));
path.curve_to((190.55 + x, 117.53 + y), (172.90 + x, 106.35 + y), (169.95 + x, 105.76 + y));
path.curve_to((165.32 + x, 104.83 + y), (189.38 + x, 117.14 + y), (191.34 + x, 121.26 + y));
path.curve_to((191.34 + x, 121.26 + y), (192.12 + x, 120.28 + y), (190.55 + x, 117.53 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0xcc,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((131.42 + x, 159.36 + y));
path.curve_to((131.42 + x, 159.36 + y), (139.43 + x, 158.57 + y), (142.09 + x, 155.91 + y));
path.line_to((143.82 + x, 157.32 + y));
path.line_to((150.73 + x, 142.25 + y));
path.line_to((152.14 + x, 144.29 + y));
path.curve_to((152.14 + x, 144.29 + y), (157.79 + x, 138.48 + y), (157.48 + x, 135.34 + y));
path.curve_to((157.16 + x, 132.21 + y), (162.50 + x, 137.70 + y), (162.50 + x, 137.70 + y));
path.curve_to((162.50 + x, 137.70 + y), (162.18 + x, 133.15 + y), (165.01 + x, 135.82 + y));
path.curve_to((165.01 + x, 135.82 + y), (164.07 + x, 129.70 + y), (167.36 + x, 132.83 + y));
path.curve_to((167.36 + x, 132.83 + y), (163.23 + x, 121.00 + y), (172.07 + x, 131.11 + y));
path.curve_to((174.27 + x, 133.62 + y), (172.54 + x, 130.95 + y), (172.54 + x, 130.95 + y));
path.curve_to((172.54 + x, 130.95 + y), (162.34 + x, 112.12 + y), (170.82 + x, 117.77 + y));
path.curve_to((170.82 + x, 117.77 + y), (171.60 + x, 108.82 + y), (171.13 + x, 107.09 + y));
path.curve_to((170.66 + x, 105.37 + y), (169.87 + x, 96.58 + y), (167.99 + x, 94.54 + y));
path.curve_to((166.11 + x, 92.50 + y), (168.15 + x, 91.87 + y), (170.34 + x, 93.91 + y));
path.curve_to((170.34 + x, 93.91 + y), (165.95 + x, 84.50 + y), (171.13 + x, 89.20 + y));
path.curve_to((171.13 + x, 89.20 + y), (169.72 + x, 83.24 + y), (167.99 + x, 82.14 + y));
path.curve_to((167.99 + x, 82.14 + y), (165.79 + x, 75.39 + y), (171.76 + x, 79.63 + y));
path.curve_to((171.76 + x, 79.63 + y), (170.03 + x, 74.76 + y), (168.78 + x, 73.51 + y));
path.curve_to((168.78 + x, 73.51 + y), (164.22 + x, 62.68 + y), (167.05 + x, 64.56 + y));
path.line_to((168.78 + x, 65.98 + y));
path.curve_to((168.78 + x, 65.98 + y), (166.11 + x, 60.48 + y), (168.62 + x, 62.21 + y));
path.curve_to((171.13 + x, 63.93 + y), (171.13 + x, 63.78 + y), (171.13 + x, 63.78 + y));
path.curve_to((171.13 + x, 63.78 + y), (162.81 + x, 50.75 + y), (170.82 + x, 57.66 + y));
path.curve_to((170.82 + x, 57.66 + y), (167.61 + x, 52.20 + y), (166.26 + x, 49.50 + y));
path.curve_to((166.26 + x, 49.50 + y), (158.89 + x, 41.49 + y), (164.54 + x, 44.00 + y));
path.line_to((166.42 + x, 44.63 + y));
path.curve_to((166.42 + x, 44.63 + y), (162.97 + x, 40.71 + y), (159.83 + x, 40.08 + y));
path.curve_to((156.69 + x, 39.45 + y), (160.77 + x, 36.94 + y), (163.28 + x, 37.73 + y));
path.curve_to((165.79 + x, 38.51 + y), (171.91 + x, 41.49 + y), (171.91 + x, 41.49 + y));
path.curve_to((171.91 + x, 41.49 + y), (176.94 + x, 48.87 + y), (178.51 + x, 49.02 + y));
path.curve_to((178.51 + x, 49.02 + y), (170.66 + x, 46.04 + y), (173.01 + x, 49.18 + y));
path.curve_to((173.01 + x, 49.18 + y), (178.66 + x, 54.67 + y), (175.84 + x, 54.52 + y));
path.curve_to((175.84 + x, 54.52 + y), (173.48 + x, 57.34 + y), (175.37 + x, 60.80 + y));
path.curve_to((175.37 + x, 60.80 + y), (168.12 + x, 53.58 + y), (173.96 + x, 63.62 + y));
path.line_to((176.62 + x, 70.06 + y));
path.curve_to((176.62 + x, 70.06 + y), (167.05 + x, 60.32 + y), (171.44 + x, 68.96 + y));
path.curve_to((171.44 + x, 68.96 + y), (178.19 + x, 78.22 + y), (178.98 + x, 78.37 + y));
path.curve_to((179.76 + x, 78.53 + y), (181.49 + x, 81.98 + y), (181.49 + x, 81.98 + y));
path.line_to((179.76 + x, 81.20 + y));
path.line_to((181.80 + x, 84.65 + y));
path.curve_to((181.80 + x, 84.65 + y), (177.41 + x, 79.94 + y), (179.76 + x, 85.12 + y));
path.line_to((181.96 + x, 90.77 + y));
path.curve_to((181.96 + x, 90.77 + y), (173.96 + x, 82.14 + y), (179.29 + x, 93.76 + y));
path.curve_to((179.29 + x, 93.76 + y), (172.86 + x, 91.72 + y), (176.31 + x, 98.46 + y));
path.curve_to((176.31 + x, 98.46 + y), (175.68 + x, 104.74 + y), (175.84 + x, 106.78 + y));
path.curve_to((176.00 + x, 108.82 + y), (176.47 + x, 119.97 + y), (174.74 + x, 123.10 + y));
path.curve_to((173.01 + x, 126.24 + y), (177.09 + x, 133.78 + y), (177.88 + x, 135.35 + y));
path.curve_to((178.66 + x, 136.91 + y), (180.08 + x, 141.15 + y), (176.62 + x, 137.54 + y));
path.curve_to((173.17 + x, 133.93 + y), (174.90 + x, 136.13 + y), (175.68 + x, 139.58 + y));
path.curve_to((176.47 + x, 143.04 + y), (178.82 + x, 149.16 + y), (178.51 + x, 151.35 + y));
path.curve_to((178.51 + x, 151.35 + y), (178.04 + x, 151.83 + y), (176.78 + x, 150.41 + y));
path.curve_to((176.78 + x, 150.41 + y), (170.97 + x, 141.47 + y), (171.60 + x, 147.12 + y));
path.curve_to((171.60 + x, 147.12 + y), (171.13 + x, 150.26 + y), (169.87 + x, 153.71 + y));
path.curve_to((169.87 + x, 153.71 + y), (168.62 + x, 157.95 + y), (168.62 + x, 154.49 + y));
path.curve_to((168.62 + x, 154.49 + y), (167.36 + x, 147.90 + y), (166.26 + x, 150.88 + y));
path.curve_to((165.16 + x, 153.87 + y), (163.75 + x, 156.22 + y), (162.65 + x, 157.16 + y));
path.curve_to((161.55 + x, 158.10 + y), (159.52 + x, 149.16 + y), (159.04 + x, 153.24 + y));
path.curve_to((159.04 + x, 153.24 + y), (154.34 + x, 148.37 + y), (152.45 + x, 154.81 + y));
path.line_to((147.90 + x, 161.24 + y));
path.curve_to((147.90 + x, 161.24 + y), (147.74 + x, 156.38 + y), (147.27 + x, 158.73 + y));
path.curve_to((147.27 + x, 158.73 + y), (135.50 + x, 161.09 + y), (131.42 + x, 159.36 + y));
path.close_path();
path.move_to((117.92 + x, 19.36 + y));
path.curve_to((117.92 + x, 19.36 + y), (113.37 + x, 16.22 + y), (111.80 + x, 16.38 + y));
path.curve_to((110.24 + x, 16.54 + y), (122.63 + x, 12.93 + y), (138.80 + x, 23.76 + y));
path.curve_to((138.80 + x, 23.76 + y), (140.68 + x, 24.85 + y), (142.09 + x, 24.70 + y));
path.curve_to((142.09 + x, 24.70 + y), (143.35 + x, 25.64 + y), (142.25 + x, 27.05 + y));
path.curve_to((142.25 + x, 27.05 + y), (138.80 + x, 30.82 + y), (143.19 + x, 35.21 + y));
path.curve_to((143.19 + x, 35.21 + y), (150.41 + x, 37.88 + y), (148.21 + x, 34.43 + y));
path.curve_to((148.21 + x, 34.43 + y), (152.45 + x, 36.00 + y), (153.39 + x, 37.57 + y));
path.curve_to((154.34 + x, 39.14 + y), (153.86 + x, 37.57 + y), (153.86 + x, 37.57 + y));
path.line_to((149.00 + x, 32.70 + y));
path.curve_to((149.00 + x, 32.70 + y), (146.96 + x, 31.92 + y), (145.86 + x, 28.62 + y));
path.curve_to((144.76 + x, 25.33 + y), (143.82 + x, 21.40 + y), (145.55 + x, 20.15 + y));
path.curve_to((145.55 + x, 20.15 + y), (143.98 + x, 21.87 + y), (144.29 + x, 20.30 + y));
path.curve_to((144.61 + x, 18.73 + y), (146.02 + x, 17.32 + y), (146.65 + x, 17.16 + y));
path.curve_to((147.27 + x, 17.01 + y), (153.71 + x, 10.81 + y), (156.38 + x, 10.65 + y));
path.curve_to((156.38 + x, 10.65 + y), (152.77 + x, 11.20 + y), (151.59 + x, 10.81 + y));
path.curve_to((150.41 + x, 10.41 + y), (139.98 + x, 5.94 + y), (137.62 + x, 5.47 + y));
path.curve_to((137.62 + x, 5.47 + y), (131.03 + x, 2.88 + y), (135.74 + x, 3.67 + y));
path.curve_to((135.74 + x, 3.67 + y), (149.79 + x, 5.16 + y), (156.93 + x, 10.34 + y));
path.curve_to((156.93 + x, 10.34 + y), (154.10 + x, 7.04 + y), (146.88 + x, 4.29 + y));
path.curve_to((146.88 + x, 4.29 + y), (138.17 + x, -0.65 + y), (124.36 + x, 1.31 + y));
path.curve_to((124.36 + x, 1.31 + y), (117.38 + x, 2.57 + y), (114.32 + x, 3.27 + y));
path.curve_to((114.32 + x, 3.27 + y), (113.30 + x, 3.04 + y), (113.06 + x, 2.88 + y));
path.curve_to((112.83 + x, 2.73 + y), (108.19 + x, -0.81 + y), (97.37 + x, 1.94 + y));
path.curve_to((97.37 + x, 1.94 + y), (90.70 + x, 3.75 + y), (87.32 + x, 5.63 + y));
path.curve_to((87.32 + x, 5.63 + y), (81.36 + x, 6.10 + y), (79.94 + x, 7.36 + y));
path.curve_to((79.94 + x, 7.36 + y), (72.65 + x, 13.08 + y), (71.86 + x, 13.40 + y));
path.curve_to((71.08 + x, 13.71 + y), (66.60 + x, 16.69 + y), (66.29 + x, 16.85 + y));
path.curve_to((66.29 + x, 16.85 + y), (75.94 + x, 14.26 + y), (76.88 + x, 13.32 + y));
path.curve_to((77.82 + x, 12.38 + y), (84.65 + x, 11.36 + y), (85.59 + x, 11.91 + y));
path.curve_to((86.53 + x, 12.46 + y), (89.83 + x, 12.22 + y), (86.07 + x, 12.46 + y));
path.curve_to((86.07 + x, 12.46 + y), (115.73 + x, 18.26 + y), (116.04 + x, 19.05 + y));
path.curve_to((116.35 + x, 19.83 + y), (117.93 + x, 19.36 + y), (117.93 + x, 19.36 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((145.94 + x, 15.75 + y));
path.curve_to((145.94 + x, 15.75 + y), (141.94 + x, 12.85 + y), (141.15 + x, 12.85 + y));
path.curve_to((140.37 + x, 12.85 + y), (135.50 + x, 8.85 + y), (133.85 + x, 9.00 + y));
path.curve_to((132.21 + x, 9.16 + y), (127.42 + x, 5.24 + y), (116.67 + x, 8.45 + y));
path.curve_to((116.67 + x, 8.45 + y), (116.43 + x, 7.67 + y), (117.85 + x, 7.36 + y));
path.curve_to((117.85 + x, 7.36 + y), (120.36 + x, 6.49 + y), (120.51 + x, 6.26 + y));
path.curve_to((120.51 + x, 6.26 + y), (128.44 + x, 4.61 + y), (131.26 + x, 6.02 + y));
path.curve_to((131.26 + x, 6.02 + y), (134.88 + x, 7.04 + y), (137.31 + x, 9.47 + y));
path.curve_to((137.31 + x, 9.47 + y), (141.70 + x, 10.73 + y), (142.96 + x, 10.34 + y));
path.curve_to((142.96 + x, 10.34 + y), (146.41 + x, 11.20 + y), (146.57 + x, 11.91 + y));
path.curve_to((146.57 + x, 11.91 + y), (148.84 + x, 13.08 + y), (148.14 + x, 14.10 + y));
path.curve_to((148.14 + x, 14.10 + y), (148.29 + x, 14.73 + y), (145.94 + x, 15.75 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0x72,0x26,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((141.05 + x, 14.92 + y));
path.curve_to((141.37 + x, 15.17 + y), (141.76 + x, 15.21 + y), (142.00 + x, 15.53 + y));
path.curve_to((142.09 + x, 15.65 + y), (141.98 + x, 15.78 + y), (141.85 + x, 15.82 + y));
path.curve_to((141.45 + x, 15.94 + y), (141.03 + x, 15.72 + y), (140.58 + x, 15.95 + y));
path.curve_to((140.43 + x, 16.03 + y), (140.18 + x, 15.96 + y), (139.96 + x, 15.90 + y));
path.curve_to((139.32 + x, 15.73 + y), (138.60 + x, 15.72 + y), (137.94 + x, 15.99 + y));
path.curve_to((137.16 + x, 15.54 + y), (136.23 + x, 15.78 + y), (135.42 + x, 15.38 + y));
path.curve_to((135.39 + x, 15.37 + y), (135.31 + x, 15.50 + y), (135.28 + x, 15.50 + y));
path.curve_to((134.08 + x, 15.05 + y), (132.61 + x, 15.16 + y), (131.66 + x, 14.26 + y));
path.curve_to((130.70 + x, 14.11 + y), (129.76 + x, 13.91 + y), (128.83 + x, 13.65 + y));
path.curve_to((128.12 + x, 13.45 + y), (127.56 + x, 13.06 + y), (126.93 + x, 12.74 + y));
path.curve_to((126.38 + x, 12.46 + y), (125.81 + x, 12.25 + y), (125.21 + x, 12.11 + y));
path.curve_to((124.48 + x, 11.93 + y), (123.76 + x, 11.97 + y), (123.02 + x, 11.77 + y));
path.curve_to((122.98 + x, 11.76 + y), (122.91 + x, 11.89 + y), (122.88 + x, 11.89 + y));
path.curve_to((122.75 + x, 11.84 + y), (122.63 + x, 11.62 + y), (122.57 + x, 11.64 + y));
path.curve_to((121.91 + x, 11.84 + y), (121.32 + x, 11.46 + y), (120.67 + x, 11.59 + y));
path.curve_to((120.21 + x, 11.11 + y), (119.53 + x, 11.21 + y), (118.93 + x, 11.04 + y));
path.curve_to((117.76 + x, 10.70 + y), (116.53 + x, 11.20 + y), (115.34 + x, 10.81 + y));
path.curve_to((116.95 + x, 10.09 + y), (118.79 + x, 10.57 + y), (120.38 + x, 9.76 + y));
path.curve_to((121.30 + x, 9.29 + y), (122.34 + x, 9.73 + y), (123.35 + x, 9.43 + y));
path.curve_to((123.54 + x, 9.37 + y), (123.81 + x, 9.29 + y), (123.97 + x, 9.55 + y));
path.curve_to((124.02 + x, 9.50 + y), (124.09 + x, 9.41 + y), (124.12 + x, 9.42 + y));
path.curve_to((125.07 + x, 9.87 + y), (125.98 + x, 10.37 + y), (126.96 + x, 10.79 + y));
path.curve_to((127.09 + x, 10.85 + y), (127.30 + x, 10.75 + y), (127.40 + x, 10.84 + y));
path.curve_to((128.00 + x, 11.31 + y), (128.76 + x, 11.27 + y), (129.30 + x, 11.75 + y));
path.curve_to((129.97 + x, 11.55 + y), (130.67 + x, 11.70 + y), (131.35 + x, 11.46 + y));
path.curve_to((131.38 + x, 11.45 + y), (131.47 + x, 11.58 + y), (131.49 + x, 11.57 + y));
path.curve_to((131.93 + x, 11.28 + y), (132.38 + x, 11.38 + y), (132.73 + x, 11.50 + y));
path.curve_to((132.87 + x, 11.55 + y), (133.13 + x, 11.65 + y), (133.25 + x, 11.68 + y));
path.curve_to((133.69 + x, 11.78 + y), (134.02 + x, 11.97 + y), (134.49 + x, 12.04 + y));
path.curve_to((134.53 + x, 12.05 + y), (134.60 + x, 11.92 + y), (134.63 + x, 11.93 + y));
path.curve_to((135.07 + x, 12.10 + y), (135.48 + x, 12.08 + y), (135.74 + x, 12.53 + y));
path.curve_to((135.79 + x, 12.48 + y), (135.86 + x, 12.39 + y), (135.89 + x, 12.40 + y));
path.curve_to((136.29 + x, 12.53 + y), (136.55 + x, 12.83 + y), (136.98 + x, 12.92 + y));
path.curve_to((137.17 + x, 12.96 + y), (137.41 + x, 13.21 + y), (137.63 + x, 13.28 + y));
path.curve_to((138.57 + x, 13.57 + y), (139.30 + x, 14.17 + y), (140.16 + x, 14.52 + y));
path.curve_to((140.45 + x, 14.64 + y), (140.80 + x, 14.73 + y), (141.05 + x, 14.92 + y));
path.close_path();
path.move_to((110.98 + x, 9.34 + y));
path.curve_to((109.99 + x, 8.67 + y), (109.06 + x, 8.23 + y), (108.10 + x, 7.53 + y));
path.curve_to((108.03 + x, 7.48 + y), (107.89 + x, 7.54 + y), (107.81 + x, 7.50 + y));
path.curve_to((107.43 + x, 7.27 + y), (107.05 + x, 7.02 + y), (106.68 + x, 6.76 + y));
path.curve_to((106.47 + x, 6.61 + y), (106.15 + x, 6.61 + y), (105.95 + x, 6.51 + y));
path.curve_to((104.95 + x, 6.00 + y), (103.92 + x, 5.78 + y), (102.94 + x, 5.31 + y));
path.curve_to((103.20 + x, 5.06 + y), (103.64 + x, 5.16 + y), (103.88 + x, 4.84 + y));
path.curve_to((103.95 + x, 4.96 + y), (104.05 + x, 5.06 + y), (104.19 + x, 4.99 + y));
path.curve_to((104.84 + x, 4.64 + y), (105.57 + x, 4.58 + y), (106.23 + x, 4.61 + y));
path.curve_to((106.90 + x, 4.65 + y), (107.57 + x, 4.77 + y), (108.27 + x, 4.88 + y));
path.curve_to((108.39 + x, 4.89 + y), (108.47 + x, 5.10 + y), (108.59 + x, 5.13 + y));
path.curve_to((109.47 + x, 5.39 + y), (110.41 + x, 5.19 + y), (111.24 + x, 5.52 + y));
path.curve_to((111.86 + x, 5.77 + y), (112.48 + x, 6.09 + y), (112.96 + x, 6.59 + y));
path.curve_to((113.06 + x, 6.69 + y), (112.93 + x, 6.81 + y), (112.82 + x, 6.88 + y));
path.curve_to((112.98 + x, 6.84 + y), (113.08 + x, 6.92 + y), (113.13 + x, 7.04 + y));
path.curve_to((113.16 + x, 7.15 + y), (113.16 + x, 7.25 + y), (113.13 + x, 7.35 + y));
path.curve_to((113.08 + x, 7.47 + y), (112.97 + x, 7.51 + y), (112.83 + x, 7.53 + y));
path.curve_to((112.27 + x, 7.61 + y), (112.97 + x, 7.07 + y), (112.70 + x, 7.24 + y));
path.curve_to((112.20 + x, 7.56 + y), (112.49 + x, 8.11 + y), (112.20 + x, 8.61 + y));
path.curve_to((112.09 + x, 8.54 + y), (112.00 + x, 8.45 + y), (112.04 + x, 8.30 + y));
path.curve_to((112.13 + x, 8.50 + y), (111.89 + x, 8.62 + y), (111.83 + x, 8.74 + y));
path.curve_to((111.68 + x, 9.02 + y), (111.33 + x, 9.58 + y), (110.98 + x, 9.34 + y));
path.close_path();
path.move_to((98.23 + x, 12.22 + y));
path.curve_to((96.99 + x, 11.91 + y), (95.79 + x, 11.96 + y), (94.61 + x, 11.46 + y));
path.curve_to((94.58 + x, 11.45 + y), (94.50 + x, 11.58 + y), (94.47 + x, 11.57 + y));
path.curve_to((93.93 + x, 11.34 + y), (93.57 + x, 10.96 + y), (93.15 + x, 10.55 + y));
path.curve_to((92.79 + x, 10.20 + y), (92.14 + x, 10.35 + y), (91.64 + x, 10.16 + y));
path.curve_to((91.52 + x, 10.11 + y), (91.44 + x, 9.91 + y), (91.32 + x, 9.90 + y));
path.curve_to((90.84 + x, 9.83 + y), (90.48 + x, 9.46 + y), (90.07 + x, 9.24 + y));
path.curve_to((90.98 + x, 8.92 + y), (91.93 + x, 8.94 + y), (92.89 + x, 8.79 + y));
path.curve_to((92.94 + x, 8.78 + y), (93.00 + x, 8.91 + y), (93.05 + x, 8.91 + y));
path.curve_to((93.10 + x, 8.91 + y), (93.15 + x, 8.82 + y), (93.21 + x, 8.77 + y));
path.curve_to((93.28 + x, 8.88 + y), (93.40 + x, 9.01 + y), (93.50 + x, 8.90 + y));
path.curve_to((93.72 + x, 8.69 + y), (93.94 + x, 8.77 + y), (94.15 + x, 8.78 + y));
path.curve_to((94.20 + x, 8.79 + y), (94.25 + x, 8.91 + y), (94.30 + x, 8.91 + y));
path.curve_to((94.36 + x, 8.91 + y), (94.41 + x, 8.78 + y), (94.46 + x, 8.78 + y));
path.curve_to((94.51 + x, 8.78 + y), (94.57 + x, 8.91 + y), (94.62 + x, 8.91 + y));
path.curve_to((94.67 + x, 8.91 + y), (94.72 + x, 8.82 + y), (94.77 + x, 8.77 + y));
path.curve_to((95.05 + x, 9.07 + y), (95.39 + x, 8.86 + y), (95.72 + x, 8.93 + y));
path.curve_to((96.12 + x, 9.01 + y), (96.23 + x, 9.47 + y), (96.65 + x, 9.58 + y));
path.curve_to((98.50 + x, 10.09 + y), (100.12 + x, 10.94 + y), (101.83 + x, 11.76 + y));
path.curve_to((101.95 + x, 11.81 + y), (102.04 + x, 11.91 + y), (101.99 + x, 12.06 + y));
path.curve_to((102.10 + x, 12.06 + y), (102.22 + x, 12.03 + y), (102.30 + x, 12.08 + y));
path.curve_to((102.71 + x, 12.37 + y), (103.12 + x, 12.58 + y), (103.39 + x, 13.01 + y));
path.curve_to((103.48 + x, 13.15 + y), (103.35 + x, 13.31 + y), (103.26 + x, 13.29 + y));
path.curve_to((101.52 + x, 12.90 + y), (99.95 + x, 12.66 + y), (98.23 + x, 12.22 + y));
path.close_path();
path.move_to((92.79 + x, 29.57 + y));
path.curve_to((92.16 + x, 29.09 + y), (91.94 + x, 28.30 + y), (91.49 + x, 27.59 + y));
path.curve_to((91.41 + x, 27.46 + y), (91.52 + x, 27.34 + y), (91.64 + x, 27.30 + y));
path.curve_to((91.86 + x, 27.24 + y), (92.07 + x, 27.43 + y), (92.23 + x, 27.51 + y));
path.curve_to((92.92 + x, 27.84 + y), (93.52 + x, 28.33 + y), (94.30 + x, 28.39 + y));
path.curve_to((95.09 + x, 29.26 + y), (96.76 + x, 29.41 + y), (96.76 + x, 30.74 + y));
path.curve_to((96.76 + x, 31.08 + y), (96.20 + x, 30.72 + y), (96.03 + x, 31.05 + y));
path.curve_to((95.07 + x, 30.66 + y), (94.13 + x, 30.70 + y), (93.20 + x, 30.12 + y));
path.curve_to((92.96 + x, 29.98 + y), (93.09 + x, 29.80 + y), (92.79 + x, 29.57 + y));
path.close_path();
path.move_to((81.98 + x, 8.94 + y));
path.curve_to((82.04 + x, 8.94 + y), (84.80 + x, 9.04 + y), (84.79 + x, 9.08 + y));
path.curve_to((84.77 + x, 9.20 + y), (81.74 + x, 9.61 + y), (81.60 + x, 9.54 + y));
path.curve_to((81.53 + x, 9.51 + y), (78.58 + x, 10.47 + y), (78.53 + x, 10.42 + y));
path.curve_to((78.64 + x, 10.36 + y), (81.88 + x, 8.94 + y), (81.98 + x, 8.94 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0x72,0x26,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((88.03 + x, 12.77 + y));
path.curve_to((88.03 + x, 12.77 + y), (82.22 + x, 13.48 + y), (80.49 + x, 13.95 + y));
path.curve_to((78.77 + x, 14.42 + y), (71.47 + x, 17.40 + y), (70.29 + x, 18.18 + y));
path.curve_to((70.29 + x, 18.18 + y), (65.03 + x, 20.30 + y), (58.36 + x, 28.15 + y));
path.curve_to((58.36 + x, 28.15 + y), (61.35 + x, 26.82 + y), (62.21 + x, 25.72 + y));
path.curve_to((62.21 + x, 25.72 + y), (67.55 + x, 20.77 + y), (67.47 + x, 21.79 + y));
path.curve_to((67.47 + x, 21.79 + y), (72.25 + x, 18.42 + y), (72.02 + x, 19.28 + y));
path.curve_to((72.02 + x, 19.28 + y), (81.59 + x, 14.89 + y), (80.81 + x, 16.14 + y));
path.curve_to((80.81 + x, 16.14 + y), (89.28 + x, 14.34 + y), (88.89 + x, 15.12 + y));
path.curve_to((88.89 + x, 15.12 + y), (96.27 + x, 16.85 + y), (95.17 + x, 16.93 + y));
path.curve_to((95.17 + x, 16.93 + y), (92.89 + x, 17.40 + y), (95.40 + x, 18.81 + y));
path.curve_to((95.40 + x, 18.81 + y), (94.07 + x, 20.54 + y), (91.95 + x, 18.97 + y));
path.curve_to((89.83 + x, 17.40 + y), (91.01 + x, 18.26 + y), (89.05 + x, 18.66 + y));
path.curve_to((89.05 + x, 18.66 + y), (88.03 + x, 18.97 + y), (86.22 + x, 17.40 + y));
path.curve_to((86.22 + x, 17.40 + y), (84.02 + x, 15.59 + y), (80.57 + x, 17.01 + y));
path.curve_to((80.57 + x, 17.01 + y), (68.56 + x, 21.95 + y), (67.78 + x, 22.19 + y));
path.curve_to((67.78 + x, 22.19 + y), (66.37 + x, 23.29 + y), (65.43 + x, 24.70 + y));
path.curve_to((65.43 + x, 24.70 + y), (63.15 + x, 26.42 + y), (61.97 + x, 26.97 + y));
path.curve_to((61.97 + x, 26.97 + y), (56.95 + x, 31.52 + y), (56.48 + x, 32.07 + y));
path.curve_to((56.48 + x, 32.07 + y), (55.15 + x, 34.11 + y), (54.83 + x, 34.27 + y));
path.curve_to((54.83 + x, 34.27 + y), (57.34 + x, 32.78 + y), (58.13 + x, 32.00 + y));
path.curve_to((58.13 + x, 32.00 + y), (63.62 + x, 28.07 + y), (65.74 + x, 27.76 + y));
path.curve_to((65.74 + x, 27.76 + y), (67.47 + x, 26.58 + y), (67.78 + x, 26.03 + y));
path.curve_to((67.78 + x, 26.03 + y), (73.43 + x, 22.42 + y), (75.08 + x, 22.42 + y));
path.curve_to((75.08 + x, 22.42 + y), (78.69 + x, 24.46 + y), (79.63 + x, 21.72 + y));
path.curve_to((79.63 + x, 21.72 + y), (81.91 + x, 21.01 + y), (84.10 + x, 21.48 + y));
path.curve_to((84.10 + x, 21.48 + y), (85.36 + x, 20.46 + y), (85.04 + x, 19.60 + y));
path.curve_to((85.04 + x, 19.60 + y), (85.67 + x, 18.89 + y), (86.06 + x, 20.38 + y));
path.curve_to((86.06 + x, 20.38 + y), (87.40 + x, 21.79 + y), (89.28 + x, 21.01 + y));
path.curve_to((89.28 + x, 21.01 + y), (90.85 + x, 20.93 + y), (90.07 + x, 21.87 + y));
path.curve_to((90.07 + x, 21.87 + y), (88.34 + x, 23.36 + y), (83.71 + x, 23.44 + y));
path.curve_to((83.71 + x, 23.44 + y), (78.84 + x, 23.68 + y), (72.41 + x, 26.66 + y));
path.curve_to((72.41 + x, 26.66 + y), (60.72 + x, 30.74 + y), (57.11 + x, 34.82 + y));
path.curve_to((57.11 + x, 34.82 + y), (54.60 + x, 38.27 + y), (52.48 + x, 38.74 + y));
path.curve_to((52.48 + x, 38.74 + y), (50.20 + x, 39.06 + y), (47.85 + x, 41.96 + y));
path.curve_to((47.85 + x, 41.96 + y), (51.69 + x, 39.69 + y), (55.22 + x, 39.69 + y));
path.curve_to((55.22 + x, 39.69 + y), (56.79 + x, 38.74 + y), (55.30 + x, 40.16 + y));
path.curve_to((55.30 + x, 40.16 + y), (53.89 + x, 43.14 + y), (54.52 + x, 45.26 + y));
path.curve_to((54.52 + x, 45.26 + y), (54.28 + x, 47.30 + y), (53.97 + x, 47.93 + y));
path.curve_to((53.97 + x, 47.93 + y), (50.91 + x, 52.95 + y), (50.91 + x, 53.89 + y));
path.curve_to((50.91 + x, 54.83 + y), (51.38 + x, 58.68 + y), (51.54 + x, 58.91 + y));
path.curve_to((51.69 + x, 59.15 + y), (51.14 + x, 58.28 + y), (52.63 + x, 59.23 + y));
path.curve_to((54.13 + x, 60.17 + y), (55.22 + x, 60.80 + y), (55.54 + x, 61.89 + y));
path.curve_to((55.85 + x, 62.99 + y), (54.75 + x, 59.78 + y), (54.67 + x, 59.07 + y));
path.curve_to((54.60 + x, 58.36 + y), (52.95 + x, 55.54 + y), (53.26 + x, 54.60 + y));
path.curve_to((53.26 + x, 54.60 + y), (53.65 + x, 54.99 + y), (53.97 + x, 55.54 + y));
path.curve_to((53.97 + x, 55.54 + y), (53.73 + x, 55.30 + y), (53.97 + x, 53.89 + y));
path.curve_to((53.97 + x, 53.89 + y), (54.28 + x, 51.85 + y), (54.83 + x, 50.59 + y));
path.curve_to((55.38 + x, 49.34 + y), (56.17 + x, 47.85 + y), (56.32 + x, 47.53 + y));
path.curve_to((56.48 + x, 47.22 + y), (56.48 + x, 44.94 + y), (57.03 + x, 45.96 + y));
path.line_to((58.36 + x, 46.98 + y));
path.curve_to((58.36 + x, 46.98 + y), (57.27 + x, 45.96 + y), (58.13 + x, 45.10 + y));
path.curve_to((58.13 + x, 45.10 + y), (57.74 + x, 42.90 + y), (58.44 + x, 41.88 + y));
path.curve_to((58.44 + x, 41.88 + y), (61.19 + x, 38.59 + y), (61.82 + x, 38.20 + y));
path.curve_to((62.45 + x, 37.80 + y), (61.90 + x, 37.96 + y), (61.90 + x, 37.96 + y));
path.curve_to((61.90 + x, 37.96 + y), (64.25 + x, 36.31 + y), (61.97 + x, 36.94 + y));
path.curve_to((61.97 + x, 36.94 + y), (60.40 + x, 37.57 + y), (59.23 + x, 37.57 + y));
path.curve_to((59.23 + x, 37.57 + y), (56.25 + x, 38.35 + y), (57.81 + x, 36.70 + y));
path.curve_to((59.38 + x, 35.06 + y), (63.31 + x, 32.94 + y), (64.80 + x, 33.02 + y));
path.line_to((65.11 + x, 33.64 + y));
path.line_to((69.51 + x, 32.70 + y));
path.line_to((69.04 + x, 33.02 + y));
path.curve_to((69.04 + x, 33.02 + y), (68.96 + x, 32.94 + y), (70.61 + x, 32.78 + y));
path.curve_to((72.25 + x, 32.62 + y), (74.53 + x, 33.17 + y), (75.08 + x, 32.47 + y));
path.curve_to((75.63 + x, 31.76 + y), (76.96 + x, 31.37 + y), (76.80 + x, 31.92 + y));
path.curve_to((76.65 + x, 32.47 + y), (76.57 + x, 33.25 + y), (76.57 + x, 33.25 + y));
path.curve_to((76.57 + x, 33.25 + y), (78.53 + x, 30.98 + y), (78.30 + x, 31.84 + y));
path.curve_to((78.06 + x, 32.70 + y), (74.84 + x, 34.74 + y), (74.29 + x, 37.17 + y));
path.line_to((78.37 + x, 33.96 + y));
path.line_to((79.79 + x, 32.78 + y));
path.curve_to((79.79 + x, 32.78 + y), (81.20 + x, 33.64 + y), (81.28 + x, 33.02 + y));
path.curve_to((81.35 + x, 32.39 + y), (83.16 + x, 30.11 + y), (83.63 + x, 30.19 + y));
path.curve_to((84.10 + x, 30.27 + y), (84.89 + x, 29.17 + y), (84.81 + x, 30.19 + y));
path.curve_to((84.73 + x, 31.21 + y), (87.71 + x, 33.33 + y), (87.71 + x, 33.33 + y));
path.curve_to((87.71 + x, 33.33 + y), (88.97 + x, 32.62 + y), (89.52 + x, 33.17 + y));
path.curve_to((90.07 + x, 33.72 + y), (91.71 + x, 25.40 + y), (91.71 + x, 25.40 + y));
path.line_to((101.52 + x, 21.24 + y));
path.line_to((118.63 + x, 19.91 + y));
path.line_to((111.96 + x, 17.24 + y));
path.line_to((88.03 + x, 12.77 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((95.17 + x, 90.85 + y));
path.curve_to((95.17 + x, 90.85 + y), (89.28 + x, 84.26 + y), (85.99 + x, 83.24 + y));
path.curve_to((85.99 + x, 83.24 + y), (80.73 + x, 80.57 + y), (71.08 + x, 83.63 + y));
let brush = render_ctx.solid_brush(Color::rgba8(0x4c,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.17);
let mut path = BezPath::new();
path.move_to((84.73 + x, 82.69 + y));
path.curve_to((84.73 + x, 82.69 + y), (74.84 + x, 79.55 + y), (68.80 + x, 81.20 + y));
path.curve_to((68.80 + x, 81.20 + y), (61.58 + x, 81.98 + y), (58.29 + x, 87.40 + y));
let brush = render_ctx.solid_brush(Color::rgba8(0x4c,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.17);
let mut path = BezPath::new();
path.move_to((83.32 + x, 82.22 + y));
path.curve_to((83.32 + x, 82.22 + y), (76.65 + x, 79.39 + y), (70.84 + x, 78.53 + y));
path.curve_to((70.84 + x, 78.53 + y), (64.33 + x, 77.51 + y), (57.81 + x, 80.34 + y));
path.curve_to((57.81 + x, 80.34 + y), (53.03 + x, 82.69 + y), (50.91 + x, 86.69 + y));
let brush = render_ctx.solid_brush(Color::rgba8(0x4c,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.17);
let mut path = BezPath::new();
path.move_to((83.71 + x, 82.38 + y));
path.curve_to((83.71 + x, 82.38 + y), (77.67 + x, 78.06 + y), (77.28 + x, 77.51 + y));
path.curve_to((77.28 + x, 77.51 + y), (74.53 + x, 73.20 + y), (69.43 + x, 73.04 + y));
path.curve_to((69.43 + x, 73.04 + y), (61.03 + x, 73.35 + y), (54.28 + x, 76.49 + y));
let brush = render_ctx.solid_brush(Color::rgba8(0x4c,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.17);
let mut path = BezPath::new();
path.move_to((83.20 + x, 78.85 + y));
path.curve_to((83.80 + x, 79.42 + y), (94.38 + x, 90.77 + y), (94.38 + x, 90.77 + y));
path.curve_to((108.19 + x, 105.13 + y), (97.21 + x, 91.71 + y), (97.21 + x, 91.71 + y));
path.curve_to((94.23 + x, 89.83 + y), (90.62 + x, 82.45 + y), (90.62 + x, 82.45 + y));
path.curve_to((90.15 + x, 81.36 + y), (96.11 + x, 85.28 + y), (96.11 + x, 85.28 + y));
path.curve_to((97.68 + x, 85.59 + y), (103.02 + x, 93.13 + y), (103.02 + x, 93.13 + y));
path.curve_to((100.35 + x, 92.18 + y), (102.23 + x, 95.01 + y), (102.23 + x, 95.01 + y));
path.curve_to((103.33 + x, 95.79 + y), (111.33 + x, 101.92 + y), (111.33 + x, 101.92 + y));
path.curve_to((112.75 + x, 103.49 + y), (114.31 + x, 104.11 + y), (114.31 + x, 104.11 + y));
path.curve_to((119.81 + x, 102.07 + y), (117.30 + x, 107.25 + y), (117.30 + x, 107.25 + y));
path.curve_to((118.24 + x, 109.92 + y), (120.44 + x, 105.37 + y), (120.44 + x, 105.37 + y));
path.curve_to((124.83 + x, 98.78 + y), (118.40 + x, 99.72 + y), (118.40 + x, 99.72 + y));
path.curve_to((106.62 + x, 100.82 + y), (103.96 + x, 94.54 + y), (103.96 + x, 94.54 + y));
path.curve_to((103.01 + x, 93.60 + y), (106.47 + x, 94.54 + y), (106.47 + x, 94.54 + y));
path.curve_to((109.76 + x, 95.32 + y), (103.64 + x, 89.67 + y), (103.64 + x, 89.67 + y));
path.curve_to((104.58 + x, 89.67 + y), (108.19 + x, 92.34 + y), (108.19 + x, 92.34 + y));
path.curve_to((112.27 + x, 95.95 + y), (113.06 + x, 95.17 + y), (113.06 + x, 95.17 + y));
path.curve_to((120.12 + x, 91.71 + y), (124.20 + x, 94.70 + y), (124.20 + x, 94.70 + y));
path.curve_to((124.99 + x, 95.32 + y), (122.79 + x, 97.99 + y), (123.42 + x, 100.03 + y));
path.curve_to((124.05 + x, 102.07 + y), (125.93 + x, 106.94 + y), (125.93 + x, 106.94 + y));
path.curve_to((124.99 + x, 107.57 + y), (125.14 + x, 111.80 + y), (125.14 + x, 111.80 + y));
path.curve_to((131.74 + x, 120.91 + y), (127.97 + x, 120.12 + y), (127.97 + x, 120.12 + y));
path.curve_to((121.85 + x, 119.97 + y), (127.66 + x, 122.95 + y), (127.66 + x, 122.95 + y));
path.curve_to((128.91 + x, 123.73 + y), (132.36 + x, 126.56 + y), (132.36 + x, 126.56 + y));
path.curve_to((131.27 + x, 126.09 + y), (130.64 + x, 128.13 + y), (130.64 + x, 128.13 + y));
path.curve_to((132.52 + x, 129.70 + y), (131.42 + x, 131.58 + y), (131.42 + x, 131.58 + y));
path.curve_to((129.07 + x, 132.05 + y), (128.60 + x, 133.62 + y), (128.60 + x, 133.62 + y));
path.curve_to((131.27 + x, 136.76 + y), (127.34 + x, 136.91 + y), (127.34 + x, 136.91 + y));
path.curve_to((128.75 + x, 138.64 + y), (126.87 + x, 143.35 + y), (126.87 + x, 143.35 + y));
path.curve_to((124.99 + x, 143.35 + y), (122.48 + x, 145.55 + y), (122.48 + x, 145.55 + y));
path.curve_to((123.42 + x, 147.43 + y), (119.34 + x, 149.63 + y), (119.34 + x, 149.63 + y));
path.curve_to((116.04 + x, 150.25 + y), (117.14 + x, 152.92 + y), (117.14 + x, 152.92 + y));
path.curve_to((114.00 + x, 155.28 + y), (113.06 + x, 161.56 + y), (113.06 + x, 161.56 + y));
path.curve_to((112.75 + x, 165.64 + y), (111.80 + x, 166.89 + y), (113.85 + x, 166.11 + y));
path.curve_to((115.89 + x, 165.32 + y), (115.57 + x, 160.46 + y), (115.57 + x, 160.46 + y));
path.curve_to((113.69 + x, 154.34 + y), (130.48 + x, 148.06 + y), (130.48 + x, 148.06 + y));
path.curve_to((132.05 + x, 147.43 + y), (132.36 + x, 145.39 + y), (132.36 + x, 145.39 + y));
path.curve_to((133.15 + x, 145.55 + y), (136.60 + x, 148.53 + y), (136.60 + x, 148.53 + y));
path.curve_to((139.58 + x, 152.92 + y), (139.74 + x, 149.31 + y), (139.74 + x, 149.31 + y));
path.curve_to((140.21 + x, 147.90 + y), (139.58 + x, 145.55 + y), (139.58 + x, 145.55 + y));
path.curve_to((141.94 + x, 137.07 + y), (136.45 + x, 134.56 + y), (136.45 + x, 134.56 + y));
path.curve_to((132.52 + x, 121.38 + y), (138.01 + x, 124.67 + y), (138.01 + x, 124.67 + y));
path.curve_to((139.11 + x, 126.87 + y), (143.35 + x, 128.91 + y), (143.35 + x, 128.91 + y));
path.line_to((144.76 + x, 127.97 + y));
path.curve_to((144.14 + x, 126.09 + y), (147.43 + x, 123.73 + y), (147.43 + x, 123.73 + y));
path.curve_to((148.53 + x, 126.24 + y), (150.88 + x, 123.10 + y), (150.88 + x, 123.10 + y));
path.curve_to((152.30 + x, 113.53 + y), (157.16 + x, 119.18 + y), (157.16 + x, 119.18 + y));
path.curve_to((158.73 + x, 119.65 + y), (159.20 + x, 116.98 + y), (159.20 + x, 116.98 + y));
path.curve_to((160.61 + x, 112.90 + y), (159.20 + x, 107.57 + y), (159.20 + x, 107.57 + y));
path.curve_to((160.61 + x, 107.41 + y), (164.38 + x, 109.76 + y), (164.38 + x, 109.76 + y));
path.curve_to((165.48 + x, 108.35 + y), (161.87 + x, 101.76 + y), (163.44 + x, 102.70 + y));
path.curve_to((165.01 + x, 103.64 + y), (166.74 + x, 104.27 + y), (166.74 + x, 104.27 + y));
path.curve_to((167.05 + x, 103.49 + y), (163.12 + x, 98.62 + y), (163.12 + x, 98.62 + y));
path.curve_to((161.40 + x, 97.52 + y), (159.36 + x, 89.52 + y), (159.36 + x, 89.52 + y));
path.curve_to((162.18 + x, 90.93 + y), (158.26 + x, 84.97 + y), (158.26 + x, 84.97 + y));
path.curve_to((158.26 + x, 83.71 + y), (160.61 + x, 79.32 + y), (160.61 + x, 79.32 + y));
path.curve_to((160.30 + x, 76.65 + y), (160.61 + x, 76.80 + y), (160.61 + x, 76.80 + y));
path.curve_to((161.71 + x, 77.28 + y), (164.85 + x, 77.90 + y), (162.18 + x, 75.39 + y));
path.curve_to((159.52 + x, 72.88 + y), (162.50 + x, 71.00 + y), (162.50 + x, 71.00 + y));
path.curve_to((164.22 + x, 69.90 + y), (158.89 + x, 70.06 + y), (158.89 + x, 70.06 + y));
path.curve_to((156.85 + x, 68.33 + y), (157.00 + x, 66.76 + y), (157.00 + x, 66.76 + y));
path.curve_to((160.14 + x, 67.54 + y), (154.49 + x, 61.89 + y), (153.55 + x, 60.48 + y));
path.curve_to((152.61 + x, 59.07 + y), (156.38 + x, 57.03 + y), (156.38 + x, 57.03 + y));
path.curve_to((161.56 + x, 55.62 + y), (157.00 + x, 54.36 + y), (157.00 + x, 54.36 + y));
path.curve_to((149.31 + x, 54.52 + y), (153.55 + x, 50.28 + y), (153.55 + x, 50.28 + y));
path.curve_to((155.91 + x, 50.44 + y), (155.28 + x, 49.50 + y), (155.28 + x, 49.50 + y));
path.curve_to((153.24 + x, 49.02 + y), (149.47 + x, 46.51 + y), (149.47 + x, 46.51 + y));
path.curve_to((147.90 + x, 45.10 + y), (149.31 + x, 45.41 + y), (149.31 + x, 45.41 + y));
path.curve_to((155.91 + x, 45.89 + y), (144.61 + x, 41.49 + y), (144.61 + x, 41.49 + y));
path.curve_to((147.75 + x, 41.49 + y), (140.68 + x, 37.41 + y), (140.68 + x, 37.41 + y));
path.curve_to((139.90 + x, 36.78 + y), (138.64 + x, 33.80 + y), (138.64 + x, 33.80 + y));
path.curve_to((136.29 + x, 31.76 + y), (134.40 + x, 29.09 + y), (134.40 + x, 29.09 + y));
path.curve_to((134.25 + x, 27.37 + y), (132.36 + x, 25.48 + y), (132.36 + x, 25.48 + y));
path.curve_to((127.81 + x, 20.15 + y), (125.62 + x, 20.30 + y), (125.62 + x, 20.30 + y));
path.curve_to((119.81 + x, 18.89 + y), (117.77 + x, 19.21 + y), (117.77 + x, 19.21 + y));
path.line_to((97.05 + x, 20.93 + y));
path.curve_to((86.69 + x, 25.95 + y), (89.75 + x, 34.19 + y), (89.75 + x, 34.19 + y));
path.curve_to((92.26 + x, 37.49 + y), (95.87 + x, 36.00 + y), (95.87 + x, 36.00 + y));
path.curve_to((97.68 + x, 33.57 + y), (102.23 + x, 34.43 + y), (102.23 + x, 34.43 + y));
path.curve_to((110.23 + x, 35.68 + y), (109.21 + x, 34.27 + y), (109.21 + x, 34.27 + y));
path.curve_to((108.27 + x, 32.47 + y), (101.91 + x, 30.03 + y), (101.84 + x, 29.80 + y));
path.curve_to((101.76 + x, 29.56 + y), (98.31 + x, 28.23 + y), (98.31 + x, 28.23 + y));
path.curve_to((97.13 + x, 27.76 + y), (95.40 + x, 24.15 + y), (95.40 + x, 24.15 + y));
path.curve_to((94.15 + x, 22.82 + y), (100.35 + x, 25.09 + y), (100.35 + x, 25.09 + y));
path.curve_to((99.88 + x, 25.48 + y), (102.78 + x, 27.05 + y), (102.78 + x, 27.05 + y));
path.curve_to((109.61 + x, 26.66 + y), (113.77 + x, 30.90 + y), (113.77 + x, 30.90 + y));
path.curve_to((118.00 + x, 37.41 + y), (118.08 + x, 34.19 + y), (118.08 + x, 34.19 + y));
path.curve_to((119.18 + x, 30.50 + y), (114.55 + x, 22.19 + y), (114.55 + x, 22.19 + y));
path.curve_to((114.71 + x, 21.40 + y), (117.92 + x, 23.99 + y), (117.92 + x, 23.99 + y));
path.curve_to((118.47 + x, 23.21 + y), (118.79 + x, 25.48 + y), (118.79 + x, 25.48 + y));
path.curve_to((118.87 + x, 26.42 + y), (120.36 + x, 29.56 + y), (120.36 + x, 29.56 + y));
path.curve_to((121.45 + x, 34.66 + y), (122.87 + x, 31.76 + y), (122.87 + x, 31.76 + y));
path.line_to((124.67 + x, 35.45 + y));
path.curve_to((125.22 + x, 36.47 + y), (122.87 + x, 39.45 + y), (122.87 + x, 39.45 + y));
path.curve_to((122.79 + x, 40.55 + y), (123.10 + x, 40.47 + y), (120.91 + x, 43.45 + y));
path.curve_to((118.71 + x, 46.44 + y), (120.04 + x, 48.16 + y), (120.04 + x, 48.16 + y));
path.curve_to((119.49 + x, 50.75 + y), (122.95 + x, 50.59 + y), (122.95 + x, 50.59 + y));
path.curve_to((123.97 + x, 51.46 + y), (125.30 + x, 51.46 + y), (125.30 + x, 51.46 + y));
path.curve_to((126.01 + x, 52.24 + y), (126.95 + x, 52.01 + y), (126.95 + x, 52.01 + y));
path.curve_to((127.58 + x, 50.52 + y), (130.01 + x, 51.30 + y), (130.01 + x, 51.30 + y));
path.curve_to((130.56 + x, 50.36 + y), (133.77 + x, 50.20 + y), (133.77 + x, 50.20 + y));
path.curve_to((134.17 + x, 49.18 + y), (134.32 + x, 48.55 + y), (135.66 + x, 48.32 + y));
path.curve_to((136.99 + x, 48.08 + y), (127.34 + x, 31.21 + y), (127.34 + x, 31.21 + y));
path.curve_to((129.85 + x, 30.90 + y), (126.63 + x, 26.03 + y), (126.63 + x, 26.03 + y));
path.curve_to((125.77 + x, 23.44 + y), (130.24 + x, 29.17 + y), (131.11 + x, 29.72 + y));
path.curve_to((131.97 + x, 30.27 + y), (132.36 + x, 31.13 + y), (131.73 + x, 31.06 + y));
path.curve_to((131.11 + x, 30.98 + y), (130.40 + x, 31.84 + y), (130.95 + x, 31.92 + y));
path.curve_to((131.50 + x, 32.00 + y), (136.60 + x, 37.88 + y), (137.93 + x, 41.88 + y));
path.curve_to((139.27 + x, 45.89 + y), (141.62 + x, 47.45 + y), (144.05 + x, 49.81 + y));
path.curve_to((146.49 + x, 52.17 + y), (146.17 + x, 61.66 + y), (146.17 + x, 61.66 + y));
path.curve_to((146.02 + x, 65.11 + y), (148.37 + x, 69.27 + y), (148.37 + x, 69.27 + y));
path.curve_to((149.16 + x, 70.76 + y), (147.51 + x, 77.90 + y), (147.51 + x, 77.90 + y));
path.curve_to((146.72 + x, 78.77 + y), (147.27 + x, 79.08 + y), (147.27 + x, 79.08 + y));
path.curve_to((147.66 + x, 79.55 + y), (150.33 + x, 84.73 + y), (150.33 + x, 84.73 + y));
path.curve_to((149.63 + x, 84.65 + y), (151.04 + x, 86.06 + y), (151.04 + x, 86.06 + y));
path.curve_to((153.08 + x, 88.42 + y), (150.57 + x, 87.24 + y), (150.57 + x, 87.24 + y));
path.curve_to((148.21 + x, 86.61 + y), (150.96 + x, 90.46 + y), (150.96 + x, 90.46 + y));
path.curve_to((151.43 + x, 91.17 + y), (147.90 + x, 89.36 + y), (147.90 + x, 89.36 + y));
path.curve_to((144.29 + x, 89.13 + y), (148.84 + x, 91.95 + y), (148.84 + x, 91.95 + y));
path.curve_to((152.22 + x, 94.78 + y), (147.74 + x, 93.05 + y), (147.74 + x, 93.05 + y));
path.curve_to((145.94 + x, 92.34 + y), (147.19 + x, 95.01 + y), (147.19 + x, 95.01 + y));
path.curve_to((148.45 + x, 95.64 + y), (155.20 + x, 98.39 + y), (155.20 + x, 98.39 + y));
path.curve_to((155.36 + x, 99.88 + y), (154.18 + x, 101.84 + y), (154.18 + x, 101.84 + y));
path.curve_to((154.33 + x, 103.41 + y), (153.47 + x, 104.74 + y), (153.47 + x, 104.74 + y));
path.curve_to((153.00 + x, 107.96 + y), (152.77 + x, 108.27 + y), (152.77 + x, 108.27 + y));
path.curve_to((151.12 + x, 108.35 + y), (148.21 + x, 113.77 + y), (148.21 + x, 113.77 + y));
path.curve_to((147.51 + x, 114.79 + y), (143.51 + x, 119.49 + y), (143.51 + x, 119.49 + y));
path.curve_to((142.72 + x, 122.24 + y), (135.66 + x, 119.42 + y), (135.66 + x, 119.42 + y));
path.curve_to((133.07 + x, 120.75 + y), (133.85 + x, 119.42 + y), (133.85 + x, 119.42 + y));
path.curve_to((133.70 + x, 118.55 + y), (135.58 + x, 116.20 + y), (135.58 + x, 116.20 + y));
path.curve_to((138.33 + x, 115.18 + y), (137.31 + x, 110.94 + y), (137.31 + x, 110.94 + y));
path.curve_to((138.88 + x, 110.39 + y), (134.48 + x, 109.29 + y), (134.56 + x, 108.82 + y));
path.curve_to((134.64 + x, 108.35 + y), (136.91 + x, 107.80 + y), (136.91 + x, 107.80 + y));
path.curve_to((140.05 + x, 107.02 + y), (138.33 + x, 106.08 + y), (138.33 + x, 106.08 + y));
path.curve_to((138.09 + x, 104.51 + y), (139.27 + x, 102.31 + y), (139.27 + x, 102.31 + y));
path.curve_to((143.82 + x, 101.99 + y), (139.27 + x, 95.64 + y), (139.27 + x, 95.64 + y));
path.curve_to((135.03 + x, 92.66 + y), (134.64 + x, 90.38 + y), (134.64 + x, 90.38 + y));
path.curve_to((139.58 + x, 87.16 + y), (136.36 + x, 82.30 + y), (136.44 + x, 80.89 + y));
path.line_to((136.99 + x, 71.00 + y));
path.curve_to((136.21 + x, 68.57 + y), (135.03 + x, 63.23 + y), (135.03 + x, 63.23 + y));
path.curve_to((135.89 + x, 61.19 + y), (138.80 + x, 56.24 + y), (138.80 + x, 56.24 + y));
path.curve_to((139.90 + x, 54.60 + y), (143.35 + x, 52.71 + y), (142.49 + x, 51.54 + y));
path.curve_to((141.62 + x, 50.36 + y), (138.56 + x, 51.07 + y), (138.56 + x, 51.07 + y));
path.curve_to((135.50 + x, 50.52 + y), (135.74 + x, 52.56 + y), (135.74 + x, 52.56 + y));
path.curve_to((135.11 + x, 52.95 + y), (134.80 + x, 54.91 + y), (134.80 + x, 54.91 + y));
path.curve_to((134.51 + x, 58.02 + y), (131.03 + x, 60.48 + y), (131.03 + x, 60.48 + y));
path.curve_to((126.63 + x, 62.92 + y), (130.24 + x, 64.48 + y), (130.24 + x, 64.48 + y));
path.curve_to((132.60 + x, 67.07 + y), (128.75 + x, 67.15 + y), (128.75 + x, 67.15 + y));
path.curve_to((124.44 + x, 66.45 + y), (127.65 + x, 70.45 + y), (127.65 + x, 70.45 + y));
path.curve_to((131.89 + x, 75.47 + y), (130.72 + x, 76.57 + y), (130.72 + x, 76.57 + y));
path.curve_to((126.71 + x, 76.96 + y), (131.66 + x, 80.57 + y), (131.66 + x, 80.57 + y));
path.curve_to((131.66 + x, 80.57 + y), (131.34 + x, 79.79 + y), (131.42 + x, 80.49 + y));
path.curve_to((131.50 + x, 81.20 + y), (132.68 + x, 82.85 + y), (132.99 + x, 83.63 + y));
path.curve_to((133.31 + x, 84.42 + y), (131.74 + x, 84.50 + y), (131.74 + x, 84.50 + y));
path.curve_to((131.97 + x, 88.26 + y), (125.93 + x, 86.61 + y), (125.93 + x, 86.61 + y));
path.line_to((125.30 + x, 86.69 + y));
path.curve_to((124.67 + x, 86.77 + y), (120.28 + x, 86.46 + y), (118.00 + x, 85.59 + y));
path.curve_to((115.73 + x, 84.73 + y), (113.06 + x, 84.73 + y), (113.06 + x, 84.73 + y));
path.curve_to((113.06 + x, 84.73 + y), (111.49 + x, 85.44 + y), (108.51 + x, 85.36 + y));
path.curve_to((105.53 + x, 85.28 + y), (102.39 + x, 86.38 + y), (102.39 + x, 86.38 + y));
path.curve_to((100.66 + x, 86.22 + y), (104.03 + x, 84.50 + y), (104.11 + x, 84.57 + y));
path.curve_to((104.19 + x, 84.65 + y), (106.39 + x, 82.45 + y), (103.25 + x, 82.69 + y));
path.curve_to((94.70 + x, 83.33 + y), (90.46 + x, 79.32 + y), (90.46 + x, 79.32 + y));
path.curve_to((89.67 + x, 78.77 + y), (88.65 + x, 77.67 + y), (88.65 + x, 77.67 + y));
path.curve_to((84.73 + x, 76.88 + y), (89.20 + x, 82.53 + y), (89.20 + x, 82.53 + y));
path.curve_to((89.67 + x, 83.08 + y), (89.12 + x, 83.48 + y), (89.12 + x, 83.48 + y));
path.curve_to((88.81 + x, 82.85 + y), (85.75 + x, 80.73 + y), (85.75 + x, 80.73 + y));
path.curve_to((84.65 + x, 80.35 + y), (84.11 + x, 79.82 + y), (83.20 + x, 78.85 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((73.82 + x, 74.29 + y));
path.curve_to((73.82 + x, 74.29 + y), (78.37 + x, 76.49 + y), (79.39 + x, 77.59 + y));
path.curve_to((80.41 + x, 78.69 + y), (85.91 + x, 83.16 + y), (85.91 + x, 83.16 + y));
path.curve_to((85.91 + x, 83.16 + y), (83.79 + x, 82.38 + y), (82.77 + x, 81.67 + y));
path.curve_to((81.75 + x, 80.96 + y), (77.51 + x, 77.75 + y), (77.51 + x, 77.75 + y));
path.curve_to((77.51 + x, 77.75 + y), (76.02 + x, 75.39 + y), (73.82 + x, 74.29 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x4c,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((51.06 + x, 62.05 + y));
path.curve_to((51.19 + x, 61.99 + y), (50.99 + x, 60.93 + y), (50.91 + x, 60.72 + y));
path.curve_to((50.51 + x, 59.65 + y), (46.98 + x, 59.07 + y), (46.98 + x, 59.07 + y));
path.curve_to((46.89 + x, 59.67 + y), (46.87 + x, 60.27 + y), (46.92 + x, 60.87 + y));
path.curve_to((46.92 + x, 60.87 + y), (48.83 + x, 63.04 + y), (51.06 + x, 62.05 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x99,0xcc,0x32,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((51.06 + x, 61.97 + y));
path.curve_to((50.89 + x, 62.04 + y), (51.06 + x, 60.90 + y), (50.99 + x, 60.72 + y));
path.curve_to((50.59 + x, 59.65 + y), (46.98 + x, 59.03 + y), (46.98 + x, 59.03 + y));
path.curve_to((46.89 + x, 59.63 + y), (46.87 + x, 60.23 + y), (46.92 + x, 60.84 + y));
path.curve_to((46.92 + x, 60.84 + y), (48.59 + x, 62.84 + y), (51.06 + x, 61.98 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x65,0x99,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((49.34 + x, 62.03 + y));
path.curve_to((49.09 + x, 62.03 + y), (48.90 + x, 61.58 + y), (48.90 + x, 61.03 + y));
path.curve_to((48.90 + x, 60.48 + y), (49.09 + x, 60.03 + y), (49.34 + x, 60.03 + y));
path.curve_to((49.58 + x, 60.03 + y), (49.78 + x, 60.48 + y), (49.78 + x, 61.03 + y));
path.curve_to((49.78 + x, 61.58 + y), (49.58 + x, 62.03 + y), (49.34 + x, 62.03 + y));
path.close_path();
path.move_to((31.45 + x, 100.50 + y));
path.curve_to((31.45 + x, 100.50 + y), (29.25 + x, 104.43 + y), (38.98 + x, 102.07 + y));
path.curve_to((38.98 + x, 102.07 + y), (44.47 + x, 101.60 + y), (45.42 + x, 100.66 + y));
path.curve_to((45.89 + x, 100.97 + y), (49.17 + x, 102.12 + y), (50.28 + x, 102.39 + y));
path.curve_to((52.95 + x, 103.01 + y), (56.25 + x, 99.09 + y), (56.25 + x, 99.09 + y));
path.curve_to((56.25 + x, 99.09 + y), (58.05 + x, 94.97 + y), (59.15 + x, 94.97 + y));
path.curve_to((60.25 + x, 94.97 + y), (58.99 + x, 95.60 + y), (58.99 + x, 95.60 + y));
path.curve_to((58.99 + x, 95.60 + y), (56.40 + x, 99.56 + y), (56.56 + x, 100.19 + y));
path.curve_to((56.56 + x, 100.19 + y), (54.52 + x, 108.04 + y), (48.24 + x, 108.35 + y));
path.curve_to((48.24 + x, 108.35 + y), (41.90 + x, 108.72 + y), (42.43 + x, 111.02 + y));
path.curve_to((42.43 + x, 111.02 + y), (45.89 + x, 110.08 + y), (46.83 + x, 111.02 + y));
path.curve_to((46.83 + x, 111.02 + y), (51.07 + x, 110.86 + y), (47.93 + x, 113.37 + y));
path.line_to((45.26 + x, 117.92 + y));
path.curve_to((45.26 + x, 117.92 + y), (45.31 + x, 119.46 + y), (41.34 + x, 118.08 + y));
path.curve_to((37.49 + x, 116.75 + y), (33.45 + x, 111.69 + y), (33.45 + x, 111.69 + y));
path.curve_to((33.45 + x, 111.69 + y), (27.19 + x, 105.98 + y), (31.45 + x, 100.50 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((30.98 + x, 102.07 + y));
path.curve_to((30.98 + x, 102.07 + y), (30.19 + x, 105.84 + y), (44.63 + x, 101.76 + y));
path.line_to((47.30 + x, 102.07 + y));
path.curve_to((48.24 + x, 102.39 + y), (52.95 + x, 103.48 + y), (53.73 + x, 103.01 + y));
path.curve_to((53.73 + x, 103.01 + y), (50.91 + x, 108.35 + y), (46.36 + x, 107.72 + y));
path.curve_to((46.36 + x, 107.72 + y), (41.18 + x, 108.35 + y), (41.34 + x, 110.23 + y));
path.curve_to((41.34 + x, 110.23 + y), (42.91 + x, 113.06 + y), (44.79 + x, 114.00 + y));
path.curve_to((44.79 + x, 114.00 + y), (45.89 + x, 114.94 + y), (45.73 + x, 116.20 + y));
path.curve_to((45.57 + x, 117.45 + y), (44.47 + x, 118.08 + y), (43.69 + x, 118.39 + y));
path.curve_to((42.90 + x, 118.71 + y), (41.65 + x, 117.45 + y), (41.02 + x, 117.45 + y));
path.curve_to((40.39 + x, 117.45 + y), (37.10 + x, 114.94 + y), (35.37 + x, 113.06 + y));
path.curve_to((33.65 + x, 111.18 + y), (30.35 + x, 106.47 + y), (30.51 + x, 105.37 + y));
path.line_to((30.98 + x, 102.07 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xe5,0x99,0x99,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((32.23 + x, 108.92 + y));
path.curve_to((33.25 + x, 110.47 + y), (34.51 + x, 112.12 + y), (35.37 + x, 113.06 + y));
path.curve_to((37.10 + x, 114.94 + y), (40.39 + x, 117.45 + y), (41.02 + x, 117.45 + y));
path.curve_to((41.65 + x, 117.45 + y), (42.90 + x, 118.71 + y), (43.69 + x, 118.39 + y));
path.curve_to((44.47 + x, 118.08 + y), (45.57 + x, 117.45 + y), (45.73 + x, 116.20 + y));
path.curve_to((45.88 + x, 114.94 + y), (44.79 + x, 114.00 + y), (44.79 + x, 114.00 + y));
path.curve_to((43.58 + x, 113.40 + y), (42.51 + x, 112.03 + y), (41.89 + x, 111.12 + y));
path.curve_to((41.89 + x, 111.12 + y), (41.96 + x, 112.12 + y), (39.92 + x, 111.80 + y));
path.curve_to((37.88 + x, 111.49 + y), (35.84 + x, 110.39 + y), (35.21 + x, 109.13 + y));
path.curve_to((34.59 + x, 107.88 + y), (33.64 + x, 106.94 + y), (34.27 + x, 108.35 + y));
path.curve_to((34.90 + x, 109.76 + y), (35.84 + x, 111.18 + y), (36.47 + x, 111.33 + y));
path.curve_to((37.10 + x, 111.49 + y), (36.94 + x, 111.96 + y), (36.00 + x, 111.80 + y));
path.curve_to((35.06 + x, 111.65 + y), (33.96 + x, 111.49 + y), (32.23 + x, 109.45 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xb2,0x65,0x65,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((31.21 + x, 100.66 + y));
path.curve_to((31.21 + x, 100.66 + y), (31.92 + x, 95.32 + y), (32.39 + x, 93.75 + y));
path.curve_to((32.39 + x, 93.75 + y), (32.08 + x, 91.09 + y), (33.02 + x, 89.44 + y));
path.curve_to((33.96 + x, 87.79 + y), (34.74 + x, 85.36 + y), (35.92 + x, 83.24 + y));
path.curve_to((37.10 + x, 81.12 + y), (37.18 + x, 79.55 + y), (38.75 + x, 78.92 + y));
path.curve_to((40.31 + x, 78.29 + y), (42.67 + x, 74.92 + y), (43.77 + x, 74.53 + y));
path.curve_to((44.87 + x, 74.14 + y), (44.79 + x, 74.45 + y), (44.79 + x, 74.45 + y));
path.curve_to((44.79 + x, 74.45 + y), (47.46 + x, 68.64 + y), (52.79 + x, 70.21 + y));
path.curve_to((52.79 + x, 70.21 + y), (46.44 + x, 69.11 + y), (52.64 + x, 65.43 + y));
path.curve_to((52.64 + x, 65.43 + y), (50.75 + x, 65.86 + y), (52.05 + x, 63.11 + y));
path.curve_to((52.91 + x, 61.28 + y), (52.71 + x, 63.93 + y), (48.40 + x, 68.56 + y));
path.curve_to((48.40 + x, 68.56 + y), (46.44 + x, 71.94 + y), (44.40 + x, 73.12 + y));
path.curve_to((42.35 + x, 74.29 + y), (37.65 + x, 77.04 + y), (37.18 + x, 78.53 + y));
path.curve_to((36.70 + x, 80.02 + y), (35.45 + x, 82.30 + y), (34.67 + x, 82.92 + y));
path.curve_to((33.88 + x, 83.55 + y), (32.78 + x, 85.20 + y), (32.63 + x, 86.53 + y));
path.curve_to((32.63 + x, 86.53 + y), (32.15 + x, 88.10 + y), (31.61 + x, 88.58 + y));
path.curve_to((31.06 + x, 89.05 + y), (30.98 + x, 90.30 + y), (30.98 + x, 91.09 + y));
path.curve_to((30.98 + x, 91.87 + y), (30.19 + x, 92.97 + y), (30.27 + x, 93.91 + y));
path.curve_to((30.27 + x, 93.91 + y), (30.58 + x, 101.37 + y), (30.43 + x, 102.15 + y));
path.line_to((31.21 + x, 100.66 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x99,0x26,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((27.84 + x, 102.47 + y));
path.curve_to((27.84 + x, 102.47 + y), (27.05 + x, 101.92 + y), (25.33 + x, 104.27 + y));
path.curve_to((25.33 + x, 104.27 + y), (28.19 + x, 117.22 + y), (28.19 + x, 117.77 + y));
path.curve_to((28.19 + x, 117.77 + y), (28.62 + x, 116.94 + y), (28.11 + x, 114.12 + y));
path.curve_to((27.60 + x, 111.29 + y), (27.25 + x, 106.31 + y), (27.25 + x, 106.31 + y));
path.line_to((27.84 + x, 102.47 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((36.31 + x, 78.69 + y));
path.curve_to((36.31 + x, 78.69 + y), (29.41 + x, 79.94 + y), (29.56 + x, 91.40 + y));
path.line_to((29.25 + x, 101.13 + y));
path.curve_to((29.25 + x, 101.13 + y), (28.78 + x, 91.09 + y), (28.31 + x, 90.46 + y));
path.curve_to((27.84 + x, 89.83 + y), (29.41 + x, 85.44 + y), (28.15 + x, 87.79 + y));
path.curve_to((28.15 + x, 87.79 + y), (22.66 + x, 93.28 + y), (25.80 + x, 101.60 + y));
path.curve_to((25.80 + x, 101.60 + y), (26.39 + x, 102.90 + y), (25.21 + x, 101.09 + y));
path.curve_to((25.21 + x, 101.09 + y), (23.40 + x, 96.15 + y), (23.84 + x, 93.64 + y));
path.curve_to((23.84 + x, 93.64 + y), (23.91 + x, 92.77 + y), (24.66 + x, 91.67 + y));
path.curve_to((24.66 + x, 91.67 + y), (28.03 + x, 87.08 + y), (29.09 + x, 86.18 + y));
path.curve_to((29.09 + x, 86.18 + y), (29.80 + x, 80.53 + y), (35.84 + x, 78.49 + y));
path.curve_to((35.84 + x, 78.49 + y), (38.08 + x, 77.59 + y), (36.31 + x, 78.69 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x99,0x26,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((91.01 + x, 52.71 + y));
path.curve_to((91.27 + x, 52.57 + y), (91.26 + x, 52.19 + y), (91.49 + x, 52.13 + y));
path.curve_to((91.94 + x, 51.99 + y), (92.01 + x, 51.57 + y), (92.21 + x, 51.27 + y));
path.curve_to((92.55 + x, 50.75 + y), (92.63 + x, 50.15 + y), (92.86 + x, 49.56 + y));
path.curve_to((92.96 + x, 49.29 + y), (92.97 + x, 48.91 + y), (92.85 + x, 48.65 + y));
path.curve_to((92.39 + x, 47.68 + y), (92.12 + x, 46.72 + y), (91.55 + x, 45.77 + y));
path.curve_to((91.44 + x, 45.59 + y), (91.34 + x, 45.28 + y), (91.26 + x, 45.04 + y));
path.curve_to((91.08 + x, 44.50 + y), (90.59 + x, 44.11 + y), (90.25 + x, 43.59 + y));
path.curve_to((90.14 + x, 43.42 + y), (90.34 + x, 43.06 + y), (90.06 + x, 43.02 + y));
path.curve_to((89.71 + x, 42.98 + y), (89.14 + x, 42.76 + y), (89.05 + x, 43.16 + y));
path.curve_to((88.82 + x, 44.17 + y), (89.22 + x, 45.16 + y), (89.60 + x, 46.12 + y));
path.curve_to((89.29 + x, 46.39 + y), (89.42 + x, 46.75 + y), (89.48 + x, 47.05 + y));
path.curve_to((89.76 + x, 48.47 + y), (89.29 + x, 49.78 + y), (88.99 + x, 51.15 + y));
path.curve_to((88.98 + x, 51.19 + y), (89.12 + x, 51.27 + y), (89.10 + x, 51.29 + y));
path.curve_to((88.63 + x, 52.34 + y), (88.04 + x, 53.32 + y), (87.34 + x, 54.24 + y));
path.curve_to((87.04 + x, 54.63 + y), (86.70 + x, 54.99 + y), (86.51 + x, 55.40 + y));
path.curve_to((86.36 + x, 55.71 + y), (86.20 + x, 56.09 + y), (86.30 + x, 56.48 + y));
path.curve_to((84.95 + x, 57.57 + y), (84.07 + x, 59.08 + y), (83.05 + x, 60.59 + y));
path.curve_to((82.86 + x, 60.85 + y), (82.98 + x, 61.33 + y), (83.20 + x, 61.43 + y));
path.curve_to((83.51 + x, 61.59 + y), (83.89 + x, 61.19 + y), (84.07 + x, 60.86 + y));
path.curve_to((84.23 + x, 60.58 + y), (84.36 + x, 60.33 + y), (84.56 + x, 60.08 + y));
path.curve_to((84.61 + x, 60.01 + y), (84.54 + x, 59.84 + y), (84.59 + x, 59.80 + y));
path.curve_to((85.62 + x, 58.87 + y), (86.28 + x, 57.72 + y), (87.24 + x, 56.79 + y));
path.curve_to((88.01 + x, 56.66 + y), (88.61 + x, 56.27 + y), (89.30 + x, 55.88 + y));
path.curve_to((89.42 + x, 55.81 + y), (89.62 + x, 55.90 + y), (89.74 + x, 55.83 + y));
path.curve_to((90.42 + x, 55.36 + y), (90.42 + x, 54.57 + y), (90.47 + x, 53.82 + y));
path.curve_to((90.49 + x, 53.47 + y), (90.56 + x, 52.95 + y), (91.01 + x, 52.71 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((87.54 + x, 50.96 + y));
path.curve_to((87.59 + x, 50.93 + y), (87.53 + x, 50.77 + y), (87.57 + x, 50.68 + y));
path.curve_to((87.63 + x, 50.55 + y), (87.79 + x, 50.48 + y), (87.86 + x, 50.35 + y));
path.curve_to((87.90 + x, 50.27 + y), (87.84 + x, 50.12 + y), (87.89 + x, 50.06 + y));
path.curve_to((88.80 + x, 49.10 + y), (88.90 + x, 47.92 + y), (88.50 + x, 46.75 + y));
path.curve_to((88.90 + x, 46.51 + y), (88.92 + x, 46.01 + y), (88.76 + x, 45.68 + y));
path.curve_to((88.42 + x, 45.01 + y), (88.35 + x, 44.26 + y), (87.96 + x, 43.65 + y));
path.curve_to((87.65 + x, 43.15 + y), (87.03 + x, 42.66 + y), (86.49 + x, 43.18 + y));
path.curve_to((86.33 + x, 43.33 + y), (86.20 + x, 43.64 + y), (86.31 + x, 43.92 + y));
path.curve_to((86.33 + x, 43.98 + y), (86.45 + x, 44.04 + y), (86.44 + x, 44.07 + y));
path.curve_to((86.39 + x, 44.20 + y), (86.18 + x, 44.29 + y), (86.18 + x, 44.40 + y));
path.curve_to((86.17 + x, 44.98 + y), (85.79 + x, 45.58 + y), (86.04 + x, 46.10 + y));
path.curve_to((86.34 + x, 46.74 + y), (86.66 + x, 47.46 + y), (86.93 + x, 48.16 + y));
path.curve_to((86.44 + x, 48.99 + y), (86.85 + x, 49.95 + y), (86.16 + x, 50.69 + y));
path.curve_to((86.11 + x, 50.75 + y), (86.11 + x, 50.90 + y), (86.16 + x, 50.98 + y));
path.curve_to((86.27 + x, 51.17 + y), (86.43 + x, 51.33 + y), (86.62 + x, 51.44 + y));
path.curve_to((86.70 + x, 51.49 + y), (86.84 + x, 51.49 + y), (86.92 + x, 51.44 + y));
path.curve_to((87.15 + x, 51.30 + y), (87.30 + x, 51.11 + y), (87.54 + x, 50.96 + y));
path.close_path();
path.move_to((112.19 + x, 46.91 + y));
path.curve_to((112.73 + x, 47.62 + y), (112.84 + x, 48.71 + y), (112.04 + x, 49.26 + y));
path.curve_to((112.26 + x, 50.56 + y), (113.57 + x, 49.78 + y), (114.39 + x, 49.57 + y));
path.curve_to((114.35 + x, 49.42 + y), (114.44 + x, 49.29 + y), (114.55 + x, 49.28 + y));
path.curve_to((114.97 + x, 49.28 + y), (115.23 + x, 48.88 + y), (115.65 + x, 48.95 + y));
path.curve_to((115.82 + x, 48.34 + y), (116.46 + x, 48.06 + y), (116.72 + x, 47.52 + y));
path.curve_to((117.39 + x, 46.07 + y), (117.16 + x, 44.39 + y), (116.15 + x, 43.12 + y));
path.curve_to((116.07 + x, 43.02 + y), (116.15 + x, 42.82 + y), (116.10 + x, 42.67 + y));
path.curve_to((115.81 + x, 41.81 + y), (115.00 + x, 41.68 + y), (114.24 + x, 41.41 + y));
path.curve_to((113.77 + x, 39.89 + y), (113.52 + x, 38.31 + y), (112.82 + x, 36.86 + y));
path.curve_to((112.19 + x, 36.76 + y), (111.92 + x, 36.08 + y), (111.39 + x, 35.80 + y));
path.curve_to((110.87 + x, 35.52 + y), (110.65 + x, 36.14 + y), (110.66 + x, 36.55 + y));
path.curve_to((110.67 + x, 36.63 + y), (110.84 + x, 36.71 + y), (110.78 + x, 36.86 + y));
path.curve_to((110.75 + x, 36.92 + y), (110.64 + x, 36.97 + y), (110.64 + x, 37.02 + y));
path.curve_to((110.64 + x, 37.07 + y), (110.73 + x, 37.12 + y), (110.78 + x, 37.17 + y));
path.curve_to((110.42 + x, 37.50 + y), (109.87 + x, 37.68 + y), (109.75 + x, 38.13 + y));
path.curve_to((109.38 + x, 39.59 + y), (110.38 + x, 40.81 + y), (111.04 + x, 42.07 + y));
path.curve_to((111.27 + x, 42.52 + y), (110.98 + x, 43.01 + y), (110.68 + x, 43.49 + y));
path.curve_to((110.51 + x, 43.76 + y), (110.55 + x, 44.20 + y), (110.66 + x, 44.54 + y));
path.curve_to((110.96 + x, 45.45 + y), (111.58 + x, 46.14 + y), (112.18 + x, 46.91 + y));
path.close_path();
path.move_to((97.61 + x, 54.13 + y));
path.curve_to((97.02 + x, 54.85 + y), (95.68 + x, 55.86 + y), (96.83 + x, 56.62 + y));
path.curve_to((96.90 + x, 56.67 + y), (97.05 + x, 56.67 + y), (97.12 + x, 56.62 + y));
path.curve_to((97.91 + x, 56.00 + y), (98.70 + x, 55.65 + y), (99.65 + x, 55.42 + y));
path.curve_to((99.70 + x, 55.41 + y), (99.81 + x, 55.59 + y), (99.95 + x, 55.53 + y));
path.curve_to((100.59 + x, 55.26 + y), (101.37 + x, 55.28 + y), (101.84 + x, 54.75 + y));
path.curve_to((103.32 + x, 54.84 + y), (104.72 + x, 54.40 + y), (106.05 + x, 53.89 + y));
path.curve_to((106.50 + x, 53.71 + y), (107.00 + x, 53.49 + y), (107.47 + x, 53.30 + y));
path.curve_to((108.01 + x, 53.07 + y), (108.48 + x, 52.71 + y), (108.92 + x, 52.26 + y));
path.curve_to((108.97 + x, 52.21 + y), (109.11 + x, 52.24 + y), (109.22 + x, 52.24 + y));
path.curve_to((109.20 + x, 51.90 + y), (109.58 + x, 51.85 + y), (109.67 + x, 51.61 + y));
path.curve_to((109.71 + x, 51.52 + y), (109.65 + x, 51.36 + y), (109.70 + x, 51.32 + y));
path.curve_to((110.54 + x, 50.68 + y), (110.90 + x, 49.89 + y), (110.44 + x, 48.96 + y));
path.curve_to((110.33 + x, 48.73 + y), (110.23 + x, 48.49 + y), (110.01 + x, 48.30 + y));
path.curve_to((109.59 + x, 47.95 + y), (109.15 + x, 48.28 + y), (108.74 + x, 48.16 + y));
path.curve_to((108.68 + x, 48.41 + y), (108.39 + x, 48.34 + y), (108.24 + x, 48.42 + y));
path.curve_to((107.91 + x, 48.59 + y), (107.38 + x, 48.36 + y), (107.05 + x, 48.53 + y));
path.curve_to((106.51 + x, 48.81 + y), (106.03 + x, 48.87 + y), (105.47 + x, 49.02 + y));
path.curve_to((105.34 + x, 49.05 + y), (105.04 + x, 49.01 + y), (104.98 + x, 49.26 + y));
path.curve_to((104.92 + x, 49.21 + y), (104.87 + x, 49.12 + y), (104.83 + x, 49.13 + y));
path.curve_to((104.08 + x, 49.28 + y), (103.58 + x, 49.36 + y), (103.07 + x, 50.03 + y));
path.curve_to((103.03 + x, 50.08 + y), (102.86 + x, 50.01 + y), (102.80 + x, 50.06 + y));
path.curve_to((102.42 + x, 50.38 + y), (102.26 + x, 50.86 + y), (101.83 + x, 51.13 + y));
path.curve_to((101.75 + x, 51.18 + y), (101.61 + x, 51.11 + y), (101.53 + x, 51.16 + y));
path.curve_to((101.28 + x, 51.33 + y), (101.14 + x, 51.58 + y), (100.89 + x, 51.76 + y));
path.curve_to((100.76 + x, 51.85 + y), (100.60 + x, 51.72 + y), (100.61 + x, 51.62 + y));
path.curve_to((100.71 + x, 50.85 + y), (100.96 + x, 50.15 + y), (100.74 + x, 49.42 + y));
path.curve_to((101.55 + x, 48.43 + y), (102.54 + x, 47.66 + y), (103.25 + x, 46.59 + y));
path.curve_to((103.26 + x, 45.74 + y), (103.53 + x, 44.90 + y), (103.48 + x, 44.09 + y));
path.curve_to((103.48 + x, 44.01 + y), (103.37 + x, 43.72 + y), (103.32 + x, 43.59 + y));
path.curve_to((103.19 + x, 43.25 + y), (103.55 + x, 42.83 + y), (103.22 + x, 42.55 + y));
path.curve_to((102.67 + x, 42.08 + y), (102.16 + x, 42.42 + y), (101.84 + x, 42.98 + y));
path.curve_to((101.12 + x, 43.13 + y), (100.31 + x, 43.41 + y), (99.69 + x, 42.92 + y));
path.curve_to((99.29 + x, 42.61 + y), (99.06 + x, 42.26 + y), (98.75 + x, 41.84 + y));
path.curve_to((98.36 + x, 41.33 + y), (98.50 + x, 40.77 + y), (98.52 + x, 40.16 + y));
path.curve_to((98.53 + x, 40.11 + y), (98.40 + x, 40.05 + y), (98.40 + x, 40.00 + y));
path.curve_to((98.40 + x, 39.95 + y), (98.49 + x, 39.90 + y), (98.54 + x, 39.84 + y));
path.curve_to((98.26 + x, 39.60 + y), (98.16 + x, 39.18 + y), (97.76 + x, 39.06 + y));
path.curve_to((97.88 + x, 38.63 + y), (97.61 + x, 38.28 + y), (97.27 + x, 38.17 + y));
path.curve_to((96.49 + x, 37.89 + y), (95.83 + x, 38.65 + y), (95.09 + x, 38.67 + y));
path.curve_to((94.88 + x, 38.68 + y), (94.70 + x, 38.27 + y), (94.45 + x, 38.15 + y));
path.curve_to((94.28 + x, 38.06 + y), (94.00 + x, 38.05 + y), (93.86 + x, 38.15 + y));
path.curve_to((93.59 + x, 38.35 + y), (93.36 + x, 38.40 + y), (93.06 + x, 38.48 + y));
path.curve_to((92.43 + x, 38.65 + y), (91.92 + x, 39.08 + y), (91.34 + x, 39.41 + y));
path.curve_to((90.76 + x, 39.75 + y), (90.39 + x, 40.31 + y), (89.96 + x, 40.83 + y));
path.curve_to((89.59 + x, 41.28 + y), (89.54 + x, 42.23 + y), (90.10 + x, 42.42 + y));
path.curve_to((90.82 + x, 42.68 + y), (91.33 + x, 41.62 + y), (92.10 + x, 41.75 + y));
path.curve_to((92.23 + x, 41.77 + y), (92.31 + x, 41.89 + y), (92.26 + x, 42.04 + y));
path.curve_to((92.42 + x, 42.08 + y), (92.50 + x, 41.99 + y), (92.58 + x, 41.88 + y));
path.curve_to((92.91 + x, 42.28 + y), (93.37 + x, 42.42 + y), (93.74 + x, 42.76 + y));
path.curve_to((94.12 + x, 43.11 + y), (94.80 + x, 42.95 + y), (95.20 + x, 43.34 + y));
path.curve_to((95.80 + x, 43.93 + y), (95.58 + x, 44.98 + y), (96.34 + x, 45.49 + y));
path.curve_to((96.11 + x, 46.01 + y), (95.88 + x, 46.51 + y), (95.74 + x, 47.07 + y));
path.curve_to((95.63 + x, 47.54 + y), (96.02 + x, 48.01 + y), (96.50 + x, 47.98 + y));
path.curve_to((96.99 + x, 47.94 + y), (97.10 + x, 47.64 + y), (97.29 + x, 47.22 + y));
path.curve_to((97.39 + x, 47.33 + y), (97.58 + x, 47.44 + y), (97.56 + x, 47.53 + y));
path.curve_to((97.38 + x, 48.46 + y), (96.98 + x, 49.25 + y), (96.80 + x, 50.20 + y));
path.curve_to((96.77 + x, 50.32 + y), (96.65 + x, 50.40 + y), (96.50 + x, 50.36 + y));
path.curve_to((96.32 + x, 51.99 + y), (94.73 + x, 52.93 + y), (93.73 + x, 54.17 + y));
path.curve_to((93.57 + x, 54.37 + y), (93.57 + x, 54.86 + y), (93.73 + x, 55.01 + y));
path.curve_to((94.28 + x, 55.56 + y), (95.05 + x, 54.95 + y), (95.72 + x, 54.75 + y));
path.curve_to((95.80 + x, 54.28 + y), (96.14 + x, 53.91 + y), (96.66 + x, 53.93 + y));
path.curve_to((96.76 + x, 53.94 + y), (96.85 + x, 53.72 + y), (96.98 + x, 53.67 + y));
path.curve_to((97.12 + x, 53.62 + y), (97.31 + x, 53.71 + y), (97.43 + x, 53.63 + y));
path.curve_to((98.10 + x, 53.16 + y), (98.66 + x, 52.73 + y), (99.34 + x, 52.26 + y));
path.curve_to((99.41 + x, 52.21 + y), (99.55 + x, 52.27 + y), (99.63 + x, 52.23 + y));
path.curve_to((99.76 + x, 52.17 + y), (99.83 + x, 52.01 + y), (99.96 + x, 51.94 + y));
path.curve_to((100.10 + x, 51.86 + y), (100.19 + x, 51.98 + y), (100.27 + x, 52.09 + y));
path.curve_to((100.01 + x, 52.22 + y), (100.01 + x, 52.60 + y), (99.78 + x, 52.68 + y));
path.curve_to((99.48 + x, 52.78 + y), (99.26 + x, 52.98 + y), (99.00 + x, 53.16 + y));
path.curve_to((98.88 + x, 53.24 + y), (98.62 + x, 53.14 + y), (98.58 + x, 53.21 + y));
path.curve_to((98.35 + x, 53.61 + y), (97.88 + x, 53.78 + y), (97.60 + x, 54.13 + y));
path.close_path();
path.move_to((75.86 + x, 34.74 + y));
path.curve_to((75.86 + x, 34.74 + y), (72.24 + x, 33.62 + y), (67.86 + x, 43.69 + y));
path.curve_to((67.86 + x, 43.69 + y), (66.92 + x, 45.73 + y), (65.98 + x, 46.51 + y));
path.curve_to((65.03 + x, 47.30 + y), (60.64 + x, 48.71 + y), (59.85 + x, 50.28 + y));
path.line_to((55.77 + x, 56.56 + y));
path.curve_to((55.77 + x, 56.56 + y), (61.58 + x, 50.28 + y), (62.84 + x, 49.34 + y));
path.curve_to((62.84 + x, 49.34 + y), (65.98 + x, 46.04 + y), (64.72 + x, 48.71 + y));
path.curve_to((64.72 + x, 48.71 + y), (59.23 + x, 52.95 + y), (59.70 + x, 56.56 + y));
path.curve_to((59.70 + x, 56.56 + y), (57.50 + x, 62.21 + y), (57.19 + x, 62.99 + y));
path.curve_to((57.19 + x, 62.99 + y), (63.46 + x, 50.44 + y), (64.41 + x, 49.97 + y));
path.curve_to((65.35 + x, 49.50 + y), (65.82 + x, 49.50 + y), (65.35 + x, 50.91 + y));
path.curve_to((64.87 + x, 52.32 + y), (64.72 + x, 58.76 + y), (63.62 + x, 59.54 + y));
path.curve_to((63.62 + x, 59.54 + y), (66.76 + x, 51.54 + y), (66.45 + x, 50.28 + y));
path.curve_to((66.45 + x, 50.28 + y), (67.70 + x, 48.87 + y), (68.64 + x, 50.91 + y));
path.line_to((68.17 + x, 57.19 + y));
path.line_to((69.90 + x, 61.89 + y));
path.curve_to((69.90 + x, 61.89 + y), (68.96 + x, 57.50 + y), (69.58 + x, 51.38 + y));
path.curve_to((69.58 + x, 51.38 + y), (68.80 + x, 47.30 + y), (70.37 + x, 49.50 + y));
path.curve_to((71.94 + x, 51.69 + y), (75.71 + x, 54.05 + y), (75.71 + x, 55.93 + y));
path.curve_to((75.71 + x, 55.93 + y), (73.67 + x, 49.02 + y), (70.06 + x, 47.14 + y));
path.line_to((68.49 + x, 49.50 + y));
path.line_to((68.02 + x, 48.71 + y));
path.curve_to((68.02 + x, 48.71 + y), (66.60 + x, 48.40 + y), (68.33 + x, 45.73 + y));
path.curve_to((70.06 + x, 43.06 + y), (69.90 + x, 42.75 + y), (69.90 + x, 42.75 + y));
path.curve_to((69.90 + x, 42.75 + y), (72.41 + x, 45.57 + y), (73.04 + x, 45.57 + y));
path.curve_to((73.04 + x, 45.57 + y), (78.22 + x, 42.59 + y), (78.69 + x, 52.16 + y));
path.curve_to((78.69 + x, 52.16 + y), (81.36 + x, 46.51 + y), (77.75 + x, 43.85 + y));
path.curve_to((77.75 + x, 43.85 + y), (71.94 + x, 43.06 + y), (72.41 + x, 41.02 + y));
path.line_to((75.23 + x, 36.16 + y));
path.curve_to((76.65 + x, 34.12 + y), (76.02 + x, 35.21 + y), (76.02 + x, 35.21 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((68.02 + x, 41.18 + y));
path.line_to((61.74 + x, 43.22 + y));
path.line_to((58.91 + x, 46.98 + y));
path.curve_to((58.91 + x, 46.98 + y), (65.66 + x, 43.06 + y), (67.23 + x, 42.59 + y));
path.curve_to((68.80 + x, 42.12 + y), (68.02 + x, 41.18 + y), (68.02 + x, 41.18 + y));
path.close_path();
path.move_to((52.32 + x, 43.69 + y));
path.curve_to((52.32 + x, 43.69 + y), (51.54 + x, 44.16 + y), (51.38 + x, 45.26 + y));
path.curve_to((51.22 + x, 46.36 + y), (50.28 + x, 46.51 + y), (50.60 + x, 47.61 + y));
path.curve_to((50.91 + x, 48.71 + y), (51.69 + x, 49.65 + y), (51.69 + x, 48.08 + y));
path.curve_to((51.69 + x, 46.51 + y), (52.32 + x, 45.73 + y), (52.64 + x, 45.26 + y));
path.curve_to((52.95 + x, 44.79 + y), (53.58 + x, 43.06 + y), (52.32 + x, 43.69 + y));
path.close_path();
path.move_to((48.87 + x, 67.70 + y));
path.curve_to((48.87 + x, 67.70 + y), (45.57 + x, 66.13 + y), (44.32 + x, 64.72 + y));
path.curve_to((43.06 + x, 63.31 + y), (43.24 + x, 65.33 + y), (41.34 + x, 65.19 + y));
path.curve_to((39.04 + x, 65.02 + y), (39.45 + x, 58.76 + y), (39.45 + x, 58.76 + y));
path.line_to((37.88 + x, 61.74 + y));
path.curve_to((37.88 + x, 61.74 + y), (37.41 + x, 67.39 + y), (40.55 + x, 66.45 + y));
path.curve_to((42.08 + x, 65.99 + y), (42.59 + x, 66.60 + y), (41.96 + x, 66.92 + y));
path.curve_to((41.34 + x, 67.23 + y), (44.16 + x, 67.39 + y), (43.06 + x, 68.02 + y));
path.curve_to((41.96 + x, 68.64 + y), (47.61 + x, 66.60 + y), (46.67 + x, 70.68 + y));
path.line_to((48.87 + x, 67.70 + y));
path.close_path();
path.move_to((43.93 + x, 73.35 + y));
path.curve_to((43.93 + x, 73.35 + y), (37.88 + x, 75.08 + y), (36.47 + x, 71.31 + y));
path.curve_to((36.47 + x, 71.31 + y), (34.59 + x, 72.25 + y), (35.45 + x, 73.43 + y));
path.curve_to((36.31 + x, 74.61 + y), (36.78 + x, 74.76 + y), (36.78 + x, 74.76 + y));
path.curve_to((36.78 + x, 74.76 + y), (38.90 + x, 75.23 + y), (38.67 + x, 75.55 + y));
path.curve_to((38.43 + x, 75.86 + y), (37.49 + x, 77.20 + y), (37.49 + x, 77.20 + y));
path.curve_to((37.49 + x, 77.20 + y), (41.49 + x, 74.84 + y), (43.93 + x, 73.35 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((133.54 + x, 104.03 + y));
path.curve_to((133.37 + x, 104.88 + y), (132.72 + x, 105.19 + y), (131.97 + x, 105.45 + y));
path.curve_to((131.22 + x, 105.07 + y), (130.20 + x, 103.85 + y), (129.46 + x, 104.66 + y));
path.curve_to((129.28 + x, 104.47 + y), (128.97 + x, 104.45 + y), (128.83 + x, 104.19 + y));
path.curve_to((128.65 + x, 103.84 + y), (128.76 + x, 103.43 + y), (128.63 + x, 103.12 + y));
path.curve_to((128.41 + x, 102.61 + y), (128.14 + x, 102.08 + y), (128.21 + x, 101.52 + y));
path.curve_to((128.92 + x, 101.25 + y), (129.15 + x, 100.50 + y), (128.96 + x, 99.81 + y));
path.curve_to((128.94 + x, 99.70 + y), (128.77 + x, 99.63 + y), (128.84 + x, 99.49 + y));
path.curve_to((128.92 + x, 99.36 + y), (129.04 + x, 99.28 + y), (129.15 + x, 99.17 + y));
path.curve_to((129.10 + x, 99.22 + y), (129.04 + x, 99.31 + y), (128.99 + x, 99.31 + y));
path.curve_to((128.75 + x, 99.26 + y), (128.80 + x, 99.01 + y), (128.85 + x, 98.86 + y));
path.curve_to((129.08 + x, 98.18 + y), (129.87 + x, 98.08 + y), (130.40 + x, 98.54 + y));
path.curve_to((130.50 + x, 98.32 + y), (130.70 + x, 98.40 + y), (130.87 + x, 98.39 + y));
path.curve_to((130.85 + x, 98.16 + y), (131.01 + x, 97.95 + y), (131.09 + x, 97.79 + y));
path.curve_to((131.30 + x, 97.36 + y), (131.93 + x, 97.79 + y), (132.25 + x, 97.55 + y));
path.curve_to((132.67 + x, 97.22 + y), (133.09 + x, 96.95 + y), (133.51 + x, 97.19 + y));
path.curve_to((134.22 + x, 97.58 + y), (134.89 + x, 98.06 + y), (135.36 + x, 98.75 + y));
path.curve_to((135.59 + x, 99.07 + y), (135.68 + x, 99.57 + y), (135.66 + x, 99.95 + y));
path.curve_to((135.64 + x, 100.20 + y), (135.10 + x, 100.06 + y), (134.97 + x, 100.43 + y));
path.curve_to((134.71 + x, 101.12 + y), (135.43 + x, 101.32 + y), (135.73 + x, 101.84 + y));
path.curve_to((135.81 + x, 101.98 + y), (135.70 + x, 102.10 + y), (135.58 + x, 102.14 + y));
path.curve_to((135.42 + x, 102.19 + y), (135.11 + x, 102.12 + y), (135.16 + x, 102.29 + y));
path.curve_to((135.55 + x, 103.54 + y), (134.46 + x, 103.81 + y), (133.54 + x, 104.03 + y));
path.close_path();
path.move_to((129.77 + x, 111.72 + y));
path.curve_to((129.77 + x, 111.04 + y), (129.14 + x, 110.35 + y), (129.62 + x, 109.68 + y));
path.curve_to((129.67 + x, 109.74 + y), (129.72 + x, 109.82 + y), (129.77 + x, 109.82 + y));
path.curve_to((129.83 + x, 109.82 + y), (129.88 + x, 109.74 + y), (129.93 + x, 109.68 + y));
path.curve_to((130.52 + x, 110.55 + y), (131.95 + x, 110.92 + y), (131.90 + x, 112.03 + y));
path.curve_to((131.89 + x, 112.21 + y), (131.46 + x, 112.57 + y), (131.82 + x, 112.82 + y));
path.curve_to((131.11 + x, 113.35 + y), (131.08 + x, 114.28 + y), (130.72 + x, 115.02 + y));
path.curve_to((130.23 + x, 114.92 + y), (129.76 + x, 114.76 + y), (129.30 + x, 114.55 + y));
path.curve_to((129.44 + x, 113.97 + y), (129.40 + x, 113.31 + y), (129.72 + x, 112.79 + y));
path.curve_to((129.89 + x, 112.51 + y), (129.77 + x, 112.09 + y), (129.77 + x, 111.72 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((64.56 + x, 108.19 + y));
path.curve_to((64.56 + x, 108.19 + y), (57.95 + x, 112.17 + y), (63.46 + x, 106.15 + y));
path.curve_to((66.92 + x, 102.39 + y), (70.84 + x, 100.19 + y), (70.84 + x, 100.19 + y));
path.curve_to((70.84 + x, 100.19 + y), (74.92 + x, 98.46 + y), (76.33 + x, 97.99 + y));
path.curve_to((77.75 + x, 97.52 + y), (83.71 + x, 95.48 + y), (84.97 + x, 95.32 + y));
path.curve_to((86.22 + x, 95.17 + y), (89.99 + x, 93.60 + y), (92.66 + x, 95.17 + y));
path.curve_to((95.32 + x, 96.74 + y), (98.46 + x, 98.46 + y), (98.46 + x, 98.46 + y));
path.curve_to((98.46 + x, 98.46 + y), (92.03 + x, 95.17 + y), (90.62 + x, 96.11 + y));
path.curve_to((89.20 + x, 97.05 + y), (86.38 + x, 96.89 + y), (84.02 + x, 98.15 + y));
path.curve_to((84.02 + x, 98.15 + y), (78.22 + x, 99.88 + y), (76.96 + x, 100.66 + y));
path.curve_to((75.71 + x, 101.44 + y), (71.63 + x, 106.00 + y), (71.00 + x, 105.68 + y));
path.curve_to((70.37 + x, 105.37 + y), (71.16 + x, 105.21 + y), (71.63 + x, 104.11 + y));
path.curve_to((72.10 + x, 103.01 + y), (71.31 + x, 102.39 + y), (68.17 + x, 104.90 + y));
path.curve_to((65.03 + x, 107.41 + y), (64.56 + x, 108.19 + y), (64.56 + x, 108.19 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0xcc,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((67.47 + x, 105.85 + y));
path.curve_to((67.47 + x, 105.85 + y), (68.02 + x, 100.73 + y), (71.35 + x, 101.39 + y));
path.curve_to((71.35 + x, 101.39 + y), (74.58 + x, 99.75 + y), (75.64 + x, 98.98 + y));
path.curve_to((75.64 + x, 98.98 + y), (78.84 + x, 98.31 + y), (79.35 + x, 98.07 + y));
path.curve_to((86.60 + x, 94.66 + y), (92.38 + x, 96.43 + y), (92.59 + x, 95.99 + y));
path.curve_to((92.81 + x, 95.55 + y), (100.51 + x, 98.35 + y), (101.92 + x, 99.95 + y));
path.curve_to((102.08 + x, 100.12 + y), (97.91 + x, 97.75 + y), (94.10 + x, 97.01 + y));
path.curve_to((90.86 + x, 96.38 + y), (82.38 + x, 97.11 + y), (78.10 + x, 99.28 + y));
path.curve_to((76.93 + x, 99.87 + y), (73.42 + x, 102.14 + y), (72.43 + x, 102.10 + y));
path.curve_to((71.44 + x, 102.05 + y), (67.47 + x, 105.85 + y), (67.47 + x, 105.85 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((65.98 + x, 115.88 + y));
path.curve_to((65.98 + x, 115.88 + y), (60.01 + x, 114.94 + y), (66.60 + x, 114.31 + y));
path.curve_to((66.60 + x, 114.31 + y), (73.67 + x, 113.53 + y), (75.23 + x, 111.49 + y));
path.curve_to((75.23 + x, 111.49 + y), (80.57 + x, 107.88 + y), (81.67 + x, 107.72 + y));
path.curve_to((82.77 + x, 107.57 + y), (94.54 + x, 104.74 + y), (94.70 + x, 103.80 + y));
path.curve_to((94.85 + x, 102.86 + y), (97.05 + x, 102.86 + y), (97.68 + x, 103.17 + y));
path.curve_to((98.31 + x, 103.48 + y), (97.99 + x, 103.96 + y), (96.89 + x, 104.27 + y));
path.curve_to((95.80 + x, 104.58 + y), (83.55 + x, 111.02 + y), (81.04 + x, 111.49 + y));
path.curve_to((78.53 + x, 111.96 + y), (73.98 + x, 114.94 + y), (72.10 + x, 115.41 + y));
path.curve_to((70.21 + x, 115.88 + y), (65.98 + x, 115.88 + y), (65.98 + x, 115.88 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0xcc,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((73.64 + x, 112.98 + y));
path.curve_to((73.64 + x, 112.98 + y), (70.27 + x, 112.66 + y), (73.64 + x, 112.34 + y));
path.curve_to((73.64 + x, 112.34 + y), (77.10 + x, 110.99 + y), (77.91 + x, 109.95 + y));
path.curve_to((77.91 + x, 109.95 + y), (80.64 + x, 108.10 + y), (81.20 + x, 108.02 + y));
path.curve_to((81.76 + x, 107.94 + y), (87.24 + x, 106.49 + y), (87.32 + x, 106.01 + y));
path.curve_to((87.40 + x, 105.52 + y), (100.77 + x, 100.59 + y), (102.50 + x, 101.84 + y));
path.curve_to((103.64 + x, 102.66 + y), (99.76 + x, 102.01 + y), (95.98 + x, 103.74 + y));
path.curve_to((95.45 + x, 103.98 + y), (82.16 + x, 109.70 + y), (80.88 + x, 109.95 + y));
path.curve_to((79.59 + x, 110.19 + y), (77.26 + x, 111.71 + y), (76.30 + x, 111.96 + y));
path.curve_to((75.33 + x, 112.20 + y), (73.64 + x, 112.98 + y), (73.64 + x, 112.98 + y));
path.close_path();
path.move_to((70.53 + x, 113.84 + y));
path.curve_to((70.53 + x, 113.84 + y), (72.57 + x, 113.69 + y), (72.10 + x, 114.31 + y));
path.curve_to((71.63 + x, 114.94 + y), (70.68 + x, 114.63 + y), (70.68 + x, 114.63 + y));
path.line_to((70.53 + x, 113.84 + y));
path.close_path();
path.move_to((67.70 + x, 114.47 + y));
path.curve_to((67.70 + x, 114.47 + y), (69.74 + x, 114.32 + y), (69.27 + x, 114.94 + y));
path.curve_to((68.80 + x, 115.57 + y), (67.86 + x, 115.26 + y), (67.86 + x, 115.26 + y));
path.line_to((67.70 + x, 114.47 + y));
path.close_path();
path.move_to((63.62 + x, 115.10 + y));
path.curve_to((63.62 + x, 115.10 + y), (65.66 + x, 114.94 + y), (65.19 + x, 115.57 + y));
path.curve_to((64.72 + x, 116.20 + y), (63.78 + x, 115.88 + y), (63.78 + x, 115.88 + y));
path.line_to((63.62 + x, 115.10 + y));
path.close_path();
path.move_to((60.64 + x, 115.41 + y));
path.curve_to((60.64 + x, 115.41 + y), (62.68 + x, 115.26 + y), (62.21 + x, 115.88 + y));
path.curve_to((61.74 + x, 116.51 + y), (60.80 + x, 116.20 + y), (60.80 + x, 116.20 + y));
path.line_to((60.64 + x, 115.41 + y));
path.close_path();
path.move_to((75.71 + x, 99.88 + y));
path.line_to((76.96 + x, 100.50 + y));
path.curve_to((76.49 + x, 101.13 + y), (75.23 + x, 100.97 + y), (75.23 + x, 100.97 + y));
path.line_to((75.71 + x, 99.88 + y));
path.close_path();
path.move_to((71.78 + x, 102.07 + y));
path.curve_to((71.78 + x, 102.07 + y), (74.33 + x, 101.23 + y), (73.35 + x, 102.54 + y));
path.curve_to((72.88 + x, 103.17 + y), (71.94 + x, 102.86 + y), (71.94 + x, 102.86 + y));
path.line_to((71.78 + x, 102.07 + y));
path.close_path();
path.move_to((67.39 + x, 103.96 + y));
path.curve_to((67.39 + x, 103.96 + y), (69.43 + x, 103.80 + y), (68.96 + x, 104.43 + y));
path.curve_to((68.49 + x, 105.06 + y), (67.54 + x, 104.74 + y), (67.54 + x, 104.74 + y));
path.line_to((67.39 + x, 103.96 + y));
path.close_path();
path.move_to((64.41 + x, 106.31 + y));
path.curve_to((64.41 + x, 106.31 + y), (66.45 + x, 106.15 + y), (65.98 + x, 106.78 + y));
path.curve_to((65.51 + x, 107.41 + y), (64.56 + x, 107.09 + y), (64.56 + x, 107.09 + y));
path.line_to((64.41 + x, 106.31 + y));
path.close_path();
path.move_to((61.74 + x, 108.19 + y));
path.curve_to((61.74 + x, 108.19 + y), (63.78 + x, 108.04 + y), (63.31 + x, 108.66 + y));
path.curve_to((62.84 + x, 109.29 + y), (61.89 + x, 108.98 + y), (61.89 + x, 108.98 + y));
path.line_to((61.74 + x, 108.19 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((77.07 + x, 110.70 + y));
path.curve_to((77.07 + x, 110.70 + y), (79.79 + x, 110.50 + y), (79.16 + x, 111.33 + y));
path.curve_to((78.54 + x, 112.16 + y), (77.28 + x, 111.75 + y), (77.28 + x, 111.75 + y));
path.line_to((77.07 + x, 110.70 + y));
path.close_path();
path.move_to((81.15 + x, 108.82 + y));
path.curve_to((81.15 + x, 108.82 + y), (83.87 + x, 108.61 + y), (83.24 + x, 109.45 + y));
path.curve_to((82.62 + x, 110.28 + y), (81.36 + x, 109.86 + y), (81.36 + x, 109.86 + y));
path.line_to((81.15 + x, 108.82 + y));
path.close_path();
path.move_to((85.39 + x, 107.09 + y));
path.curve_to((85.39 + x, 107.09 + y), (88.11 + x, 106.89 + y), (87.48 + x, 107.72 + y));
path.curve_to((86.85 + x, 108.55 + y), (85.60 + x, 108.14 + y), (85.60 + x, 108.14 + y));
path.line_to((85.39 + x, 107.09 + y));
path.close_path();
path.move_to((89.47 + x, 105.21 + y));
path.curve_to((89.47 + x, 105.21 + y), (92.19 + x, 105.00 + y), (91.56 + x, 105.84 + y));
path.curve_to((90.93 + x, 106.67 + y), (89.68 + x, 106.25 + y), (89.68 + x, 106.25 + y));
path.line_to((89.47 + x, 105.21 + y));
path.close_path();
path.move_to((78.64 + x, 98.15 + y));
path.curve_to((78.64 + x, 98.15 + y), (81.36 + x, 97.94 + y), (80.73 + x, 98.78 + y));
path.curve_to((80.10 + x, 99.61 + y), (78.54 + x, 99.51 + y), (78.54 + x, 99.51 + y));
path.line_to((78.64 + x, 98.15 + y));
path.close_path();
path.move_to((82.57 + x, 96.89 + y));
path.curve_to((82.57 + x, 96.89 + y), (85.28 + x, 96.68 + y), (84.66 + x, 97.52 + y));
path.curve_to((84.03 + x, 98.35 + y), (82.30 + x, 98.25 + y), (82.30 + x, 98.25 + y));
path.line_to((82.57 + x, 96.89 + y));
path.close_path();
path.move_to((73.67 + x, 112.59 + y));
path.curve_to((73.67 + x, 112.59 + y), (75.71 + x, 112.43 + y), (75.24 + x, 113.06 + y));
path.curve_to((74.77 + x, 113.69 + y), (73.82 + x, 113.37 + y), (73.82 + x, 113.37 + y));
path.line_to((73.67 + x, 112.59 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((44.95 + x, 73.67 + y));
path.curve_to((44.95 + x, 73.67 + y), (43.22 + x, 77.12 + y), (43.06 + x, 78.37 + y));
path.curve_to((43.06 + x, 78.37 + y), (43.38 + x, 74.92 + y), (43.85 + x, 74.14 + y));
path.curve_to((44.32 + x, 73.35 + y), (44.94 + x, 73.67 + y), (44.94 + x, 73.67 + y));
path.close_path();
path.move_to((37.73 + x, 79.16 + y));
path.curve_to((37.73 + x, 79.16 + y), (36.47 + x, 84.81 + y), (36.63 + x, 85.91 + y));
path.curve_to((36.63 + x, 85.91 + y), (36.16 + x, 81.36 + y), (36.31 + x, 80.89 + y));
path.curve_to((36.47 + x, 80.41 + y), (37.73 + x, 79.16 + y), (37.73 + x, 79.16 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x99,0x26,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((45.89 + x, 49.89 + y));
path.line_to((45.81 + x, 51.14 + y));
path.line_to((44.95 + x, 51.22 + y));
path.curve_to((44.95 + x, 51.22 + y), (50.52 + x, 56.17 + y), (50.75 + x, 59.15 + y));
path.curve_to((50.75 + x, 59.15 + y), (51.07 + x, 55.93 + y), (45.89 + x, 49.89 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0xcc,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((47.45 + x, 50.38 + y));
path.curve_to((47.28 + x, 50.22 + y), (47.37 + x, 49.93 + y), (47.21 + x, 49.83 + y));
path.curve_to((46.89 + x, 49.62 + y), (47.72 + x, 49.60 + y), (47.63 + x, 49.32 + y));
path.curve_to((47.48 + x, 48.85 + y), (47.55 + x, 48.84 + y), (47.50 + x, 48.34 + y));
path.curve_to((47.48 + x, 48.10 + y), (47.71 + x, 47.50 + y), (47.86 + x, 47.33 + y));
path.curve_to((48.43 + x, 46.68 + y), (47.91 + x, 45.53 + y), (48.55 + x, 44.92 + y));
path.curve_to((48.67 + x, 44.81 + y), (48.82 + x, 44.59 + y), (48.93 + x, 44.43 + y));
path.curve_to((49.19 + x, 44.05 + y), (49.65 + x, 43.86 + y), (50.03 + x, 43.53 + y));
path.curve_to((50.15 + x, 43.42 + y), (50.07 + x, 43.10 + y), (50.30 + x, 43.13 + y));
path.curve_to((50.58 + x, 43.18 + y), (51.06 + x, 43.13 + y), (51.05 + x, 43.46 + y));
path.curve_to((51.00 + x, 44.29 + y), (50.48 + x, 44.97 + y), (49.98 + x, 45.62 + y));
path.curve_to((50.15 + x, 45.90 + y), (49.97 + x, 46.15 + y), (49.86 + x, 46.37 + y));
path.curve_to((49.34 + x, 47.39 + y), (49.41 + x, 48.51 + y), (49.34 + x, 49.62 + y));
path.curve_to((49.34 + x, 49.66 + y), (49.22 + x, 49.69 + y), (49.23 + x, 49.71 + y));
path.curve_to((49.37 + x, 50.62 + y), (49.59 + x, 51.49 + y), (49.94 + x, 52.36 + y));
path.curve_to((50.08 + x, 52.73 + y), (50.27 + x, 53.08 + y), (50.33 + x, 53.44 + y));
path.curve_to((50.37 + x, 53.71 + y), (50.41 + x, 54.04 + y), (50.25 + x, 54.31 + y));
path.curve_to((51.05 + x, 55.45 + y), (50.53 + x, 56.49 + y), (50.99 + x, 57.87 + y));
path.curve_to((51.07 + x, 58.12 + y), (51.74 + x, 58.87 + y), (51.56 + x, 58.80 + y));
path.curve_to((50.57 + x, 58.46 + y), (50.53 + x, 58.31 + y), (50.46 + x, 58.01 + y));
path.curve_to((50.40 + x, 57.77 + y), (50.27 + x, 57.23 + y), (50.18 + x, 56.99 + y));
path.curve_to((50.15 + x, 56.93 + y), (50.09 + x, 56.19 + y), (50.05 + x, 56.14 + y));
path.curve_to((49.46 + x, 55.21 + y), (49.99 + x, 55.27 + y), (49.46 + x, 54.35 + y));
path.curve_to((48.90 + x, 54.08 + y), (48.52 + x, 53.65 + y), (48.08 + x, 53.19 + y));
path.curve_to((48.00 + x, 53.11 + y), (48.45 + x, 52.83 + y), (48.38 + x, 52.75 + y));
path.curve_to((47.95 + x, 52.24 + y), (47.50 + x, 51.94 + y), (47.63 + x, 51.35 + y));
path.curve_to((47.69 + x, 51.08 + y), (47.74 + x, 50.67 + y), (47.45 + x, 50.38 + y));
path.close_path();
path.move_to((46.04 + x, 51.06 + y));
path.curve_to((46.04 + x, 51.06 + y), (46.20 + x, 53.73 + y), (47.14 + x, 54.36 + y));
path.curve_to((48.08 + x, 54.99 + y), (47.61 + x, 54.67 + y), (46.36 + x, 54.20 + y));
path.curve_to((45.10 + x, 53.73 + y), (45.57 + x, 53.42 + y), (45.57 + x, 53.42 + y));
path.curve_to((45.57 + x, 53.42 + y), (44.47 + x, 53.58 + y), (45.42 + x, 54.36 + y));
path.curve_to((46.36 + x, 55.15 + y), (47.77 + x, 56.09 + y), (47.14 + x, 56.09 + y));
path.curve_to((46.51 + x, 56.09 + y), (43.53 + x, 54.52 + y), (43.53 + x, 53.42 + y));
path.curve_to((43.53 + x, 52.32 + y), (43.14 + x, 50.71 + y), (43.14 + x, 50.71 + y));
path.curve_to((43.14 + x, 50.71 + y), (43.57 + x, 50.40 + y), (45.46 + x, 50.44 + y));
path.curve_to((45.46 + x, 50.44 + y), (46.01 + x, 50.71 + y), (46.04 + x, 51.07 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((45.73 + x, 58.36 + y));
path.curve_to((45.73 + x, 58.36 + y), (42.39 + x, 57.27 + y), (35.14 + x, 58.60 + y));
path.curve_to((35.14 + x, 58.60 + y), (38.68 + x, 57.78 + y), (46.04 + x, 58.68 + y));
path.curve_to((50.08 + x, 59.17 + y), (45.73 + x, 58.36 + y), (45.73 + x, 58.36 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((46.55 + x, 58.34 + y));
path.curve_to((46.55 + x, 58.34 + y), (43.32 + x, 56.95 + y), (35.98 + x, 57.65 + y));
path.curve_to((35.98 + x, 57.65 + y), (39.58 + x, 57.15 + y), (46.84 + x, 58.68 + y));
path.curve_to((50.82 + x, 59.51 + y), (46.55 + x, 58.34 + y), (46.55 + x, 58.34 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((47.25 + x, 58.37 + y));
path.curve_to((47.25 + x, 58.37 + y), (44.13 + x, 56.76 + y), (36.76 + x, 56.91 + y));
path.curve_to((36.76 + x, 56.91 + y), (40.39 + x, 56.67 + y), (47.51 + x, 58.73 + y));
path.curve_to((51.42 + x, 59.86 + y), (47.25 + x, 58.37 + y), (47.25 + x, 58.37 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((47.75 + x, 58.46 + y));
path.curve_to((47.75 + x, 58.46 + y), (45.08 + x, 56.77 + y), (38.45 + x, 56.34 + y));
path.curve_to((38.45 + x, 56.34 + y), (41.73 + x, 56.41 + y), (47.96 + x, 58.80 + y));
path.curve_to((51.38 + x, 60.12 + y), (47.75 + x, 58.46 + y), (47.75 + x, 58.46 + y));
path.close_path();
path.move_to((92.99 + x, 62.59 + y));
path.curve_to((92.99 + x, 62.59 + y), (92.62 + x, 62.84 + y), (92.71 + x, 62.38 + y));
path.curve_to((92.79 + x, 61.91 + y), (103.86 + x, 56.74 + y), (105.28 + x, 56.84 + y));
path.curve_to((105.28 + x, 56.84 + y), (93.41 + x, 62.02 + y), (92.99 + x, 62.59 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((91.65 + x, 62.84 + y));
path.curve_to((91.65 + x, 62.84 + y), (91.31 + x, 63.12 + y), (91.36 + x, 62.65 + y));
path.curve_to((91.40 + x, 62.18 + y), (102.03 + x, 56.16 + y), (103.45 + x, 56.15 + y));
path.curve_to((103.45 + x, 56.15 + y), (92.03 + x, 62.24 + y), (91.65 + x, 62.84 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((90.36 + x, 63.38 + y));
path.curve_to((90.36 + x, 63.38 + y), (90.04 + x, 63.68 + y), (90.06 + x, 63.21 + y));
path.curve_to((90.07 + x, 62.74 + y), (97.85 + x, 56.66 + y), (101.70 + x, 55.92 + y));
path.curve_to((101.70 + x, 55.92 + y), (94.62 + x, 59.11 + y), (90.36 + x, 63.38 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((89.24 + x, 64.11 + y));
path.curve_to((89.24 + x, 64.11 + y), (88.94 + x, 64.38 + y), (88.96 + x, 63.96 + y));
path.curve_to((88.97 + x, 63.53 + y), (95.97 + x, 58.06 + y), (99.44 + x, 57.40 + y));
path.curve_to((99.44 + x, 57.40 + y), (93.07 + x, 60.27 + y), (89.24 + x, 64.11 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((76.81 + x, 122.16 + y));
path.curve_to((76.81 + x, 122.16 + y), (70.84 + x, 121.22 + y), (77.43 + x, 120.59 + y));
path.curve_to((77.43 + x, 120.59 + y), (84.50 + x, 119.81 + y), (86.07 + x, 117.77 + y));
path.curve_to((86.07 + x, 117.77 + y), (91.40 + x, 114.16 + y), (92.50 + x, 114.00 + y));
path.curve_to((93.60 + x, 113.84 + y), (100.03 + x, 112.43 + y), (100.19 + x, 111.49 + y));
path.curve_to((100.35 + x, 110.55 + y), (102.70 + x, 109.61 + y), (103.33 + x, 109.92 + y));
path.curve_to((103.96 + x, 110.23 + y), (103.96 + x, 113.84 + y), (102.86 + x, 114.16 + y));
path.curve_to((101.76 + x, 114.47 + y), (94.38 + x, 117.30 + y), (91.87 + x, 117.77 + y));
path.curve_to((89.36 + x, 118.24 + y), (84.81 + x, 121.22 + y), (82.93 + x, 121.69 + y));
path.curve_to((81.04 + x, 122.16 + y), (76.81 + x, 122.16 + y), (76.81 + x, 122.16 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0xcc,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((105.45 + x, 107.49 + y));
path.curve_to((105.45 + x, 107.49 + y), (104.27 + x, 108.11 + y), (103.80 + x, 109.13 + y));
path.curve_to((103.80 + x, 109.13 + y), (101.29 + x, 113.29 + y), (95.72 + x, 114.55 + y));
path.curve_to((95.72 + x, 114.55 + y), (86.69 + x, 118.08 + y), (83.63 + x, 118.87 + y));
path.curve_to((83.63 + x, 118.87 + y), (78.37 + x, 120.83 + y), (75.47 + x, 120.51 + y));
path.curve_to((75.47 + x, 120.51 + y), (72.72 + x, 120.59 + y), (75.16 + x, 121.22 + y));
path.curve_to((75.16 + x, 121.22 + y), (83.08 + x, 120.44 + y), (84.42 + x, 119.73 + y));
path.curve_to((84.42 + x, 119.73 + y), (90.54 + x, 117.69 + y), (91.72 + x, 116.67 + y));
path.curve_to((92.89 + x, 115.65 + y), (100.03 + x, 113.69 + y), (100.90 + x, 112.90 + y));
path.curve_to((101.76 + x, 112.12 + y), (105.61 + x, 108.82 + y), (105.45 + x, 107.49 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((82.41 + x, 119.85 + y));
path.curve_to((82.41 + x, 119.85 + y), (84.46 + x, 119.76 + y), (84.01 + x, 120.37 + y));
path.curve_to((83.56 + x, 120.98 + y), (82.60 + x, 120.64 + y), (82.60 + x, 120.64 + y));
path.line_to((82.41 + x, 119.85 + y));
path.close_path();
path.move_to((79.58 + x, 120.38 + y));
path.curve_to((79.58 + x, 120.38 + y), (81.63 + x, 120.29 + y), (81.18 + x, 120.90 + y));
path.curve_to((80.73 + x, 121.51 + y), (79.77 + x, 121.17 + y), (79.77 + x, 121.17 + y));
path.line_to((79.58 + x, 120.38 + y));
path.close_path();
path.move_to((75.49 + x, 120.87 + y));
path.curve_to((75.49 + x, 120.87 + y), (77.54 + x, 120.78 + y), (77.09 + x, 121.39 + y));
path.curve_to((76.64 + x, 122.00 + y), (75.68 + x, 121.66 + y), (75.68 + x, 121.66 + y));
path.line_to((75.49 + x, 120.87 + y));
path.close_path();
path.move_to((72.50 + x, 121.09 + y));
path.curve_to((72.50 + x, 121.09 + y), (74.55 + x, 121.00 + y), (74.10 + x, 121.60 + y));
path.curve_to((73.64 + x, 122.21 + y), (72.68 + x, 121.87 + y), (72.68 + x, 121.87 + y));
path.line_to((72.50 + x, 121.09 + y));
path.close_path();
path.move_to((88.90 + x, 116.95 + y));
path.curve_to((88.90 + x, 116.95 + y), (91.63 + x, 116.83 + y), (91.02 + x, 117.64 + y));
path.curve_to((90.42 + x, 118.45 + y), (89.14 + x, 117.99 + y), (89.14 + x, 117.99 + y));
path.line_to((88.90 + x, 116.95 + y));
path.close_path();
path.move_to((92.94 + x, 115.21 + y));
path.curve_to((92.94 + x, 115.21 + y), (95.28 + x, 113.92 + y), (95.07 + x, 115.90 + y));
path.curve_to((94.97 + x, 116.90 + y), (93.19 + x, 116.26 + y), (93.19 + x, 116.26 + y));
path.line_to((92.94 + x, 115.21 + y));
path.close_path();
path.move_to((96.53 + x, 114.11 + y));
path.curve_to((96.53 + x, 114.11 + y), (99.34 + x, 112.66 + y), (98.66 + x, 114.80 + y));
path.curve_to((98.35 + x, 115.76 + y), (96.77 + x, 115.15 + y), (96.77 + x, 115.15 + y));
path.line_to((96.53 + x, 114.11 + y));
path.close_path();
path.move_to((100.26 + x, 112.22 + y));
path.curve_to((100.26 + x, 112.22 + y), (101.97 + x, 110.29 + y), (102.39 + x, 112.91 + y));
path.curve_to((102.55 + x, 113.90 + y), (100.51 + x, 113.26 + y), (100.51 + x, 113.26 + y));
path.line_to((100.26 + x, 112.22 + y));
path.close_path();
path.move_to((85.53 + x, 118.71 + y));
path.curve_to((85.53 + x, 118.71 + y), (87.58 + x, 118.62 + y), (87.13 + x, 119.23 + y));
path.curve_to((86.68 + x, 119.84 + y), (85.72 + x, 119.49 + y), (85.72 + x, 119.49 + y));
path.line_to((85.53 + x, 118.71 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((99.50 + x, 71.08 + y));
path.curve_to((99.50 + x, 71.08 + y), (99.21 + x, 71.34 + y), (99.21 + x, 70.92 + y));
path.curve_to((99.21 + x, 70.50 + y), (106.07 + x, 65.29 + y), (109.54 + x, 64.75 + y));
path.curve_to((109.54 + x, 64.75 + y), (103.22 + x, 67.39 + y), (99.50 + x, 71.08 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((100.66 + x, 96.11 + y));
path.curve_to((100.66 + x, 96.11 + y), (109.29 + x, 104.90 + y), (112.90 + x, 106.31 + y));
path.curve_to((112.90 + x, 106.31 + y), (116.51 + x, 110.70 + y), (114.94 + x, 120.91 + y));
path.curve_to((114.94 + x, 120.91 + y), (113.69 + x, 123.89 + y), (112.43 + x, 115.73 + y));
path.curve_to((112.43 + x, 115.73 + y), (113.69 + x, 105.84 + y), (109.29 + x, 112.12 + y));
path.curve_to((109.29 + x, 112.12 + y), (106.00 + x, 108.23 + y), (108.51 + x, 108.35 + y));
path.curve_to((108.51 + x, 108.35 + y), (109.76 + x, 109.14 + y), (109.92 + x, 108.51 + y));
path.curve_to((110.08 + x, 107.88 + y), (106.94 + x, 102.54 + y), (100.19 + x, 96.89 + y));
path.curve_to((93.44 + x, 91.24 + y), (100.66 + x, 96.11 + y), (100.66 + x, 96.11 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((77.75 + x, 111.33 + y));
path.curve_to((77.75 + x, 111.33 + y), (77.67 + x, 110.63 + y), (78.37 + x, 110.94 + y));
path.curve_to((79.08 + x, 111.25 + y), (116.04 + x, 113.69 + y), (128.44 + x, 123.10 + y));
path.curve_to((128.44 + x, 123.10 + y), (110.71 + x, 114.00 + y), (77.75 + x, 111.33 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((81.83 + x, 109.61 + y));
path.curve_to((81.83 + x, 109.61 + y), (81.75 + x, 108.90 + y), (82.45 + x, 109.21 + y));
path.curve_to((83.16 + x, 109.53 + y), (136.76 + x, 109.14 + y), (146.02 + x, 121.85 + y));
path.curve_to((146.02 + x, 121.85 + y), (137.39 + x, 111.96 + y), (81.83 + x, 109.61 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((86.38 + x, 108.04 + y));
path.curve_to((86.38 + x, 108.04 + y), (86.30 + x, 107.33 + y), (87.01 + x, 107.64 + y));
path.curve_to((87.71 + x, 107.96 + y), (155.75 + x, 102.86 + y), (165.01 + x, 115.57 + y));
path.curve_to((165.01 + x, 115.57 + y), (161.24 + x, 105.53 + y), (86.38 + x, 108.04 + y));
path.close_path();
path.move_to((90.30 + x, 106.15 + y));
path.curve_to((90.30 + x, 106.15 + y), (90.22 + x, 105.45 + y), (90.93 + x, 105.76 + y));
path.curve_to((91.64 + x, 106.08 + y), (139.58 + x, 90.93 + y), (148.84 + x, 103.64 + y));
path.curve_to((148.84 + x, 103.64 + y), (143.59 + x, 93.99 + y), (90.30 + x, 106.15 + y));
path.close_path();
path.move_to((67.55 + x, 115.10 + y));
path.curve_to((67.55 + x, 115.10 + y), (67.47 + x, 114.39 + y), (68.17 + x, 114.71 + y));
path.curve_to((68.88 + x, 115.02 + y), (75.86 + x, 115.88 + y), (76.65 + x, 131.11 + y));
path.curve_to((76.65 + x, 131.11 + y), (73.82 + x, 114.63 + y), (67.55 + x, 115.10 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((64.09 + x, 115.73 + y));
path.curve_to((64.09 + x, 115.73 + y), (64.01 + x, 115.02 + y), (64.72 + x, 115.34 + y));
path.curve_to((65.43 + x, 115.65 + y), (71.00 + x, 113.84 + y), (69.90 + x, 129.07 + y));
path.curve_to((69.90 + x, 129.07 + y), (70.37 + x, 115.26 + y), (64.09 + x, 115.73 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((60.95 + x, 115.88 + y));
path.curve_to((60.95 + x, 115.88 + y), (60.88 + x, 115.18 + y), (61.58 + x, 115.49 + y));
path.curve_to((62.29 + x, 115.81 + y), (68.33 + x, 116.04 + y), (63.46 + x, 124.83 + y));
path.curve_to((63.46 + x, 124.83 + y), (67.23 + x, 115.41 + y), (60.95 + x, 115.88 + y));
path.close_path();
path.move_to((79.52 + x, 98.49 + y));
path.curve_to((79.52 + x, 98.49 + y), (79.35 + x, 99.27 + y), (79.96 + x, 98.80 + y));
path.curve_to((86.26 + x, 93.84 + y), (98.99 + x, 70.73 + y), (120.84 + x, 68.52 + y));
path.curve_to((120.84 + x, 68.52 + y), (105.81 + x, 63.77 + y), (79.52 + x, 98.49 + y));
path.close_path();
path.move_to((83.92 + x, 97.78 + y));
path.curve_to((83.92 + x, 97.78 + y), (83.38 + x, 97.31 + y), (84.11 + x, 97.07 + y));
path.curve_to((84.85 + x, 96.82 + y), (128.97 + x, 68.38 + y), (144.38 + x, 71.50 + y));
path.curve_to((144.38 + x, 71.50 + y), (133.75 + x, 68.56 + y), (83.92 + x, 97.78 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((75.74 + x, 100.18 + y));
path.curve_to((75.74 + x, 100.18 + y), (75.54 + x, 100.80 + y), (76.21 + x, 100.42 + y));
path.curve_to((79.73 + x, 98.41 + y), (81.15 + x, 75.96 + y), (98.25 + x, 75.47 + y));
path.curve_to((98.25 + x, 75.47 + y), (85.53 + x, 69.70 + y), (75.74 + x, 100.18 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((67.92 + x, 104.50 + y));
path.curve_to((67.92 + x, 104.50 + y), (67.50 + x, 105.01 + y), (68.27 + x, 104.91 + y));
path.curve_to((72.29 + x, 104.38 + y), (80.69 + x, 88.19 + y), (98.12 + x, 90.18 + y));
path.curve_to((98.12 + x, 90.18 + y), (85.58 + x, 84.56 + y), (67.92 + x, 104.50 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((72.33 + x, 102.10 + y));
path.curve_to((72.33 + x, 102.10 + y), (72.01 + x, 102.68 + y), (72.75 + x, 102.43 + y));
path.curve_to((76.59 + x, 101.15 + y), (81.73 + x, 83.64 + y), (99.22 + x, 82.25 + y));
path.curve_to((99.22 + x, 82.25 + y), (85.83 + x, 79.13 + y), (72.33 + x, 102.10 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((65.16 + x, 106.51 + y));
path.curve_to((65.16 + x, 106.51 + y), (64.82 + x, 106.92 + y), (65.44 + x, 106.84 + y));
path.curve_to((68.70 + x, 106.42 + y), (75.50 + x, 93.30 + y), (89.62 + x, 94.91 + y));
path.curve_to((89.62 + x, 94.91 + y), (79.46 + x, 90.35 + y), (65.16 + x, 106.51 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((62.18 + x, 108.83 + y));
path.curve_to((62.18 + x, 108.83 + y), (61.78 + x, 109.24 + y), (62.41 + x, 109.19 + y));
path.curve_to((64.04 + x, 109.07 + y), (76.06 + x, 96.09 + y), (83.31 + x, 102.17 + y));
path.curve_to((83.31 + x, 102.17 + y), (78.60 + x, 94.83 + y), (62.18 + x, 108.83 + y));
path.close_path();
path.move_to((89.46 + x, 96.30 + y));
path.curve_to((89.46 + x, 96.30 + y), (88.99 + x, 95.77 + y), (89.75 + x, 95.62 + y));
path.curve_to((90.51 + x, 95.47 + y), (137.86 + x, 72.83 + y), (152.76 + x, 77.87 + y));
path.curve_to((152.76 + x, 77.87 + y), (142.58 + x, 73.61 + y), (89.46 + x, 96.30 + y));
path.close_path();
path.move_to((76.33 + x, 121.53 + y));
path.curve_to((76.33 + x, 121.53 + y), (76.26 + x, 120.83 + y), (76.96 + x, 121.14 + y));
path.curve_to((77.67 + x, 121.46 + y), (83.71 + x, 121.69 + y), (78.84 + x, 130.48 + y));
path.curve_to((78.84 + x, 130.48 + y), (82.61 + x, 121.06 + y), (76.33 + x, 121.53 + y));
path.close_path();
path.move_to((80.41 + x, 120.91 + y));
path.curve_to((80.41 + x, 120.91 + y), (80.34 + x, 120.20 + y), (81.04 + x, 120.51 + y));
path.curve_to((81.75 + x, 120.83 + y), (88.73 + x, 121.69 + y), (89.52 + x, 136.91 + y));
path.curve_to((89.52 + x, 136.91 + y), (86.69 + x, 120.44 + y), (80.41 + x, 120.91 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((83.08 + x, 120.28 + y));
path.curve_to((83.08 + x, 120.28 + y), (83.00 + x, 119.57 + y), (83.71 + x, 119.89 + y));
path.curve_to((84.42 + x, 120.20 + y), (94.07 + x, 121.53 + y), (103.33 + x, 134.25 + y));
path.curve_to((103.33 + x, 134.25 + y), (89.36 + x, 119.81 + y), (83.08 + x, 120.28 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((86.08 + x, 119.48 + y));
path.curve_to((86.08 + x, 119.48 + y), (85.90 + x, 118.79 + y), (86.64 + x, 119.01 + y));
path.curve_to((87.39 + x, 119.23 + y), (95.40 + x, 118.48 + y), (110.35 + x, 131.89 + y));
path.curve_to((110.35 + x, 131.89 + y), (92.23 + x, 118.18 + y), (86.08 + x, 119.48 + y));
path.close_path();
path.move_to((90.16 + x, 117.76 + y));
path.curve_to((90.16 + x, 117.76 + y), (89.98 + x, 117.07 + y), (90.72 + x, 117.28 + y));
path.curve_to((91.47 + x, 117.50 + y), (105.13 + x, 119.27 + y), (125.42 + x, 132.99 + y));
path.curve_to((125.42 + x, 132.99 + y), (96.31 + x, 116.46 + y), (90.16 + x, 117.76 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((74.29 + x, 113.22 + y));
path.curve_to((74.29 + x, 113.22 + y), (74.22 + x, 112.51 + y), (74.92 + x, 112.82 + y));
path.curve_to((75.63 + x, 113.14 + y), (96.58 + x, 114.16 + y), (108.51 + x, 124.67 + y));
path.curve_to((108.51 + x, 124.67 + y), (94.81 + x, 114.95 + y), (74.29 + x, 113.22 + y));
path.close_path();
path.move_to((70.37 + x, 114.78 + y));
path.curve_to((70.37 + x, 114.78 + y), (70.29 + x, 114.08 + y), (71.00 + x, 114.39 + y));
path.curve_to((71.70 + x, 114.71 + y), (81.36 + x, 116.04 + y), (90.62 + x, 128.75 + y));
path.curve_to((90.62 + x, 128.75 + y), (76.65 + x, 114.31 + y), (70.37 + x, 114.78 + y));
path.close_path();
path.move_to((94.42 + x, 115.95 + y));
path.curve_to((94.42 + x, 115.95 + y), (94.20 + x, 115.27 + y), (94.96 + x, 115.44 + y));
path.curve_to((95.71 + x, 115.60 + y), (109.47 + x, 116.36 + y), (130.71 + x, 128.56 + y));
path.curve_to((130.71 + x, 128.56 + y), (100.24 + x, 115.06 + y), (94.42 + x, 115.95 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((97.72 + x, 115.00 + y));
path.curve_to((97.72 + x, 115.00 + y), (97.50 + x, 114.33 + y), (98.25 + x, 114.49 + y));
path.curve_to((99.01 + x, 114.66 + y), (112.77 + x, 115.41 + y), (134.00 + x, 127.61 + y));
path.curve_to((134.00 + x, 127.61 + y), (103.77 + x, 113.96 + y), (97.72 + x, 115.00 + y));
path.close_path();
path.move_to((101.49 + x, 113.04 + y));
path.curve_to((101.49 + x, 113.04 + y), (101.26 + x, 112.37 + y), (102.02 + x, 112.53 + y));
path.curve_to((102.78 + x, 112.69 + y), (119.68 + x, 114.39 + y), (154.88 + x, 127.85 + y));
path.curve_to((154.88 + x, 127.85 + y), (107.54 + x, 112.00 + y), (101.49 + x, 113.04 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xff,0xff,0xff,0xff));
render_ctx.fill(path.clone(), &brush);
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.04);
let mut path = BezPath::new();
path.move_to((57.81 + x, 115.73 + y));
path.curve_to((57.81 + x, 115.73 + y), (59.85 + x, 115.57 + y), (59.38 + x, 116.20 + y));
path.curve_to((58.91 + x, 116.83 + y), (57.97 + x, 116.51 + y), (57.97 + x, 116.51 + y));
path.line_to((57.81 + x, 115.73 + y));
path.close_path();
path.move_to((69.90 + x, 121.22 + y));
path.curve_to((69.90 + x, 121.22 + y), (71.94 + x, 121.06 + y), (71.47 + x, 121.69 + y));
path.curve_to((71.00 + x, 122.32 + y), (70.06 + x, 122.00 + y), (70.06 + x, 122.00 + y));
path.line_to((69.90 + x, 121.22 + y));
path.close_path();
path.move_to((66.45 + x, 121.06 + y));
path.curve_to((66.45 + x, 121.06 + y), (68.49 + x, 120.91 + y), (68.02 + x, 121.53 + y));
path.curve_to((67.55 + x, 122.16 + y), (66.60 + x, 121.85 + y), (66.60 + x, 121.85 + y));
path.line_to((66.45 + x, 121.06 + y));
path.close_path();
path.move_to((29.03 + x, 116.43 + y));
path.curve_to((29.03 + x, 116.43 + y), (31.01 + x, 116.94 + y), (30.36 + x, 117.38 + y));
path.curve_to((29.70 + x, 117.82 + y), (28.92 + x, 117.22 + y), (28.92 + x, 117.22 + y));
path.line_to((29.03 + x, 116.43 + y));
path.close_path();
path.move_to((29.81 + x, 112.66 + y));
path.curve_to((29.81 + x, 112.66 + y), (31.79 + x, 113.18 + y), (31.14 + x, 113.62 + y));
path.curve_to((30.49 + x, 114.05 + y), (29.70 + x, 113.45 + y), (29.70 + x, 113.45 + y));
path.line_to((29.81 + x, 112.66 + y));
path.close_path();
path.move_to((26.99 + x, 110.93 + y));
path.curve_to((26.99 + x, 110.93 + y), (28.97 + x, 111.45 + y), (28.32 + x, 111.89 + y));
path.curve_to((27.66 + x, 112.33 + y), (26.88 + x, 111.72 + y), (26.88 + x, 111.72 + y));
path.line_to((26.99 + x, 110.93 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((58.28 + x, 140.37 + y));
path.line_to((56.09 + x, 141.15 + y));
path.curve_to((55.30 + x, 141.15 + y), (50.91 + x, 142.56 + y), (48.71 + x, 146.49 + y));
path.curve_to((48.71 + x, 146.49 + y), (53.58 + x, 142.72 + y), (58.28 + x, 140.37 + y));
path.close_path();
path.move_to((92.70 + x, 176.72 + y));
path.curve_to((92.76 + x, 176.82 + y), (92.78 + x, 176.98 + y), (92.89 + x, 176.99 + y));
path.curve_to((93.15 + x, 177.01 + y), (93.64 + x, 177.12 + y), (93.59 + x, 176.88 + y));
path.curve_to((93.25 + x, 175.19 + y), (92.91 + x, 173.25 + y), (91.29 + x, 172.54 + y));
path.curve_to((91.04 + x, 172.43 + y), (90.47 + x, 172.59 + y), (90.44 + x, 172.94 + y));
path.curve_to((90.39 + x, 173.54 + y), (90.35 + x, 174.07 + y), (90.47 + x, 174.64 + y));
path.curve_to((90.59 + x, 175.20 + y), (91.43 + x, 175.20 + y), (91.79 + x, 174.66 + y));
path.curve_to((92.16 + x, 175.32 + y), (92.33 + x, 176.04 + y), (92.70 + x, 176.72 + y));
path.close_path();
path.move_to((88.36 + x, 178.58 + y));
path.curve_to((88.65 + x, 179.13 + y), (88.60 + x, 179.86 + y), (89.16 + x, 180.08 + y));
path.curve_to((89.45 + x, 180.20 + y), (90.17 + x, 179.82 + y), (90.01 + x, 179.39 + y));
path.curve_to((89.69 + x, 178.58 + y), (89.54 + x, 177.71 + y), (89.00 + x, 177.00 + y));
path.curve_to((88.92 + x, 176.89 + y), (89.01 + x, 176.69 + y), (88.95 + x, 176.56 + y));
path.curve_to((88.71 + x, 176.08 + y), (88.27 + x, 175.79 + y), (87.71 + x, 175.92 + y));
path.curve_to((87.28 + x, 176.78 + y), (87.73 + x, 177.62 + y), (88.32 + x, 178.29 + y));
path.curve_to((88.38 + x, 178.34 + y), (88.31 + x, 178.49 + y), (88.36 + x, 178.58 + y));
path.close_path();
path.move_to((72.82 + x, 176.54 + y));
path.curve_to((72.78 + x, 176.39 + y), (72.76 + x, 176.21 + y), (72.82 + x, 176.08 + y));
path.curve_to((73.03 + x, 175.68 + y), (73.34 + x, 175.24 + y), (73.21 + x, 174.84 + y));
path.curve_to((73.08 + x, 174.42 + y), (72.64 + x, 174.50 + y), (72.38 + x, 174.72 + y));
path.curve_to((71.94 + x, 175.11 + y), (71.92 + x, 175.83 + y), (71.65 + x, 176.36 + y));
path.curve_to((71.57 + x, 176.51 + y), (71.59 + x, 176.74 + y), (71.42 + x, 176.89 + y));
path.curve_to((71.23 + x, 177.05 + y), (71.06 + x, 177.65 + y), (71.10 + x, 177.87 + y));
path.curve_to((71.12 + x, 178.00 + y), (71.05 + x, 181.88 + y), (71.13 + x, 181.78 + y));
path.curve_to((71.38 + x, 181.50 + y), (72.57 + x, 177.67 + y), (72.60 + x, 177.32 + y));
path.curve_to((72.62 + x, 177.04 + y), (72.91 + x, 176.86 + y), (72.82 + x, 176.54 + y));
path.close_path();
path.move_to((62.76 + x, 173.88 + y));
path.curve_to((63.79 + x, 172.90 + y), (64.89 + x, 171.73 + y), (64.71 + x, 170.28 + y));
path.curve_to((64.67 + x, 169.89 + y), (63.97 + x, 170.10 + y), (63.90 + x, 170.43 + y));
path.curve_to((63.58 + x, 171.85 + y), (62.78 + x, 172.90 + y), (61.78 + x, 173.84 + y));
path.curve_to((60.91 + x, 174.64 + y), (60.18 + x, 177.13 + y), (60.09 + x, 177.33 + y));
path.curve_to((61.54 + x, 175.26 + y), (62.43 + x, 174.19 + y), (62.76 + x, 173.88 + y));
path.close_path();
path.move_to((57.43 + x, 171.54 + y));
path.curve_to((57.64 + x, 171.39 + y), (57.52 + x, 171.20 + y), (57.60 + x, 171.07 + y));
path.curve_to((57.98 + x, 170.49 + y), (58.49 + x, 170.01 + y), (58.50 + x, 169.32 + y));
path.curve_to((58.50 + x, 169.21 + y), (58.35 + x, 169.09 + y), (58.22 + x, 169.18 + y));
path.curve_to((58.11 + x, 169.25 + y), (57.97 + x, 169.30 + y), (57.93 + x, 169.36 + y));
path.curve_to((57.13 + x, 170.32 + y), (56.59 + x, 171.37 + y), (56.02 + x, 172.47 + y));
path.curve_to((55.95 + x, 172.61 + y), (55.50 + x, 174.37 + y), (55.62 + x, 174.41 + y));
path.curve_to((55.72 + x, 174.45 + y), (56.39 + x, 172.81 + y), (56.47 + x, 172.76 + y));
path.curve_to((56.97 + x, 172.50 + y), (56.97 + x, 171.86 + y), (57.43 + x, 171.54 + y));
path.close_path();
path.move_to((64.00 + x, 179.20 + y));
path.curve_to((64.17 + x, 178.86 + y), (64.79 + x, 178.39 + y), (64.75 + x, 178.04 + y));
path.curve_to((64.70 + x, 177.68 + y), (64.88 + x, 177.11 + y), (64.53 + x, 177.38 + y));
path.curve_to((64.03 + x, 177.75 + y), (62.68 + x, 178.28 + y), (62.57 + x, 180.56 + y));
path.curve_to((62.56 + x, 180.79 + y), (63.73 + x, 179.73 + y), (64.00 + x, 179.20 + y));
path.close_path();
path.move_to((69.66 + x, 172.46 + y));
path.curve_to((69.82 + x, 172.20 + y), (70.10 + x, 172.39 + y), (70.28 + x, 172.28 + y));
path.curve_to((70.53 + x, 172.14 + y), (70.77 + x, 171.92 + y), (70.89 + x, 171.66 + y));
path.curve_to((71.27 + x, 170.82 + y), (71.96 + x, 170.11 + y), (72.02 + x, 169.17 + y));
path.curve_to((71.43 + x, 168.62 + y), (71.17 + x, 169.42 + y), (70.92 + x, 169.79 + y));
path.curve_to((70.40 + x, 169.15 + y), (70.01 + x, 169.88 + y), (69.50 + x, 170.09 + y));
path.curve_to((69.47 + x, 170.10 + y), (69.39 + x, 169.96 + y), (69.36 + x, 169.98 + y));
path.curve_to((68.90 + x, 170.15 + y), (68.63 + x, 170.57 + y), (68.24 + x, 170.88 + y));
path.curve_to((68.17 + x, 170.93 + y), (68.01 + x, 170.86 + y), (67.95 + x, 170.91 + y));
path.curve_to((67.70 + x, 171.15 + y), (67.32 + x, 171.28 + y), (67.21 + x, 171.54 + y));
path.curve_to((66.77 + x, 172.60 + y), (65.54 + x, 173.43 + y), (64.80 + x, 176.39 + y));
path.curve_to((64.95 + x, 176.74 + y), (66.57 + x, 173.78 + y), (66.76 + x, 173.51 + y));
path.curve_to((67.09 + x, 173.04 + y), (67.13 + x, 174.16 + y), (67.63 + x, 173.90 + y));
path.curve_to((67.65 + x, 173.89 + y), (67.73 + x, 173.98 + y), (67.78 + x, 174.03 + y));
path.curve_to((67.86 + x, 173.92 + y), (67.94 + x, 173.83 + y), (68.09 + x, 173.88 + y));
path.curve_to((68.09 + x, 173.72 + y), (68.04 + x, 173.50 + y), (68.12 + x, 173.44 + y));
path.curve_to((68.61 + x, 173.06 + y), (68.57 + x, 172.64 + y), (68.88 + x, 172.15 + y));
path.curve_to((69.06 + x, 172.46 + y), (69.47 + x, 172.18 + y), (69.66 + x, 172.46 + y));
path.close_path();
path.move_to((93.13 + x, 193.81 + y));
path.curve_to((93.13 + x, 193.81 + y), (96.03 + x, 185.80 + y), (94.30 + x, 181.41 + y));
path.curve_to((94.30 + x, 181.41 + y), (98.78 + x, 189.88 + y), (96.97 + x, 194.28 + y));
path.curve_to((96.97 + x, 194.28 + y), (96.82 + x, 190.20 + y), (95.25 + x, 188.24 + y));
path.curve_to((95.25 + x, 188.24 + y), (93.68 + x, 193.26 + y), (93.13 + x, 193.81 + y));
path.close_path();
path.move_to((87.32 + x, 192.79 + y));
path.curve_to((87.32 + x, 192.79 + y), (89.44 + x, 189.34 + y), (86.30 + x, 182.12 + y));
path.curve_to((86.30 + x, 182.12 + y), (85.99 + x, 190.12 + y), (83.32 + x, 194.44 + y));
path.curve_to((83.32 + x, 194.44 + y), (88.89 + x, 186.51 + y), (87.32 + x, 192.79 + y));
path.close_path();
path.move_to((83.40 + x, 192.00 + y));
path.curve_to((83.40 + x, 192.00 + y), (83.32 + x, 184.16 + y), (83.48 + x, 182.98 + y));
path.curve_to((83.48 + x, 182.98 + y), (81.99 + x, 189.49 + y), (77.98 + x, 193.26 + y));
path.curve_to((77.98 + x, 193.26 + y), (83.63 + x, 188.55 + y), (83.40 + x, 192.00 + y));
path.close_path();
path.move_to((79.63 + x, 179.45 + y));
path.curve_to((79.63 + x, 179.45 + y), (81.98 + x, 184.78 + y), (78.06 + x, 192.00 + y));
path.curve_to((78.06 + x, 192.00 + y), (80.57 + x, 187.22 + y), (78.69 + x, 184.47 + y));
path.curve_to((78.69 + x, 184.47 + y), (79.71 + x, 183.14 + y), (79.63 + x, 179.45 + y));
path.close_path();
path.move_to((72.10 + x, 191.85 + y));
path.curve_to((72.10 + x, 191.85 + y), (71.70 + x, 185.73 + y), (72.41 + x, 184.86 + y));
path.curve_to((72.41 + x, 184.86 + y), (72.49 + x, 182.35 + y), (72.33 + x, 181.96 + y));
path.curve_to((72.33 + x, 181.96 + y), (73.90 + x, 179.53 + y), (73.98 + x, 182.43 + y));
path.curve_to((73.98 + x, 182.43 + y), (74.53 + x, 185.49 + y), (75.63 + x, 187.30 + y));
path.curve_to((75.63 + x, 187.30 + y), (77.04 + x, 189.41 + y), (76.96 + x, 191.93 + y));
path.curve_to((76.96 + x, 191.93 + y), (73.04 + x, 180.08 + y), (72.10 + x, 191.85 + y));
path.close_path();
path.move_to((70.68 + x, 181.02 + y));
path.curve_to((70.68 + x, 181.02 + y), (68.09 + x, 185.25 + y), (67.39 + x, 192.71 + y));
path.curve_to((67.39 + x, 192.71 + y), (66.84 + x, 190.28 + y), (68.33 + x, 184.63 + y));
path.curve_to((68.33 + x, 184.63 + y), (69.98 + x, 178.58 + y), (70.68 + x, 181.02 + y));
path.close_path();
path.move_to((62.13 + x, 188.79 + y));
path.curve_to((62.13 + x, 188.79 + y), (64.09 + x, 186.67 + y), (64.64 + x, 184.71 + y));
path.curve_to((64.64 + x, 184.71 + y), (66.05 + x, 178.51 + y), (63.54 + x, 181.88 + y));
path.curve_to((63.54 + x, 181.88 + y), (63.62 + x, 185.02 + y), (60.40 + x, 187.92 + y));
path.curve_to((60.40 + x, 187.92 + y), (62.29 + x, 186.98 + y), (62.13 + x, 188.79 + y));
path.close_path();
path.move_to((59.85 + x, 186.82 + y));
path.curve_to((59.85 + x, 186.82 + y), (61.19 + x, 180.00 + y), (61.50 + x, 179.68 + y));
path.curve_to((61.50 + x, 179.68 + y), (62.21 + x, 178.35 + y), (61.11 + x, 179.60 + y));
path.curve_to((61.11 + x, 179.60 + y), (57.66 + x, 187.14 + y), (56.09 + x, 189.73 + y));
path.curve_to((56.09 + x, 189.73 + y), (59.23 + x, 186.12 + y), (59.86 + x, 186.82 + y));
path.close_path();
path.move_to((57.58 + x, 180.31 + y));
path.curve_to((57.58 + x, 180.31 + y), (62.13 + x, 171.52 + y), (53.58 + x, 181.65 + y));
path.curve_to((53.58 + x, 181.65 + y), (57.89 + x, 177.80 + y), (57.58 + x, 180.31 + y));
path.close_path();
path.move_to((51.54 + x, 174.58 + y));
path.curve_to((51.54 + x, 174.58 + y), (53.42 + x, 167.21 + y), (54.44 + x, 167.28 + y));
path.line_to((55.07 + x, 167.91 + y));
path.curve_to((55.07 + x, 167.91 + y), (52.71 + x, 171.68 + y), (52.95 + x, 175.52 + y));
path.curve_to((52.95 + x, 175.52 + y), (52.71 + x, 171.76 + y), (51.54 + x, 174.58 + y));
path.close_path();
path.move_to((181.13 + x, 170.11 + y));
path.curve_to((181.13 + x, 170.11 + y), (176.43 + x, 166.18 + y), (175.44 + x, 164.81 + y));
path.curve_to((175.44 + x, 164.81 + y), (180.74 + x, 172.07 + y), (180.74 + x, 174.82 + y));
path.curve_to((180.74 + x, 174.82 + y), (181.72 + x, 171.87 + y), (181.13 + x, 170.11 + y));
path.close_path();
path.move_to((183.29 + x, 161.48 + y));
path.curve_to((183.29 + x, 161.48 + y), (175.05 + x, 155.59 + y), (173.68 + x, 152.65 + y));
path.curve_to((173.68 + x, 152.65 + y), (184.08 + x, 164.22 + y), (184.08 + x, 165.99 + y));
path.curve_to((184.08 + x, 165.99 + y), (184.27 + x, 162.46 + y), (183.29 + x, 161.48 + y));
path.close_path();
path.move_to((189.96 + x, 101.05 + y));
path.curve_to((189.96 + x, 101.05 + y), (185.25 + x, 97.91 + y), (184.67 + x, 98.70 + y));
path.curve_to((184.67 + x, 98.70 + y), (188.79 + x, 101.25 + y), (189.77 + x, 104.58 + y));
path.curve_to((189.77 + x, 104.58 + y), (189.18 + x, 101.05 + y), (189.96 + x, 101.05 + y));
path.close_path();
path.move_to((193.30 + x, 132.64 + y));
path.line_to((186.43 + x, 127.93 + y));
path.curve_to((186.43 + x, 127.93 + y), (193.89 + x, 134.60 + y), (194.08 + x, 136.17 + y));
path.line_to((193.30 + x, 132.64 + y));
path.close_path();
let brush = render_ctx.solid_brush(Color::rgba8(0xcc,0xcc,0xcc,0xff));
render_ctx.fill(path.clone(), &brush);
let mut path = BezPath::new();
path.move_to((39.98 + x, 123.81 + y));
path.line_to((48.61 + x, 125.67 + y));
path.move_to((59.70 + x, 187.37 + y));
path.curve_to((59.70 + x, 187.37 + y), (59.50 + x, 186.00 + y), (55.97 + x, 190.12 + y));
path.move_to((61.86 + x, 189.34 + y));
path.curve_to((61.86 + x, 189.34 + y), (62.64 + x, 186.78 + y), (60.09 + x, 188.55 + y));
path.move_to((83.04 + x, 192.67 + y));
path.curve_to((83.04 + x, 192.67 + y), (83.63 + x, 188.35 + y), (79.12 + x, 193.46 + y));
let brush = render_ctx.solid_brush(Color::rgba8(0x0,0x0,0x0,0xff));
render_ctx.stroke(path, &brush, 0.39);
}